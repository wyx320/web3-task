{
	"id": "653edf23f85c84318749c33c3f36b078",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"ShibStyleToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n// 简单模拟流动性池合约接口\r\ninterface IUniswapV2Pair {\r\n    function mint(address to) external returns (uint256 liquidity);\r\n    function burn(\r\n        address to\r\n    ) external returns (uint256 amount0, uint256 amount1);\r\n}\r\n\r\ncontract ShibStyleToken is ERC20 {\r\n    // constructor() ERC20(\"ShibStyleToken\", \"SST\") {}\r\n\r\n    // 代币税税率，例如 2% 表示 200（2 * 100）\r\n    uint256 public taxRate = 200;\r\n    // 代币税收接收地址\r\n    address public taxReceiver;\r\n    // 单笔交易最大金额\r\n    uint256 public maxTransactionAmount;\r\n    // 每日交易次数限制\r\n    uint256 public dailyTransactionCountLimit;\r\n    // 用户每日交易次数记录\r\n    mapping(address => uint256) dailyTransactionCount;\r\n    // 用户每日交易重置时间\r\n    mapping(address => uint256) lastTransactionDay;\r\n\r\n    // 流动性池地址\r\n    address public liquidityPool;\r\n\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 _initialSupply,\r\n        uint256 _maxTransactionAmount,\r\n        uint256 _dailyTransactionCountLimit,\r\n        address _taxReceiver,\r\n        address _liquidityPool\r\n    ) ERC20(name, symbol) {\r\n        _mint(msg.sender, _initialSupply);\r\n        maxTransactionAmount = _maxTransactionAmount;\r\n        dailyTransactionCountLimit = _dailyTransactionCountLimit;\r\n        taxReceiver = _taxReceiver;\r\n        liquidityPool = _liquidityPool;\r\n    }\r\n\r\n    // 重写 transfer 函数， 实现代币税和交易限制\r\n    function transfer(\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        address sender = msg.sender;\r\n        // 检查交易限制\r\n        _checkTransactionLimits(sender, amount);\r\n        // 计算税额\r\n        uint256 taxAmount = _calculateTax(amount);\r\n        // 扣除税额\r\n        uint256 totalAmount = amount + taxAmount;\r\n        require(\r\n            balanceOf(sender) >= totalAmount,\r\n            \"Insufficient balance including tax\"\r\n        );\r\n        // 转账原始金额到接收者\r\n        super.transfer(recipient, amount);\r\n        // 转账税额到税收接收地址\r\n        super.transfer(taxReceiver, taxAmount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        // 先检查 allowance\r\n        uint256 currentAllowance = allowance(sender, msg.sender);\r\n        require(\r\n            currentAllowance >= amount,\r\n            \"ERC20: transfer amount exceeds allowance\"\r\n        );\r\n\r\n        // 检查交易限制\r\n        _checkTransactionLimits(sender, amount);\r\n        // 计算税额\r\n        uint256 taxAmount = _calculateTax(amount);\r\n        // 计算需要扣除的总金额（包含税额）\r\n        uint256 totalAmount = amount + taxAmount;\r\n        require(\r\n            balanceOf(sender) >= totalAmount,\r\n            \"Insufficient balance including tax\"\r\n        );\r\n        // 使用内部 _transfer 函数避免重复检查 allowance\r\n        // 转账原始金额到接收者\r\n        _transfer(sender, recipient, amount);\r\n        // 转账税额到税收接收地址\r\n        _transfer(sender, taxReceiver, taxAmount);\r\n        // 更新 allowance（只减少请求的金额）\r\n        _approve(sender, msg.sender, currentAllowance - amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function _calculateTax(uint256 amount) internal view returns (uint256) {\r\n        return (amount * taxRate) / 10000; // 计算税额\r\n    }\r\n\r\n    // 检查交易限制\r\n    function _checkTransactionLimits(address sender, uint256 amount) internal {\r\n        // 检查单笔交易金额限制\r\n        require(\r\n            amount <= maxTransactionAmount,\r\n            \"Transaction amount exceeds limit\"\r\n        );\r\n\r\n        uint256 currentDay = block.timestamp / 1 days;\r\n        uint256 lastDay = lastTransactionDay[sender];\r\n        if (currentDay > lastDay) {\r\n            // 重置每日交易次数\r\n            dailyTransactionCount[sender] = 0;\r\n            lastTransactionDay[sender] = currentDay;\r\n        }\r\n\r\n        // 检查发送者每日交易次数限制\r\n        require(\r\n            dailyTransactionCount[sender] < dailyTransactionCountLimit,\r\n            \"Daily transaction limit exceeded\"\r\n        );\r\n\r\n        // 更新每日交易次数\r\n        dailyTransactionCount[sender]++;\r\n    }\r\n\r\n    // 添加流动性\r\n    function addLiquidity(\r\n        uint256 tokenAmount,\r\n        uint256 ethAmount\r\n    ) external payable {\r\n        require(liquidityPool != address(0), \"Liquidity pool not set\");\r\n        require(ethAmount == msg.value, \"ETH amount mismatch\");\r\n\r\n        // 将代币转移到流动性池\r\n        // 使用 _transfer 而不是 this.transfer 避免税收\r\n        _transfer(msg.sender, liquidityPool, tokenAmount);\r\n\r\n        // 将 ETH 发送到流动性池\r\n        (bool success, ) = liquidityPool.call{value: ethAmount}(\"\");\r\n        require(success, \"ETH transfer failed\");\r\n\r\n        // 调用流动性池合约的 mint 函数 添加流动性\r\n        IUniswapV2Pair(liquidityPool).mint(msg.sender);\r\n    }\r\n\r\n    // 移除流动性\r\n    function removeLiquidity(\r\n        uint256 liquidityTokens\r\n    ) external returns (uint256 amount0, uint256 amount1) {\r\n        require(liquidityPool != address(0), \"Liquidity pool not set\");\r\n\r\n        // 将流动池代币转移到流动性池（假设用户已经拥有这些代币）\r\n        IERC20(liquidityPool).transferFrom(\r\n            msg.sender,\r\n            liquidityPool,\r\n            liquidityTokens\r\n        );\r\n\r\n        // 调用流动性池合约的 burn 函数 移除流动性\r\n        (amount0, amount1) = IUniswapV2Pair(liquidityPool).burn(msg.sender);\r\n    }\r\n\r\n    // // 设置流动性池地址\r\n    // function setLiquidityPool(address _liquidityPool) external {\r\n    //     require(msg.sender == taxReceiver, \"Only tax receiver can set pool\");\r\n    //     require(_liquidityPool != address(0), \"Invalid pool address\");\r\n    //     liquidityPool = _liquidityPool;\r\n    // }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ShibStyleToken.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(address)": "89afcb44",
							"mint(address)": "6a627842"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShibStyleToken.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShibStyleToken.sol\":{\"keccak256\":\"0x967af25ae9f74643fbf20d2265b2bcc16860b303c951f0f79e8fb379af5ea72e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0440b4381ae2e6b01e73ce6c1469c9e9707239e6539b71a85795f7b2aa0824\",\"dweb:/ipfs/QmZSQyB8ZZUVatzpHDZdYkQVpJ5HP9AKy8wovNsPfgr1pw\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ShibStyleToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxTransactionAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dailyTransactionCountLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_taxReceiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_liquidityPool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dailyTransactionCountLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTransactionAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "liquidityTokens",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ShibStyleToken.sol\":510:6392  contract ShibStyleToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"ShibStyleToken.sol\":693:696  200 */\n  0xc8\n    /* \"ShibStyleToken.sol\":668:696  uint256 public taxRate = 200 */\n  0x05\n  sstore\n    /* \"ShibStyleToken.sol\":1178:1712  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ShibStyleToken.sol\":1446:1450  name */\n  dup7\n    /* \"ShibStyleToken.sol\":1452:1458  symbol */\n  dup7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ShibStyleToken.sol\":1471:1504  _mint(msg.sender, _initialSupply) */\n  tag_11\n    /* \"ShibStyleToken.sol\":1477:1487  msg.sender */\n  caller\n    /* \"ShibStyleToken.sol\":1489:1503  _initialSupply */\n  dup7\n    /* \"ShibStyleToken.sol\":1471:1476  _mint */\n  shl(0x20, tag_12)\n    /* \"ShibStyleToken.sol\":1471:1504  _mint(msg.sender, _initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"ShibStyleToken.sol\":1538:1559  _maxTransactionAmount */\n  dup4\n    /* \"ShibStyleToken.sol\":1515:1535  maxTransactionAmount */\n  0x07\n    /* \"ShibStyleToken.sol\":1515:1559  maxTransactionAmount = _maxTransactionAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ShibStyleToken.sol\":1599:1626  _dailyTransactionCountLimit */\n  dup3\n    /* \"ShibStyleToken.sol\":1570:1596  dailyTransactionCountLimit */\n  0x08\n    /* \"ShibStyleToken.sol\":1570:1626  dailyTransactionCountLimit = _dailyTransactionCountLimit */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ShibStyleToken.sol\":1651:1663  _taxReceiver */\n  dup2\n    /* \"ShibStyleToken.sol\":1637:1648  taxReceiver */\n  0x06\n  0x00\n    /* \"ShibStyleToken.sol\":1637:1663  taxReceiver = _taxReceiver */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ShibStyleToken.sol\":1690:1704  _liquidityPool */\n  dup1\n    /* \"ShibStyleToken.sol\":1674:1687  liquidityPool */\n  0x0b\n  0x00\n    /* \"ShibStyleToken.sol\":1674:1704  liquidityPool = _liquidityPool */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ShibStyleToken.sol\":1178:1712  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"ShibStyleToken.sol\":510:6392  contract ShibStyleToken is ERC20 {... */\n  jump(tag_13)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_12:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_15:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_18\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_19)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_24)\ntag_21:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_25:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_24:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_29:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_32:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_34:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_35:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_36:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_37:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_38:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_39:\n    /* \"#utility.yul\":957:984   */\n  tag_82\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_37\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_84\n  tag_38\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1030:1118   */\ntag_83:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_40:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_86\n  tag_32\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_87\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_41:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_90\n  tag_38\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1434:1490   */\ntag_89:\n    /* \"#utility.yul\":1508:1537   */\n  tag_91\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_37\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_42:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_43:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_94\n    /* \"#utility.yul\":1885:1934   */\n  tag_95\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_41\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1869:1935   */\n  tag_40\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_97\n  tag_36\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2010:2122   */\ntag_96:\n    /* \"#utility.yul\":2131:2183   */\n  tag_98\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_42\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_44:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_101\n  tag_35\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2292:2414   */\ntag_100:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_102\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_43\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_45:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_46:\n    /* \"#utility.yul\":2726:2750   */\n  tag_105\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_45\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  0x00\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_106:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_47:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_108\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_46\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:3056   */\ntag_48:\n    /* \"#utility.yul\":2967:2974   */\n  0x00\n    /* \"#utility.yul\":3007:3049   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3000:3005   */\n  dup3\n    /* \"#utility.yul\":2996:3050   */\n  and\n    /* \"#utility.yul\":2985:3050   */\n  swap1\n  pop\n    /* \"#utility.yul\":2930:3056   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3062:3158   */\ntag_49:\n    /* \"#utility.yul\":3099:3106   */\n  0x00\n    /* \"#utility.yul\":3128:3152   */\n  tag_111\n    /* \"#utility.yul\":3146:3151   */\n  dup3\n    /* \"#utility.yul\":3128:3152   */\n  tag_48\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3117:3152   */\n  swap1\n  pop\n    /* \"#utility.yul\":3062:3158   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3164:3286   */\ntag_50:\n    /* \"#utility.yul\":3237:3261   */\n  tag_113\n    /* \"#utility.yul\":3255:3260   */\n  dup2\n    /* \"#utility.yul\":3237:3261   */\n  tag_49\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3230:3235   */\n  dup2\n    /* \"#utility.yul\":3227:3262   */\n  eq\n    /* \"#utility.yul\":3217:3280   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  0x00\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3217:3280   */\ntag_114:\n    /* \"#utility.yul\":3164:3286   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3292:3435   */\ntag_51:\n    /* \"#utility.yul\":3349:3354   */\n  0x00\n    /* \"#utility.yul\":3380:3386   */\n  dup2\n    /* \"#utility.yul\":3374:3387   */\n  mload\n    /* \"#utility.yul\":3365:3387   */\n  swap1\n  pop\n    /* \"#utility.yul\":3396:3429   */\n  tag_116\n    /* \"#utility.yul\":3423:3428   */\n  dup2\n    /* \"#utility.yul\":3396:3429   */\n  tag_50\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3292:3435   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3441:5078   */\ntag_3:\n    /* \"#utility.yul\":3585:3591   */\n  0x00\n    /* \"#utility.yul\":3593:3599   */\n  0x00\n    /* \"#utility.yul\":3601:3607   */\n  0x00\n    /* \"#utility.yul\":3609:3615   */\n  0x00\n    /* \"#utility.yul\":3617:3623   */\n  0x00\n    /* \"#utility.yul\":3625:3631   */\n  0x00\n    /* \"#utility.yul\":3633:3639   */\n  0x00\n    /* \"#utility.yul\":3682:3685   */\n  0xe0\n    /* \"#utility.yul\":3670:3679   */\n  dup9\n    /* \"#utility.yul\":3661:3668   */\n  dup11\n    /* \"#utility.yul\":3657:3680   */\n  sub\n    /* \"#utility.yul\":3653:3686   */\n  slt\n    /* \"#utility.yul\":3650:3770   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":3689:3768   */\n  tag_119\n  tag_33\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3650:3770   */\ntag_118:\n    /* \"#utility.yul\":3830:3831   */\n  0x00\n    /* \"#utility.yul\":3819:3828   */\n  dup9\n    /* \"#utility.yul\":3815:3832   */\n  add\n    /* \"#utility.yul\":3809:3833   */\n  mload\n    /* \"#utility.yul\":3860:3878   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3852:3858   */\n  dup2\n    /* \"#utility.yul\":3849:3879   */\n  gt\n    /* \"#utility.yul\":3846:3963   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3882:3961   */\n  tag_121\n  tag_34\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3846:3963   */\ntag_120:\n    /* \"#utility.yul\":3987:4061   */\n  tag_122\n    /* \"#utility.yul\":4053:4060   */\n  dup11\n    /* \"#utility.yul\":4044:4050   */\n  dup3\n    /* \"#utility.yul\":4033:4042   */\n  dup12\n    /* \"#utility.yul\":4029:4051   */\n  add\n    /* \"#utility.yul\":3987:4061   */\n  tag_44\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3977:4061   */\n  swap8\n  pop\n    /* \"#utility.yul\":3780:4071   */\n  pop\n    /* \"#utility.yul\":4131:4133   */\n  0x20\n    /* \"#utility.yul\":4120:4129   */\n  dup9\n    /* \"#utility.yul\":4116:4134   */\n  add\n    /* \"#utility.yul\":4110:4135   */\n  mload\n    /* \"#utility.yul\":4162:4180   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4154:4160   */\n  dup2\n    /* \"#utility.yul\":4151:4181   */\n  gt\n    /* \"#utility.yul\":4148:4265   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4184:4263   */\n  tag_124\n  tag_34\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4148:4265   */\ntag_123:\n    /* \"#utility.yul\":4289:4363   */\n  tag_125\n    /* \"#utility.yul\":4355:4362   */\n  dup11\n    /* \"#utility.yul\":4346:4352   */\n  dup3\n    /* \"#utility.yul\":4335:4344   */\n  dup12\n    /* \"#utility.yul\":4331:4353   */\n  add\n    /* \"#utility.yul\":4289:4363   */\n  tag_44\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4279:4363   */\n  swap7\n  pop\n    /* \"#utility.yul\":4081:4373   */\n  pop\n    /* \"#utility.yul\":4412:4414   */\n  0x40\n    /* \"#utility.yul\":4438:4502   */\n  tag_126\n    /* \"#utility.yul\":4494:4501   */\n  dup11\n    /* \"#utility.yul\":4485:4491   */\n  dup3\n    /* \"#utility.yul\":4474:4483   */\n  dup12\n    /* \"#utility.yul\":4470:4492   */\n  add\n    /* \"#utility.yul\":4438:4502   */\n  tag_47\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4428:4502   */\n  swap6\n  pop\n    /* \"#utility.yul\":4383:4512   */\n  pop\n    /* \"#utility.yul\":4551:4553   */\n  0x60\n    /* \"#utility.yul\":4577:4641   */\n  tag_127\n    /* \"#utility.yul\":4633:4640   */\n  dup11\n    /* \"#utility.yul\":4624:4630   */\n  dup3\n    /* \"#utility.yul\":4613:4622   */\n  dup12\n    /* \"#utility.yul\":4609:4631   */\n  add\n    /* \"#utility.yul\":4577:4641   */\n  tag_47\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4567:4641   */\n  swap5\n  pop\n    /* \"#utility.yul\":4522:4651   */\n  pop\n    /* \"#utility.yul\":4690:4693   */\n  0x80\n    /* \"#utility.yul\":4717:4781   */\n  tag_128\n    /* \"#utility.yul\":4773:4780   */\n  dup11\n    /* \"#utility.yul\":4764:4770   */\n  dup3\n    /* \"#utility.yul\":4753:4762   */\n  dup12\n    /* \"#utility.yul\":4749:4771   */\n  add\n    /* \"#utility.yul\":4717:4781   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4707:4781   */\n  swap4\n  pop\n    /* \"#utility.yul\":4661:4791   */\n  pop\n    /* \"#utility.yul\":4830:4833   */\n  0xa0\n    /* \"#utility.yul\":4857:4921   */\n  tag_129\n    /* \"#utility.yul\":4913:4920   */\n  dup11\n    /* \"#utility.yul\":4904:4910   */\n  dup3\n    /* \"#utility.yul\":4893:4902   */\n  dup12\n    /* \"#utility.yul\":4889:4911   */\n  add\n    /* \"#utility.yul\":4857:4921   */\n  tag_51\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4847:4921   */\n  swap3\n  pop\n    /* \"#utility.yul\":4801:4931   */\n  pop\n    /* \"#utility.yul\":4970:4973   */\n  0xc0\n    /* \"#utility.yul\":4997:5061   */\n  tag_130\n    /* \"#utility.yul\":5053:5060   */\n  dup11\n    /* \"#utility.yul\":5044:5050   */\n  dup3\n    /* \"#utility.yul\":5033:5042   */\n  dup12\n    /* \"#utility.yul\":5029:5051   */\n  add\n    /* \"#utility.yul\":4997:5061   */\n  tag_51\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4987:5061   */\n  swap2\n  pop\n    /* \"#utility.yul\":4941:5071   */\n  pop\n    /* \"#utility.yul\":3441:5078   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5084:5183   */\ntag_52:\n    /* \"#utility.yul\":5136:5142   */\n  0x00\n    /* \"#utility.yul\":5170:5175   */\n  dup2\n    /* \"#utility.yul\":5164:5176   */\n  mload\n    /* \"#utility.yul\":5154:5176   */\n  swap1\n  pop\n    /* \"#utility.yul\":5084:5183   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5189:5369   */\ntag_53:\n    /* \"#utility.yul\":5237:5314   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5234:5235   */\n  0x00\n    /* \"#utility.yul\":5227:5315   */\n  mstore\n    /* \"#utility.yul\":5334:5338   */\n  0x22\n    /* \"#utility.yul\":5331:5332   */\n  0x04\n    /* \"#utility.yul\":5324:5339   */\n  mstore\n    /* \"#utility.yul\":5358:5362   */\n  0x24\n    /* \"#utility.yul\":5355:5356   */\n  0x00\n    /* \"#utility.yul\":5348:5363   */\n  revert\n    /* \"#utility.yul\":5375:5695   */\ntag_54:\n    /* \"#utility.yul\":5419:5425   */\n  0x00\n    /* \"#utility.yul\":5456:5457   */\n  0x02\n    /* \"#utility.yul\":5450:5454   */\n  dup3\n    /* \"#utility.yul\":5446:5458   */\n  div\n    /* \"#utility.yul\":5436:5458   */\n  swap1\n  pop\n    /* \"#utility.yul\":5503:5504   */\n  0x01\n    /* \"#utility.yul\":5497:5501   */\n  dup3\n    /* \"#utility.yul\":5493:5505   */\n  and\n    /* \"#utility.yul\":5524:5542   */\n  dup1\n    /* \"#utility.yul\":5514:5595   */\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5580:5584   */\n  0x7f\n    /* \"#utility.yul\":5572:5578   */\n  dup3\n    /* \"#utility.yul\":5568:5585   */\n  and\n    /* \"#utility.yul\":5558:5585   */\n  swap2\n  pop\n    /* \"#utility.yul\":5514:5595   */\ntag_134:\n    /* \"#utility.yul\":5642:5644   */\n  0x20\n    /* \"#utility.yul\":5634:5640   */\n  dup3\n    /* \"#utility.yul\":5631:5645   */\n  lt\n    /* \"#utility.yul\":5611:5629   */\n  dup2\n    /* \"#utility.yul\":5608:5646   */\n  sub\n    /* \"#utility.yul\":5605:5689   */\n  tag_135\n  jumpi\n    /* \"#utility.yul\":5661:5679   */\n  tag_136\n  tag_53\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5605:5689   */\ntag_135:\n    /* \"#utility.yul\":5426:5695   */\n  pop\n    /* \"#utility.yul\":5375:5695   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5701:5842   */\ntag_55:\n    /* \"#utility.yul\":5750:5754   */\n  0x00\n    /* \"#utility.yul\":5773:5776   */\n  dup2\n    /* \"#utility.yul\":5765:5776   */\n  swap1\n  pop\n    /* \"#utility.yul\":5796:5799   */\n  dup2\n    /* \"#utility.yul\":5793:5794   */\n  0x00\n    /* \"#utility.yul\":5786:5800   */\n  mstore\n    /* \"#utility.yul\":5830:5834   */\n  0x20\n    /* \"#utility.yul\":5827:5828   */\n  0x00\n    /* \"#utility.yul\":5817:5835   */\n  keccak256\n    /* \"#utility.yul\":5809:5835   */\n  swap1\n  pop\n    /* \"#utility.yul\":5701:5842   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5848:5941   */\ntag_56:\n    /* \"#utility.yul\":5885:5891   */\n  0x00\n    /* \"#utility.yul\":5932:5934   */\n  0x20\n    /* \"#utility.yul\":5927:5929   */\n  0x1f\n    /* \"#utility.yul\":5920:5925   */\n  dup4\n    /* \"#utility.yul\":5916:5930   */\n  add\n    /* \"#utility.yul\":5912:5935   */\n  div\n    /* \"#utility.yul\":5902:5935   */\n  swap1\n  pop\n    /* \"#utility.yul\":5848:5941   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5947:6054   */\ntag_57:\n    /* \"#utility.yul\":5991:5999   */\n  0x00\n    /* \"#utility.yul\":6041:6046   */\n  dup3\n    /* \"#utility.yul\":6035:6039   */\n  dup3\n    /* \"#utility.yul\":6031:6047   */\n  shl\n    /* \"#utility.yul\":6010:6047   */\n  swap1\n  pop\n    /* \"#utility.yul\":5947:6054   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6060:6453   */\ntag_58:\n    /* \"#utility.yul\":6129:6135   */\n  0x00\n    /* \"#utility.yul\":6179:6180   */\n  0x08\n    /* \"#utility.yul\":6167:6177   */\n  dup4\n    /* \"#utility.yul\":6163:6181   */\n  mul\n    /* \"#utility.yul\":6202:6299   */\n  tag_141\n    /* \"#utility.yul\":6232:6298   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6221:6230   */\n  dup3\n    /* \"#utility.yul\":6202:6299   */\n  tag_57\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6320:6359   */\n  tag_142\n    /* \"#utility.yul\":6350:6358   */\n  dup7\n    /* \"#utility.yul\":6339:6348   */\n  dup4\n    /* \"#utility.yul\":6320:6359   */\n  tag_57\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6308:6359   */\n  swap6\n  pop\n    /* \"#utility.yul\":6392:6396   */\n  dup1\n    /* \"#utility.yul\":6388:6397   */\n  not\n    /* \"#utility.yul\":6381:6386   */\n  dup5\n    /* \"#utility.yul\":6377:6398   */\n  and\n    /* \"#utility.yul\":6368:6398   */\n  swap4\n  pop\n    /* \"#utility.yul\":6441:6445   */\n  dup1\n    /* \"#utility.yul\":6431:6439   */\n  dup7\n    /* \"#utility.yul\":6427:6446   */\n  and\n    /* \"#utility.yul\":6420:6425   */\n  dup5\n    /* \"#utility.yul\":6417:6447   */\n  or\n    /* \"#utility.yul\":6407:6447   */\n  swap3\n  pop\n    /* \"#utility.yul\":6136:6453   */\n  pop\n  pop\n    /* \"#utility.yul\":6060:6453   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6459:6519   */\ntag_59:\n    /* \"#utility.yul\":6487:6490   */\n  0x00\n    /* \"#utility.yul\":6508:6513   */\n  dup2\n    /* \"#utility.yul\":6501:6513   */\n  swap1\n  pop\n    /* \"#utility.yul\":6459:6519   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6525:6667   */\ntag_60:\n    /* \"#utility.yul\":6575:6584   */\n  0x00\n    /* \"#utility.yul\":6608:6661   */\n  tag_145\n    /* \"#utility.yul\":6626:6660   */\n  tag_146\n    /* \"#utility.yul\":6635:6659   */\n  tag_147\n    /* \"#utility.yul\":6653:6658   */\n  dup5\n    /* \"#utility.yul\":6635:6659   */\n  tag_45\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6626:6660   */\n  tag_59\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6608:6661   */\n  tag_45\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6595:6661   */\n  swap1\n  pop\n    /* \"#utility.yul\":6525:6667   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6673:6748   */\ntag_61:\n    /* \"#utility.yul\":6716:6719   */\n  0x00\n    /* \"#utility.yul\":6737:6742   */\n  dup2\n    /* \"#utility.yul\":6730:6742   */\n  swap1\n  pop\n    /* \"#utility.yul\":6673:6748   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6754:7023   */\ntag_62:\n    /* \"#utility.yul\":6864:6903   */\n  tag_150\n    /* \"#utility.yul\":6895:6902   */\n  dup4\n    /* \"#utility.yul\":6864:6903   */\n  tag_60\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6925:7016   */\n  tag_151\n    /* \"#utility.yul\":6974:7015   */\n  tag_152\n    /* \"#utility.yul\":6998:7014   */\n  dup3\n    /* \"#utility.yul\":6974:7015   */\n  tag_61\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6966:6972   */\n  dup5\n    /* \"#utility.yul\":6959:6963   */\n  dup5\n    /* \"#utility.yul\":6953:6964   */\n  sload\n    /* \"#utility.yul\":6925:7016   */\n  tag_58\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6919:6923   */\n  dup3\n    /* \"#utility.yul\":6912:7017   */\n  sstore\n    /* \"#utility.yul\":6830:7023   */\n  pop\n    /* \"#utility.yul\":6754:7023   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7029:7102   */\ntag_63:\n    /* \"#utility.yul\":7074:7077   */\n  0x00\n    /* \"#utility.yul\":7095:7096   */\n  0x00\n    /* \"#utility.yul\":7088:7096   */\n  swap1\n  pop\n    /* \"#utility.yul\":7029:7102   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7108:7297   */\ntag_64:\n    /* \"#utility.yul\":7185:7217   */\n  tag_155\n  tag_63\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7226:7291   */\n  tag_156\n    /* \"#utility.yul\":7284:7290   */\n  dup2\n    /* \"#utility.yul\":7276:7282   */\n  dup5\n    /* \"#utility.yul\":7270:7274   */\n  dup5\n    /* \"#utility.yul\":7226:7291   */\n  tag_62\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7161:7297   */\n  pop\n    /* \"#utility.yul\":7108:7297   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7303:7489   */\ntag_65:\n    /* \"#utility.yul\":7363:7483   */\ntag_158:\n    /* \"#utility.yul\":7380:7383   */\n  dup2\n    /* \"#utility.yul\":7373:7378   */\n  dup2\n    /* \"#utility.yul\":7370:7384   */\n  lt\n    /* \"#utility.yul\":7363:7483   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":7434:7473   */\n  tag_161\n    /* \"#utility.yul\":7471:7472   */\n  0x00\n    /* \"#utility.yul\":7464:7469   */\n  dup3\n    /* \"#utility.yul\":7434:7473   */\n  tag_64\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7407:7408   */\n  0x01\n    /* \"#utility.yul\":7400:7405   */\n  dup2\n    /* \"#utility.yul\":7396:7409   */\n  add\n    /* \"#utility.yul\":7387:7409   */\n  swap1\n  pop\n    /* \"#utility.yul\":7363:7483   */\n  jump(tag_158)\ntag_160:\n    /* \"#utility.yul\":7303:7489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7495:8038   */\ntag_66:\n    /* \"#utility.yul\":7596:7598   */\n  0x1f\n    /* \"#utility.yul\":7591:7594   */\n  dup3\n    /* \"#utility.yul\":7588:7599   */\n  gt\n    /* \"#utility.yul\":7585:8031   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":7630:7668   */\n  tag_164\n    /* \"#utility.yul\":7662:7667   */\n  dup2\n    /* \"#utility.yul\":7630:7668   */\n  tag_55\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7714:7743   */\n  tag_165\n    /* \"#utility.yul\":7732:7742   */\n  dup5\n    /* \"#utility.yul\":7714:7743   */\n  tag_56\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7704:7712   */\n  dup2\n    /* \"#utility.yul\":7700:7744   */\n  add\n    /* \"#utility.yul\":7897:7899   */\n  0x20\n    /* \"#utility.yul\":7885:7895   */\n  dup6\n    /* \"#utility.yul\":7882:7900   */\n  lt\n    /* \"#utility.yul\":7879:7928   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":7918:7926   */\n  dup2\n    /* \"#utility.yul\":7903:7926   */\n  swap1\n  pop\n    /* \"#utility.yul\":7879:7928   */\ntag_166:\n    /* \"#utility.yul\":7941:8021   */\n  tag_167\n    /* \"#utility.yul\":7997:8019   */\n  tag_168\n    /* \"#utility.yul\":8015:8018   */\n  dup6\n    /* \"#utility.yul\":7997:8019   */\n  tag_56\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7987:7995   */\n  dup4\n    /* \"#utility.yul\":7983:8020   */\n  add\n    /* \"#utility.yul\":7970:7981   */\n  dup3\n    /* \"#utility.yul\":7941:8021   */\n  tag_65\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7600:8031   */\n  pop\n  pop\n    /* \"#utility.yul\":7585:8031   */\ntag_163:\n    /* \"#utility.yul\":7495:8038   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8044:8161   */\ntag_67:\n    /* \"#utility.yul\":8098:8106   */\n  0x00\n    /* \"#utility.yul\":8148:8153   */\n  dup3\n    /* \"#utility.yul\":8142:8146   */\n  dup3\n    /* \"#utility.yul\":8138:8154   */\n  shr\n    /* \"#utility.yul\":8117:8154   */\n  swap1\n  pop\n    /* \"#utility.yul\":8044:8161   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8167:8336   */\ntag_68:\n    /* \"#utility.yul\":8211:8217   */\n  0x00\n    /* \"#utility.yul\":8244:8295   */\n  tag_171\n    /* \"#utility.yul\":8292:8293   */\n  0x00\n    /* \"#utility.yul\":8288:8294   */\n  not\n    /* \"#utility.yul\":8280:8285   */\n  dup5\n    /* \"#utility.yul\":8277:8278   */\n  0x08\n    /* \"#utility.yul\":8273:8286   */\n  mul\n    /* \"#utility.yul\":8244:8295   */\n  tag_67\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8240:8296   */\n  not\n    /* \"#utility.yul\":8325:8329   */\n  dup1\n    /* \"#utility.yul\":8319:8323   */\n  dup4\n    /* \"#utility.yul\":8315:8330   */\n  and\n    /* \"#utility.yul\":8305:8330   */\n  swap2\n  pop\n    /* \"#utility.yul\":8218:8336   */\n  pop\n    /* \"#utility.yul\":8167:8336   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8341:8636   */\ntag_69:\n    /* \"#utility.yul\":8417:8421   */\n  0x00\n    /* \"#utility.yul\":8563:8592   */\n  tag_173\n    /* \"#utility.yul\":8588:8591   */\n  dup4\n    /* \"#utility.yul\":8582:8586   */\n  dup4\n    /* \"#utility.yul\":8563:8592   */\n  tag_68\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8555:8592   */\n  swap2\n  pop\n    /* \"#utility.yul\":8625:8628   */\n  dup3\n    /* \"#utility.yul\":8622:8623   */\n  0x02\n    /* \"#utility.yul\":8618:8629   */\n  mul\n    /* \"#utility.yul\":8612:8616   */\n  dup3\n    /* \"#utility.yul\":8609:8630   */\n  or\n    /* \"#utility.yul\":8601:8630   */\n  swap1\n  pop\n    /* \"#utility.yul\":8341:8636   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8641:10036   */\ntag_8:\n    /* \"#utility.yul\":8758:8795   */\n  tag_175\n    /* \"#utility.yul\":8791:8794   */\n  dup3\n    /* \"#utility.yul\":8758:8795   */\n  tag_52\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8860:8878   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8852:8858   */\n  dup2\n    /* \"#utility.yul\":8849:8879   */\n  gt\n    /* \"#utility.yul\":8846:8902   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":8882:8900   */\n  tag_177\n  tag_38\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8846:8902   */\ntag_176:\n    /* \"#utility.yul\":8926:8964   */\n  tag_178\n    /* \"#utility.yul\":8958:8962   */\n  dup3\n    /* \"#utility.yul\":8952:8963   */\n  sload\n    /* \"#utility.yul\":8926:8964   */\n  tag_54\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":9011:9078   */\n  tag_179\n    /* \"#utility.yul\":9071:9077   */\n  dup3\n    /* \"#utility.yul\":9063:9069   */\n  dup3\n    /* \"#utility.yul\":9057:9061   */\n  dup6\n    /* \"#utility.yul\":9011:9078   */\n  tag_66\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":9105:9106   */\n  0x00\n    /* \"#utility.yul\":9129:9133   */\n  0x20\n    /* \"#utility.yul\":9116:9133   */\n  swap1\n  pop\n    /* \"#utility.yul\":9161:9163   */\n  0x1f\n    /* \"#utility.yul\":9153:9159   */\n  dup4\n    /* \"#utility.yul\":9150:9164   */\n  gt\n    /* \"#utility.yul\":9178:9179   */\n  0x01\n    /* \"#utility.yul\":9173:9791   */\n  dup2\n  eq\n  tag_181\n  jumpi\n    /* \"#utility.yul\":9835:9836   */\n  0x00\n    /* \"#utility.yul\":9852:9858   */\n  dup5\n    /* \"#utility.yul\":9849:9926   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":9901:9910   */\n  dup3\n    /* \"#utility.yul\":9896:9899   */\n  dup8\n    /* \"#utility.yul\":9892:9911   */\n  add\n    /* \"#utility.yul\":9886:9912   */\n  mload\n    /* \"#utility.yul\":9877:9912   */\n  swap1\n  pop\n    /* \"#utility.yul\":9849:9926   */\ntag_182:\n    /* \"#utility.yul\":9952:10019   */\n  tag_183\n    /* \"#utility.yul\":10012:10018   */\n  dup6\n    /* \"#utility.yul\":10005:10010   */\n  dup3\n    /* \"#utility.yul\":9952:10019   */\n  tag_69\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9946:9950   */\n  dup7\n    /* \"#utility.yul\":9939:10020   */\n  sstore\n    /* \"#utility.yul\":9808:10030   */\n  pop\n    /* \"#utility.yul\":9143:10030   */\n  jump(tag_180)\n    /* \"#utility.yul\":9173:9791   */\ntag_181:\n    /* \"#utility.yul\":9225:9229   */\n  0x1f\n    /* \"#utility.yul\":9221:9230   */\n  not\n    /* \"#utility.yul\":9213:9219   */\n  dup5\n    /* \"#utility.yul\":9209:9231   */\n  and\n    /* \"#utility.yul\":9259:9296   */\n  tag_184\n    /* \"#utility.yul\":9291:9295   */\n  dup7\n    /* \"#utility.yul\":9259:9296   */\n  tag_55\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9318:9319   */\n  0x00\n    /* \"#utility.yul\":9332:9540   */\ntag_185:\n    /* \"#utility.yul\":9346:9353   */\n  dup3\n    /* \"#utility.yul\":9343:9344   */\n  dup2\n    /* \"#utility.yul\":9340:9354   */\n  lt\n    /* \"#utility.yul\":9332:9540   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":9425:9434   */\n  dup5\n    /* \"#utility.yul\":9420:9423   */\n  dup10\n    /* \"#utility.yul\":9416:9435   */\n  add\n    /* \"#utility.yul\":9410:9436   */\n  mload\n    /* \"#utility.yul\":9402:9408   */\n  dup3\n    /* \"#utility.yul\":9395:9437   */\n  sstore\n    /* \"#utility.yul\":9476:9477   */\n  0x01\n    /* \"#utility.yul\":9468:9474   */\n  dup3\n    /* \"#utility.yul\":9464:9478   */\n  add\n    /* \"#utility.yul\":9454:9478   */\n  swap2\n  pop\n    /* \"#utility.yul\":9523:9525   */\n  0x20\n    /* \"#utility.yul\":9512:9521   */\n  dup6\n    /* \"#utility.yul\":9508:9526   */\n  add\n    /* \"#utility.yul\":9495:9526   */\n  swap5\n  pop\n    /* \"#utility.yul\":9369:9373   */\n  0x20\n    /* \"#utility.yul\":9366:9367   */\n  dup2\n    /* \"#utility.yul\":9362:9374   */\n  add\n    /* \"#utility.yul\":9357:9374   */\n  swap1\n  pop\n    /* \"#utility.yul\":9332:9540   */\n  jump(tag_185)\ntag_187:\n    /* \"#utility.yul\":9568:9574   */\n  dup7\n    /* \"#utility.yul\":9559:9566   */\n  dup4\n    /* \"#utility.yul\":9556:9575   */\n  lt\n    /* \"#utility.yul\":9553:9732   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":9626:9635   */\n  dup5\n    /* \"#utility.yul\":9621:9624   */\n  dup10\n    /* \"#utility.yul\":9617:9636   */\n  add\n    /* \"#utility.yul\":9611:9637   */\n  mload\n    /* \"#utility.yul\":9669:9717   */\n  tag_189\n    /* \"#utility.yul\":9711:9715   */\n  0x1f\n    /* \"#utility.yul\":9703:9709   */\n  dup10\n    /* \"#utility.yul\":9699:9716   */\n  and\n    /* \"#utility.yul\":9688:9697   */\n  dup3\n    /* \"#utility.yul\":9669:9717   */\n  tag_68\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9661:9667   */\n  dup4\n    /* \"#utility.yul\":9654:9718   */\n  sstore\n    /* \"#utility.yul\":9576:9732   */\n  pop\n    /* \"#utility.yul\":9553:9732   */\ntag_188:\n    /* \"#utility.yul\":9778:9779   */\n  0x01\n    /* \"#utility.yul\":9774:9775   */\n  0x02\n    /* \"#utility.yul\":9766:9772   */\n  dup9\n    /* \"#utility.yul\":9762:9776   */\n  mul\n    /* \"#utility.yul\":9758:9780   */\n  add\n    /* \"#utility.yul\":9752:9756   */\n  dup9\n    /* \"#utility.yul\":9745:9781   */\n  sstore\n    /* \"#utility.yul\":9180:9791   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9143:10030   */\ntag_180:\n  pop\n    /* \"#utility.yul\":8733:10036   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8641:10036   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10042:10160   */\ntag_70:\n    /* \"#utility.yul\":10129:10153   */\n  tag_191\n    /* \"#utility.yul\":10147:10152   */\n  dup2\n    /* \"#utility.yul\":10129:10153   */\n  tag_49\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":10124:10127   */\n  dup3\n    /* \"#utility.yul\":10117:10154   */\n  mstore\n    /* \"#utility.yul\":10042:10160   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10166:10388   */\ntag_17:\n    /* \"#utility.yul\":10259:10263   */\n  0x00\n    /* \"#utility.yul\":10297:10299   */\n  0x20\n    /* \"#utility.yul\":10286:10295   */\n  dup3\n    /* \"#utility.yul\":10282:10300   */\n  add\n    /* \"#utility.yul\":10274:10300   */\n  swap1\n  pop\n    /* \"#utility.yul\":10310:10381   */\n  tag_193\n    /* \"#utility.yul\":10378:10379   */\n  0x00\n    /* \"#utility.yul\":10367:10376   */\n  dup4\n    /* \"#utility.yul\":10363:10380   */\n  add\n    /* \"#utility.yul\":10354:10360   */\n  dup5\n    /* \"#utility.yul\":10310:10381   */\n  tag_70\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":10166:10388   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10394:10574   */\ntag_71:\n    /* \"#utility.yul\":10442:10519   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10439:10440   */\n  0x00\n    /* \"#utility.yul\":10432:10520   */\n  mstore\n    /* \"#utility.yul\":10539:10543   */\n  0x11\n    /* \"#utility.yul\":10536:10537   */\n  0x04\n    /* \"#utility.yul\":10529:10544   */\n  mstore\n    /* \"#utility.yul\":10563:10567   */\n  0x24\n    /* \"#utility.yul\":10560:10561   */\n  0x00\n    /* \"#utility.yul\":10553:10568   */\n  revert\n    /* \"#utility.yul\":10580:10771   */\ntag_23:\n    /* \"#utility.yul\":10620:10623   */\n  0x00\n    /* \"#utility.yul\":10639:10659   */\n  tag_196\n    /* \"#utility.yul\":10657:10658   */\n  dup3\n    /* \"#utility.yul\":10639:10659   */\n  tag_45\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":10634:10659   */\n  swap2\n  pop\n    /* \"#utility.yul\":10673:10693   */\n  tag_197\n    /* \"#utility.yul\":10691:10692   */\n  dup4\n    /* \"#utility.yul\":10673:10693   */\n  tag_45\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10668:10693   */\n  swap3\n  pop\n    /* \"#utility.yul\":10716:10717   */\n  dup3\n    /* \"#utility.yul\":10713:10714   */\n  dup3\n    /* \"#utility.yul\":10709:10718   */\n  add\n    /* \"#utility.yul\":10702:10718   */\n  swap1\n  pop\n    /* \"#utility.yul\":10737:10740   */\n  dup1\n    /* \"#utility.yul\":10734:10735   */\n  dup3\n    /* \"#utility.yul\":10731:10741   */\n  gt\n    /* \"#utility.yul\":10728:10764   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":10744:10762   */\n  tag_199\n  tag_71\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10728:10764   */\ntag_198:\n    /* \"#utility.yul\":10580:10771   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10777:10895   */\ntag_72:\n    /* \"#utility.yul\":10864:10888   */\n  tag_201\n    /* \"#utility.yul\":10882:10887   */\n  dup2\n    /* \"#utility.yul\":10864:10888   */\n  tag_45\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10859:10862   */\n  dup3\n    /* \"#utility.yul\":10852:10889   */\n  mstore\n    /* \"#utility.yul\":10777:10895   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10901:11343   */\ntag_27:\n    /* \"#utility.yul\":11050:11054   */\n  0x00\n    /* \"#utility.yul\":11088:11090   */\n  0x60\n    /* \"#utility.yul\":11077:11086   */\n  dup3\n    /* \"#utility.yul\":11073:11091   */\n  add\n    /* \"#utility.yul\":11065:11091   */\n  swap1\n  pop\n    /* \"#utility.yul\":11101:11172   */\n  tag_203\n    /* \"#utility.yul\":11169:11170   */\n  0x00\n    /* \"#utility.yul\":11158:11167   */\n  dup4\n    /* \"#utility.yul\":11154:11171   */\n  add\n    /* \"#utility.yul\":11145:11151   */\n  dup7\n    /* \"#utility.yul\":11101:11172   */\n  tag_70\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":11182:11254   */\n  tag_204\n    /* \"#utility.yul\":11250:11252   */\n  0x20\n    /* \"#utility.yul\":11239:11248   */\n  dup4\n    /* \"#utility.yul\":11235:11253   */\n  add\n    /* \"#utility.yul\":11226:11232   */\n  dup6\n    /* \"#utility.yul\":11182:11254   */\n  tag_72\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":11264:11336   */\n  tag_205\n    /* \"#utility.yul\":11332:11334   */\n  0x40\n    /* \"#utility.yul\":11321:11330   */\n  dup4\n    /* \"#utility.yul\":11317:11335   */\n  add\n    /* \"#utility.yul\":11308:11314   */\n  dup5\n    /* \"#utility.yul\":11264:11336   */\n  tag_72\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":10901:11343   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11349:11571   */\ntag_31:\n    /* \"#utility.yul\":11442:11446   */\n  0x00\n    /* \"#utility.yul\":11480:11482   */\n  0x20\n    /* \"#utility.yul\":11469:11478   */\n  dup3\n    /* \"#utility.yul\":11465:11483   */\n  add\n    /* \"#utility.yul\":11457:11483   */\n  swap1\n  pop\n    /* \"#utility.yul\":11493:11564   */\n  tag_207\n    /* \"#utility.yul\":11561:11562   */\n  0x00\n    /* \"#utility.yul\":11550:11559   */\n  dup4\n    /* \"#utility.yul\":11546:11563   */\n  add\n    /* \"#utility.yul\":11537:11543   */\n  dup5\n    /* \"#utility.yul\":11493:11564   */\n  tag_72\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":11349:11571   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"ShibStyleToken.sol\":510:6392  contract ShibStyleToken is ERC20 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ShibStyleToken.sol\":510:6392  contract ShibStyleToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc8c8ebe4\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc8c8ebe4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe6ef73d6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf450c23a\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x313ce567\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x665a11ca\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x771a3a1d\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShibStyleToken.sol\":2515:3693  function transferFrom(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      revert(0x00, 0x00)\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShibStyleToken.sol\":1141:1169  address public liquidityPool */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      revert(0x00, 0x00)\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShibStyleToken.sol\":668:696  uint256 public taxRate = 200 */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      revert(0x00, 0x00)\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      revert(0x00, 0x00)\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShibStyleToken.sol\":5489:6071  function removeLiquidity(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      revert(0x00, 0x00)\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShibStyleToken.sol\":4745:5457  function addLiquidity(... */\n    tag_12:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"ShibStyleToken.sol\":1785:2507  function transfer(... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      revert(0x00, 0x00)\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShibStyleToken.sol\":802:837  uint256 public maxTransactionAmount */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      revert(0x00, 0x00)\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      revert(0x00, 0x00)\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShibStyleToken.sol\":736:762  address public taxReceiver */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      revert(0x00, 0x00)\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ShibStyleToken.sol\":877:918  uint256 public dailyTransactionCountLimit */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      revert(0x00, 0x00)\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_110\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_112\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_113\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ShibStyleToken.sol\":2515:3693  function transferFrom(... */\n    tag_42:\n        /* \"ShibStyleToken.sol\":2647:2651  bool */\n      0x00\n        /* \"ShibStyleToken.sol\":2696:2720  uint256 currentAllowance */\n      0x00\n        /* \"ShibStyleToken.sol\":2723:2752  allowance(sender, msg.sender) */\n      tag_116\n        /* \"ShibStyleToken.sol\":2733:2739  sender */\n      dup6\n        /* \"ShibStyleToken.sol\":2741:2751  msg.sender */\n      caller\n        /* \"ShibStyleToken.sol\":2723:2732  allowance */\n      tag_92\n        /* \"ShibStyleToken.sol\":2723:2752  allowance(sender, msg.sender) */\n      jump\t// in\n    tag_116:\n        /* \"ShibStyleToken.sol\":2696:2752  uint256 currentAllowance = allowance(sender, msg.sender) */\n      swap1\n      pop\n        /* \"ShibStyleToken.sol\":2805:2811  amount */\n      dup3\n        /* \"ShibStyleToken.sol\":2785:2801  currentAllowance */\n      dup2\n        /* \"ShibStyleToken.sol\":2785:2811  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ShibStyleToken.sol\":2763:2879  require(... */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"ShibStyleToken.sol\":2923:2962  _checkTransactionLimits(sender, amount) */\n      tag_120\n        /* \"ShibStyleToken.sol\":2947:2953  sender */\n      dup6\n        /* \"ShibStyleToken.sol\":2955:2961  amount */\n      dup5\n        /* \"ShibStyleToken.sol\":2923:2946  _checkTransactionLimits */\n      tag_121\n        /* \"ShibStyleToken.sol\":2923:2962  _checkTransactionLimits(sender, amount) */\n      jump\t// in\n    tag_120:\n        /* \"ShibStyleToken.sol\":2998:3015  uint256 taxAmount */\n      0x00\n        /* \"ShibStyleToken.sol\":3018:3039  _calculateTax(amount) */\n      tag_122\n        /* \"ShibStyleToken.sol\":3032:3038  amount */\n      dup5\n        /* \"ShibStyleToken.sol\":3018:3031  _calculateTax */\n      tag_123\n        /* \"ShibStyleToken.sol\":3018:3039  _calculateTax(amount) */\n      jump\t// in\n    tag_122:\n        /* \"ShibStyleToken.sol\":2998:3039  uint256 taxAmount = _calculateTax(amount) */\n      swap1\n      pop\n        /* \"ShibStyleToken.sol\":3111:3130  uint256 totalAmount */\n      0x00\n        /* \"ShibStyleToken.sol\":3142:3151  taxAmount */\n      dup2\n        /* \"ShibStyleToken.sol\":3133:3139  amount */\n      dup6\n        /* \"ShibStyleToken.sol\":3133:3151  amount + taxAmount */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"ShibStyleToken.sol\":3111:3151  uint256 totalAmount = amount + taxAmount */\n      swap1\n      pop\n        /* \"ShibStyleToken.sol\":3205:3216  totalAmount */\n      dup1\n        /* \"ShibStyleToken.sol\":3184:3201  balanceOf(sender) */\n      tag_126\n        /* \"ShibStyleToken.sol\":3194:3200  sender */\n      dup9\n        /* \"ShibStyleToken.sol\":3184:3193  balanceOf */\n      tag_58\n        /* \"ShibStyleToken.sol\":3184:3201  balanceOf(sender) */\n      jump\t// in\n    tag_126:\n        /* \"ShibStyleToken.sol\":3184:3216  balanceOf(sender) >= totalAmount */\n      lt\n      iszero\n        /* \"ShibStyleToken.sol\":3162:3278  require(... */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"ShibStyleToken.sol\":3402:3438  _transfer(sender, recipient, amount) */\n      tag_130\n        /* \"ShibStyleToken.sol\":3412:3418  sender */\n      dup8\n        /* \"ShibStyleToken.sol\":3420:3429  recipient */\n      dup8\n        /* \"ShibStyleToken.sol\":3431:3437  amount */\n      dup8\n        /* \"ShibStyleToken.sol\":3402:3411  _transfer */\n      tag_131\n        /* \"ShibStyleToken.sol\":3402:3438  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_130:\n        /* \"ShibStyleToken.sol\":3495:3536  _transfer(sender, taxReceiver, taxAmount) */\n      tag_132\n        /* \"ShibStyleToken.sol\":3505:3511  sender */\n      dup8\n        /* \"ShibStyleToken.sol\":3513:3524  taxReceiver */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":3526:3535  taxAmount */\n      dup5\n        /* \"ShibStyleToken.sol\":3495:3504  _transfer */\n      tag_131\n        /* \"ShibStyleToken.sol\":3495:3536  _transfer(sender, taxReceiver, taxAmount) */\n      jump\t// in\n    tag_132:\n        /* \"ShibStyleToken.sol\":3606:3661  _approve(sender, msg.sender, currentAllowance - amount) */\n      tag_133\n        /* \"ShibStyleToken.sol\":3615:3621  sender */\n      dup8\n        /* \"ShibStyleToken.sol\":3623:3633  msg.sender */\n      caller\n        /* \"ShibStyleToken.sol\":3654:3660  amount */\n      dup8\n        /* \"ShibStyleToken.sol\":3635:3651  currentAllowance */\n      dup7\n        /* \"ShibStyleToken.sol\":3635:3660  currentAllowance - amount */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"ShibStyleToken.sol\":3606:3614  _approve */\n      tag_113\n        /* \"ShibStyleToken.sol\":3606:3661  _approve(sender, msg.sender, currentAllowance - amount) */\n      jump\t// in\n    tag_133:\n        /* \"ShibStyleToken.sol\":3681:3685  true */\n      0x01\n        /* \"ShibStyleToken.sol\":3674:3685  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"ShibStyleToken.sol\":2515:3693  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_46:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ShibStyleToken.sol\":1141:1169  address public liquidityPool */\n    tag_51:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ShibStyleToken.sol\":668:696  uint256 public taxRate = 200 */\n    tag_62:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_66:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_104\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_104\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ShibStyleToken.sol\":5489:6071  function removeLiquidity(... */\n    tag_72:\n        /* \"ShibStyleToken.sol\":5573:5588  uint256 amount0 */\n      0x00\n        /* \"ShibStyleToken.sol\":5590:5605  uint256 amount1 */\n      0x00\n        /* \"ShibStyleToken.sol\":5651:5652  0 */\n      0x00\n        /* \"ShibStyleToken.sol\":5626:5653  liquidityPool != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":5626:5639  liquidityPool */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":5626:5653  liquidityPool != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ShibStyleToken.sol\":5618:5680  require(liquidityPool != address(0), \"Liquidity pool not set\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"ShibStyleToken.sol\":5794:5807  liquidityPool */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":5787:5821  IERC20(liquidityPool).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"ShibStyleToken.sol\":5836:5846  msg.sender */\n      caller\n        /* \"ShibStyleToken.sol\":5861:5874  liquidityPool */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":5889:5904  liquidityTokens */\n      dup7\n        /* \"ShibStyleToken.sol\":5787:5915  IERC20(liquidityPool).transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      pop\n        /* \"ShibStyleToken.sol\":6032:6045  liquidityPool */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":6017:6051  IUniswapV2Pair(liquidityPool).burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x89afcb44\n        /* \"ShibStyleToken.sol\":6052:6062  msg.sender */\n      caller\n        /* \"ShibStyleToken.sol\":6017:6063  IUniswapV2Pair(liquidityPool).burn(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_154:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"ShibStyleToken.sol\":5996:6063  (amount0, amount1) = IUniswapV2Pair(liquidityPool).burn(msg.sender) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"ShibStyleToken.sol\":5489:6071  function removeLiquidity(... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"ShibStyleToken.sol\":4745:5457  function addLiquidity(... */\n    tag_78:\n        /* \"ShibStyleToken.sol\":4893:4894  0 */\n      0x00\n        /* \"ShibStyleToken.sol\":4868:4895  liquidityPool != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":4868:4881  liquidityPool */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":4868:4895  liquidityPool != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ShibStyleToken.sol\":4860:4922  require(liquidityPool != address(0), \"Liquidity pool not set\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_147\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"ShibStyleToken.sol\":4954:4963  msg.value */\n      callvalue\n        /* \"ShibStyleToken.sol\":4941:4950  ethAmount */\n      dup2\n        /* \"ShibStyleToken.sol\":4941:4963  ethAmount == msg.value */\n      eq\n        /* \"ShibStyleToken.sol\":4933:4987  require(ethAmount == msg.value, \"ETH amount mismatch\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"ShibStyleToken.sol\":5109:5158  _transfer(msg.sender, liquidityPool, tokenAmount) */\n      tag_165\n        /* \"ShibStyleToken.sol\":5119:5129  msg.sender */\n      caller\n        /* \"ShibStyleToken.sol\":5131:5144  liquidityPool */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":5146:5157  tokenAmount */\n      dup5\n        /* \"ShibStyleToken.sol\":5109:5118  _transfer */\n      tag_131\n        /* \"ShibStyleToken.sol\":5109:5158  _transfer(msg.sender, liquidityPool, tokenAmount) */\n      jump\t// in\n    tag_165:\n        /* \"ShibStyleToken.sol\":5214:5226  bool success */\n      0x00\n        /* \"ShibStyleToken.sol\":5232:5245  liquidityPool */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":5232:5250  liquidityPool.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":5258:5267  ethAmount */\n      dup3\n        /* \"ShibStyleToken.sol\":5232:5272  liquidityPool.call{value: ethAmount}(\"\") */\n      mload(0x40)\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_170\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_169)\n    tag_170:\n      0x60\n      swap2\n      pop\n    tag_169:\n      pop\n        /* \"ShibStyleToken.sol\":5213:5272  (bool success, ) = liquidityPool.call{value: ethAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"ShibStyleToken.sol\":5291:5298  success */\n      dup1\n        /* \"ShibStyleToken.sol\":5283:5322  require(success, \"ETH transfer failed\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"ShibStyleToken.sol\":5418:5431  liquidityPool */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":5403:5437  IUniswapV2Pair(liquidityPool).mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a627842\n        /* \"ShibStyleToken.sol\":5438:5448  msg.sender */\n      caller\n        /* \"ShibStyleToken.sol\":5403:5449  IUniswapV2Pair(liquidityPool).mint(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      pop\n        /* \"ShibStyleToken.sol\":4849:5457  {... */\n      pop\n        /* \"ShibStyleToken.sol\":4745:5457  function addLiquidity(... */\n      pop\n      pop\n      jump\t// out\n        /* \"ShibStyleToken.sol\":1785:2507  function transfer(... */\n    tag_82:\n        /* \"ShibStyleToken.sol\":1888:1892  bool */\n      0x00\n        /* \"ShibStyleToken.sol\":1905:1919  address sender */\n      0x00\n        /* \"ShibStyleToken.sol\":1922:1932  msg.sender */\n      caller\n        /* \"ShibStyleToken.sol\":1905:1932  address sender = msg.sender */\n      swap1\n      pop\n        /* \"ShibStyleToken.sol\":1974:2013  _checkTransactionLimits(sender, amount) */\n      tag_180\n        /* \"ShibStyleToken.sol\":1998:2004  sender */\n      dup2\n        /* \"ShibStyleToken.sol\":2006:2012  amount */\n      dup5\n        /* \"ShibStyleToken.sol\":1974:1997  _checkTransactionLimits */\n      tag_121\n        /* \"ShibStyleToken.sol\":1974:2013  _checkTransactionLimits(sender, amount) */\n      jump\t// in\n    tag_180:\n        /* \"ShibStyleToken.sol\":2049:2066  uint256 taxAmount */\n      0x00\n        /* \"ShibStyleToken.sol\":2069:2090  _calculateTax(amount) */\n      tag_181\n        /* \"ShibStyleToken.sol\":2083:2089  amount */\n      dup5\n        /* \"ShibStyleToken.sol\":2069:2082  _calculateTax */\n      tag_123\n        /* \"ShibStyleToken.sol\":2069:2090  _calculateTax(amount) */\n      jump\t// in\n    tag_181:\n        /* \"ShibStyleToken.sol\":2049:2090  uint256 taxAmount = _calculateTax(amount) */\n      swap1\n      pop\n        /* \"ShibStyleToken.sol\":2126:2145  uint256 totalAmount */\n      0x00\n        /* \"ShibStyleToken.sol\":2157:2166  taxAmount */\n      dup2\n        /* \"ShibStyleToken.sol\":2148:2154  amount */\n      dup6\n        /* \"ShibStyleToken.sol\":2148:2166  amount + taxAmount */\n      tag_182\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_182:\n        /* \"ShibStyleToken.sol\":2126:2166  uint256 totalAmount = amount + taxAmount */\n      swap1\n      pop\n        /* \"ShibStyleToken.sol\":2220:2231  totalAmount */\n      dup1\n        /* \"ShibStyleToken.sol\":2199:2216  balanceOf(sender) */\n      tag_183\n        /* \"ShibStyleToken.sol\":2209:2215  sender */\n      dup5\n        /* \"ShibStyleToken.sol\":2199:2208  balanceOf */\n      tag_58\n        /* \"ShibStyleToken.sol\":2199:2216  balanceOf(sender) */\n      jump\t// in\n    tag_183:\n        /* \"ShibStyleToken.sol\":2199:2231  balanceOf(sender) >= totalAmount */\n      lt\n      iszero\n        /* \"ShibStyleToken.sol\":2177:2293  require(... */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_129\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"ShibStyleToken.sol\":2347:2380  super.transfer(recipient, amount) */\n      tag_186\n        /* \"ShibStyleToken.sol\":2362:2371  recipient */\n      dup7\n        /* \"ShibStyleToken.sol\":2373:2379  amount */\n      dup7\n        /* \"ShibStyleToken.sol\":2347:2361  super.transfer */\n      tag_187\n        /* \"ShibStyleToken.sol\":2347:2380  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_186:\n      pop\n        /* \"ShibStyleToken.sol\":2437:2475  super.transfer(taxReceiver, taxAmount) */\n      tag_188\n        /* \"ShibStyleToken.sol\":2452:2463  taxReceiver */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ShibStyleToken.sol\":2465:2474  taxAmount */\n      dup4\n        /* \"ShibStyleToken.sol\":2437:2451  super.transfer */\n      tag_187\n        /* \"ShibStyleToken.sol\":2437:2475  super.transfer(taxReceiver, taxAmount) */\n      jump\t// in\n    tag_188:\n      pop\n        /* \"ShibStyleToken.sol\":2495:2499  true */\n      0x01\n        /* \"ShibStyleToken.sol\":2488:2499  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"ShibStyleToken.sol\":1785:2507  function transfer(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ShibStyleToken.sol\":802:837  uint256 public maxTransactionAmount */\n    tag_86:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_92:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ShibStyleToken.sol\":736:762  address public taxReceiver */\n    tag_96:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ShibStyleToken.sol\":877:918  uint256 public dailyTransactionCountLimit */\n    tag_100:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_113:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_192\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_193\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_192:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ShibStyleToken.sol\":3875:4713  function _checkTransactionLimits(address sender, uint256 amount) internal {... */\n    tag_121:\n        /* \"ShibStyleToken.sol\":4035:4055  maxTransactionAmount */\n      sload(0x07)\n        /* \"ShibStyleToken.sol\":4025:4031  amount */\n      dup2\n        /* \"ShibStyleToken.sol\":4025:4055  amount <= maxTransactionAmount */\n      gt\n      iszero\n        /* \"ShibStyleToken.sol\":4003:4115  require(... */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"ShibStyleToken.sol\":4128:4146  uint256 currentDay */\n      0x00\n        /* \"ShibStyleToken.sol\":4167:4173  1 days */\n      0x015180\n        /* \"ShibStyleToken.sol\":4149:4164  block.timestamp */\n      timestamp\n        /* \"ShibStyleToken.sol\":4149:4173  block.timestamp / 1 days */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"ShibStyleToken.sol\":4128:4173  uint256 currentDay = block.timestamp / 1 days */\n      swap1\n      pop\n        /* \"ShibStyleToken.sol\":4184:4199  uint256 lastDay */\n      0x00\n        /* \"ShibStyleToken.sol\":4202:4220  lastTransactionDay */\n      0x0a\n        /* \"ShibStyleToken.sol\":4202:4228  lastTransactionDay[sender] */\n      0x00\n        /* \"ShibStyleToken.sol\":4221:4227  sender */\n      dup6\n        /* \"ShibStyleToken.sol\":4202:4228  lastTransactionDay[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ShibStyleToken.sol\":4184:4228  uint256 lastDay = lastTransactionDay[sender] */\n      swap1\n      pop\n        /* \"ShibStyleToken.sol\":4256:4263  lastDay */\n      dup1\n        /* \"ShibStyleToken.sol\":4243:4253  currentDay */\n      dup3\n        /* \"ShibStyleToken.sol\":4243:4263  currentDay > lastDay */\n      gt\n        /* \"ShibStyleToken.sol\":4239:4420  if (currentDay > lastDay) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"ShibStyleToken.sol\":4353:4354  0 */\n      0x00\n        /* \"ShibStyleToken.sol\":4321:4342  dailyTransactionCount */\n      0x09\n        /* \"ShibStyleToken.sol\":4321:4350  dailyTransactionCount[sender] */\n      0x00\n        /* \"ShibStyleToken.sol\":4343:4349  sender */\n      dup7\n        /* \"ShibStyleToken.sol\":4321:4350  dailyTransactionCount[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ShibStyleToken.sol\":4321:4354  dailyTransactionCount[sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ShibStyleToken.sol\":4398:4408  currentDay */\n      dup2\n        /* \"ShibStyleToken.sol\":4369:4387  lastTransactionDay */\n      0x0a\n        /* \"ShibStyleToken.sol\":4369:4395  lastTransactionDay[sender] */\n      0x00\n        /* \"ShibStyleToken.sol\":4388:4394  sender */\n      dup7\n        /* \"ShibStyleToken.sol\":4369:4395  lastTransactionDay[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ShibStyleToken.sol\":4369:4408  lastTransactionDay[sender] = currentDay */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ShibStyleToken.sol\":4239:4420  if (currentDay > lastDay) {... */\n    tag_200:\n        /* \"ShibStyleToken.sol\":4538:4564  dailyTransactionCountLimit */\n      sload(0x08)\n        /* \"ShibStyleToken.sol\":4506:4527  dailyTransactionCount */\n      0x09\n        /* \"ShibStyleToken.sol\":4506:4535  dailyTransactionCount[sender] */\n      0x00\n        /* \"ShibStyleToken.sol\":4528:4534  sender */\n      dup7\n        /* \"ShibStyleToken.sol\":4506:4535  dailyTransactionCount[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ShibStyleToken.sol\":4506:4564  dailyTransactionCount[sender] < dailyTransactionCountLimit */\n      lt\n        /* \"ShibStyleToken.sol\":4484:4624  require(... */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"ShibStyleToken.sol\":4674:4695  dailyTransactionCount */\n      0x09\n        /* \"ShibStyleToken.sol\":4674:4703  dailyTransactionCount[sender] */\n      0x00\n        /* \"ShibStyleToken.sol\":4696:4702  sender */\n      dup6\n        /* \"ShibStyleToken.sol\":4674:4703  dailyTransactionCount[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ShibStyleToken.sol\":4674:4705  dailyTransactionCount[sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"ShibStyleToken.sol\":3949:4713  {... */\n      pop\n      pop\n        /* \"ShibStyleToken.sol\":3875:4713  function _checkTransactionLimits(address sender, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ShibStyleToken.sol\":3701:3840  function _calculateTax(uint256 amount) internal view returns (uint256) {... */\n    tag_123:\n        /* \"ShibStyleToken.sol\":3763:3770  uint256 */\n      0x00\n        /* \"ShibStyleToken.sol\":3811:3816  10000 */\n      0x2710\n        /* \"ShibStyleToken.sol\":3800:3807  taxRate */\n      sload(0x05)\n        /* \"ShibStyleToken.sol\":3791:3797  amount */\n      dup4\n        /* \"ShibStyleToken.sol\":3791:3807  amount * taxRate */\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"ShibStyleToken.sol\":3790:3816  (amount * taxRate) / 10000 */\n      tag_209\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_209:\n        /* \"ShibStyleToken.sol\":3783:3816  return (amount * taxRate) / 10000 */\n      swap1\n      pop\n        /* \"ShibStyleToken.sol\":3701:3840  function _calculateTax(uint256 amount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_131:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_211:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_213:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_215\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_216\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_215:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_187:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_218\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_111\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_219\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_131\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_219:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_193:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_221:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_223:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_226\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_225:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_216:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_229\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_229:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_230)\n    tag_228:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_231:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_230:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_235)\n    tag_234:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_235:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_236\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_237:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_238:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_239:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_240:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_241:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_287\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_237\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":711:782   */\n      tag_288\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_238\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_289\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_239\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":881:910   */\n      tag_290\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_240\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_292\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_241\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_243:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_245:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_246:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_298\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_245\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_247:\n        /* \"#utility.yul\":1876:1900   */\n      tag_300\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_246\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_301:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_248:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_303\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_247\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_249:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_250:\n        /* \"#utility.yul\":2232:2256   */\n      tag_306\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_249\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_307:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_251:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_309\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_250\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_312\n      tag_243\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2525:2644   */\n    tag_311:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_313\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_248\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_314\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_251\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_252:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_253:\n        /* \"#utility.yul\":3089:3110   */\n      tag_317\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_252\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_319\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_253\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_254:\n        /* \"#utility.yul\":3426:3450   */\n      tag_321\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_249\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_37:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_323\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_254\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_41:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_326\n      tag_243\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3801:3920   */\n    tag_325:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_327\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_248\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_328\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_248\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_329\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_251\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_255:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_256:\n        /* \"#utility.yul\":4491:4513   */\n      tag_332\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_255\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_48:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_334\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_256\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4864   */\n    tag_257:\n        /* \"#utility.yul\":4833:4857   */\n      tag_336\n        /* \"#utility.yul\":4851:4856   */\n      dup2\n        /* \"#utility.yul\":4833:4857   */\n      tag_246\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4828:4831   */\n      dup3\n        /* \"#utility.yul\":4821:4858   */\n      mstore\n        /* \"#utility.yul\":4746:4864   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4870:5092   */\n    tag_53:\n        /* \"#utility.yul\":4963:4967   */\n      0x00\n        /* \"#utility.yul\":5001:5003   */\n      0x20\n        /* \"#utility.yul\":4990:4999   */\n      dup3\n        /* \"#utility.yul\":4986:5004   */\n      add\n        /* \"#utility.yul\":4978:5004   */\n      swap1\n      pop\n        /* \"#utility.yul\":5014:5085   */\n      tag_338\n        /* \"#utility.yul\":5082:5083   */\n      0x00\n        /* \"#utility.yul\":5071:5080   */\n      dup4\n        /* \"#utility.yul\":5067:5084   */\n      add\n        /* \"#utility.yul\":5058:5064   */\n      dup5\n        /* \"#utility.yul\":5014:5085   */\n      tag_257\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4870:5092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:5427   */\n    tag_57:\n        /* \"#utility.yul\":5157:5163   */\n      0x00\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"#utility.yul\":5194:5203   */\n      dup3\n        /* \"#utility.yul\":5185:5192   */\n      dup5\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_341\n      tag_243\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5174:5293   */\n    tag_340:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_342\n        /* \"#utility.yul\":5402:5409   */\n      dup5\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup6\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_248\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5347:5410   */\n      swap2\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5098:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_71:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_345\n      tag_243\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":5509:5628   */\n    tag_344:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_346\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_251\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6100   */\n    tag_74:\n        /* \"#utility.yul\":5889:5893   */\n      0x00\n        /* \"#utility.yul\":5927:5929   */\n      0x40\n        /* \"#utility.yul\":5916:5925   */\n      dup3\n        /* \"#utility.yul\":5912:5930   */\n      add\n        /* \"#utility.yul\":5904:5930   */\n      swap1\n      pop\n        /* \"#utility.yul\":5940:6011   */\n      tag_348\n        /* \"#utility.yul\":6008:6009   */\n      0x00\n        /* \"#utility.yul\":5997:6006   */\n      dup4\n        /* \"#utility.yul\":5993:6010   */\n      add\n        /* \"#utility.yul\":5984:5990   */\n      dup6\n        /* \"#utility.yul\":5940:6011   */\n      tag_254\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6021:6093   */\n      tag_349\n        /* \"#utility.yul\":6089:6091   */\n      0x20\n        /* \"#utility.yul\":6078:6087   */\n      dup4\n        /* \"#utility.yul\":6074:6092   */\n      add\n        /* \"#utility.yul\":6065:6071   */\n      dup5\n        /* \"#utility.yul\":6021:6093   */\n      tag_254\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5768:6100   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6106:6580   */\n    tag_77:\n        /* \"#utility.yul\":6174:6180   */\n      0x00\n        /* \"#utility.yul\":6182:6188   */\n      0x00\n        /* \"#utility.yul\":6231:6233   */\n      0x40\n        /* \"#utility.yul\":6219:6228   */\n      dup4\n        /* \"#utility.yul\":6210:6217   */\n      dup6\n        /* \"#utility.yul\":6206:6229   */\n      sub\n        /* \"#utility.yul\":6202:6234   */\n      slt\n        /* \"#utility.yul\":6199:6318   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":6237:6316   */\n      tag_352\n      tag_243\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6199:6318   */\n    tag_351:\n        /* \"#utility.yul\":6357:6358   */\n      0x00\n        /* \"#utility.yul\":6382:6435   */\n      tag_353\n        /* \"#utility.yul\":6427:6434   */\n      dup6\n        /* \"#utility.yul\":6418:6424   */\n      dup3\n        /* \"#utility.yul\":6407:6416   */\n      dup7\n        /* \"#utility.yul\":6403:6425   */\n      add\n        /* \"#utility.yul\":6382:6435   */\n      tag_251\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":6372:6435   */\n      swap3\n      pop\n        /* \"#utility.yul\":6328:6445   */\n      pop\n        /* \"#utility.yul\":6484:6486   */\n      0x20\n        /* \"#utility.yul\":6510:6563   */\n      tag_354\n        /* \"#utility.yul\":6555:6562   */\n      dup6\n        /* \"#utility.yul\":6546:6552   */\n      dup3\n        /* \"#utility.yul\":6535:6544   */\n      dup7\n        /* \"#utility.yul\":6531:6553   */\n      add\n        /* \"#utility.yul\":6510:6563   */\n      tag_251\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":6500:6563   */\n      swap2\n      pop\n        /* \"#utility.yul\":6455:6573   */\n      pop\n        /* \"#utility.yul\":6106:6580   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6586:7060   */\n    tag_91:\n        /* \"#utility.yul\":6654:6660   */\n      0x00\n        /* \"#utility.yul\":6662:6668   */\n      0x00\n        /* \"#utility.yul\":6711:6713   */\n      0x40\n        /* \"#utility.yul\":6699:6708   */\n      dup4\n        /* \"#utility.yul\":6690:6697   */\n      dup6\n        /* \"#utility.yul\":6686:6709   */\n      sub\n        /* \"#utility.yul\":6682:6714   */\n      slt\n        /* \"#utility.yul\":6679:6798   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":6717:6796   */\n      tag_357\n      tag_243\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":6679:6798   */\n    tag_356:\n        /* \"#utility.yul\":6837:6838   */\n      0x00\n        /* \"#utility.yul\":6862:6915   */\n      tag_358\n        /* \"#utility.yul\":6907:6914   */\n      dup6\n        /* \"#utility.yul\":6898:6904   */\n      dup3\n        /* \"#utility.yul\":6887:6896   */\n      dup7\n        /* \"#utility.yul\":6883:6905   */\n      add\n        /* \"#utility.yul\":6862:6915   */\n      tag_248\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6852:6915   */\n      swap3\n      pop\n        /* \"#utility.yul\":6808:6925   */\n      pop\n        /* \"#utility.yul\":6964:6966   */\n      0x20\n        /* \"#utility.yul\":6990:7043   */\n      tag_359\n        /* \"#utility.yul\":7035:7042   */\n      dup6\n        /* \"#utility.yul\":7026:7032   */\n      dup3\n        /* \"#utility.yul\":7015:7024   */\n      dup7\n        /* \"#utility.yul\":7011:7033   */\n      add\n        /* \"#utility.yul\":6990:7043   */\n      tag_248\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6980:7043   */\n      swap2\n      pop\n        /* \"#utility.yul\":6935:7053   */\n      pop\n        /* \"#utility.yul\":6586:7060   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7066:7246   */\n    tag_258:\n        /* \"#utility.yul\":7114:7191   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7111:7112   */\n      0x00\n        /* \"#utility.yul\":7104:7192   */\n      mstore\n        /* \"#utility.yul\":7211:7215   */\n      0x22\n        /* \"#utility.yul\":7208:7209   */\n      0x04\n        /* \"#utility.yul\":7201:7216   */\n      mstore\n        /* \"#utility.yul\":7235:7239   */\n      0x24\n        /* \"#utility.yul\":7232:7233   */\n      0x00\n        /* \"#utility.yul\":7225:7240   */\n      revert\n        /* \"#utility.yul\":7252:7572   */\n    tag_104:\n        /* \"#utility.yul\":7296:7302   */\n      0x00\n        /* \"#utility.yul\":7333:7334   */\n      0x02\n        /* \"#utility.yul\":7327:7331   */\n      dup3\n        /* \"#utility.yul\":7323:7335   */\n      div\n        /* \"#utility.yul\":7313:7335   */\n      swap1\n      pop\n        /* \"#utility.yul\":7380:7381   */\n      0x01\n        /* \"#utility.yul\":7374:7378   */\n      dup3\n        /* \"#utility.yul\":7370:7382   */\n      and\n        /* \"#utility.yul\":7401:7419   */\n      dup1\n        /* \"#utility.yul\":7391:7472   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":7457:7461   */\n      0x7f\n        /* \"#utility.yul\":7449:7455   */\n      dup3\n        /* \"#utility.yul\":7445:7462   */\n      and\n        /* \"#utility.yul\":7435:7462   */\n      swap2\n      pop\n        /* \"#utility.yul\":7391:7472   */\n    tag_362:\n        /* \"#utility.yul\":7519:7521   */\n      0x20\n        /* \"#utility.yul\":7511:7517   */\n      dup3\n        /* \"#utility.yul\":7508:7522   */\n      lt\n        /* \"#utility.yul\":7488:7506   */\n      dup2\n        /* \"#utility.yul\":7485:7523   */\n      sub\n        /* \"#utility.yul\":7482:7566   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":7538:7556   */\n      tag_364\n      tag_258\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":7482:7566   */\n    tag_363:\n        /* \"#utility.yul\":7303:7572   */\n      pop\n        /* \"#utility.yul\":7252:7572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7578:7805   */\n    tag_259:\n        /* \"#utility.yul\":7718:7752   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7706:7712   */\n      dup3\n        /* \"#utility.yul\":7702:7716   */\n      add\n        /* \"#utility.yul\":7695:7753   */\n      mstore\n        /* \"#utility.yul\":7787:7797   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7782:7784   */\n      0x20\n        /* \"#utility.yul\":7774:7780   */\n      dup3\n        /* \"#utility.yul\":7770:7785   */\n      add\n        /* \"#utility.yul\":7763:7798   */\n      mstore\n        /* \"#utility.yul\":7578:7805   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7811:8177   */\n    tag_260:\n        /* \"#utility.yul\":7953:7956   */\n      0x00\n        /* \"#utility.yul\":7974:8041   */\n      tag_367\n        /* \"#utility.yul\":8038:8040   */\n      0x28\n        /* \"#utility.yul\":8033:8036   */\n      dup4\n        /* \"#utility.yul\":7974:8041   */\n      tag_238\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":7967:8041   */\n      swap2\n      pop\n        /* \"#utility.yul\":8050:8143   */\n      tag_368\n        /* \"#utility.yul\":8139:8142   */\n      dup3\n        /* \"#utility.yul\":8050:8143   */\n      tag_259\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":8168:8170   */\n      0x40\n        /* \"#utility.yul\":8163:8166   */\n      dup3\n        /* \"#utility.yul\":8159:8171   */\n      add\n        /* \"#utility.yul\":8152:8171   */\n      swap1\n      pop\n        /* \"#utility.yul\":7811:8177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8183:8602   */\n    tag_119:\n        /* \"#utility.yul\":8349:8353   */\n      0x00\n        /* \"#utility.yul\":8387:8389   */\n      0x20\n        /* \"#utility.yul\":8376:8385   */\n      dup3\n        /* \"#utility.yul\":8372:8390   */\n      add\n        /* \"#utility.yul\":8364:8390   */\n      swap1\n      pop\n        /* \"#utility.yul\":8436:8445   */\n      dup2\n        /* \"#utility.yul\":8430:8434   */\n      dup2\n        /* \"#utility.yul\":8426:8446   */\n      sub\n        /* \"#utility.yul\":8422:8423   */\n      0x00\n        /* \"#utility.yul\":8411:8420   */\n      dup4\n        /* \"#utility.yul\":8407:8424   */\n      add\n        /* \"#utility.yul\":8400:8447   */\n      mstore\n        /* \"#utility.yul\":8464:8595   */\n      tag_370\n        /* \"#utility.yul\":8590:8594   */\n      dup2\n        /* \"#utility.yul\":8464:8595   */\n      tag_260\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":8456:8595   */\n      swap1\n      pop\n        /* \"#utility.yul\":8183:8602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8608:8788   */\n    tag_261:\n        /* \"#utility.yul\":8656:8733   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8653:8654   */\n      0x00\n        /* \"#utility.yul\":8646:8734   */\n      mstore\n        /* \"#utility.yul\":8753:8757   */\n      0x11\n        /* \"#utility.yul\":8750:8751   */\n      0x04\n        /* \"#utility.yul\":8743:8758   */\n      mstore\n        /* \"#utility.yul\":8777:8781   */\n      0x24\n        /* \"#utility.yul\":8774:8775   */\n      0x00\n        /* \"#utility.yul\":8767:8782   */\n      revert\n        /* \"#utility.yul\":8794:8985   */\n    tag_125:\n        /* \"#utility.yul\":8834:8837   */\n      0x00\n        /* \"#utility.yul\":8853:8873   */\n      tag_373\n        /* \"#utility.yul\":8871:8872   */\n      dup3\n        /* \"#utility.yul\":8853:8873   */\n      tag_249\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":8848:8873   */\n      swap2\n      pop\n        /* \"#utility.yul\":8887:8907   */\n      tag_374\n        /* \"#utility.yul\":8905:8906   */\n      dup4\n        /* \"#utility.yul\":8887:8907   */\n      tag_249\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":8882:8907   */\n      swap3\n      pop\n        /* \"#utility.yul\":8930:8931   */\n      dup3\n        /* \"#utility.yul\":8927:8928   */\n      dup3\n        /* \"#utility.yul\":8923:8932   */\n      add\n        /* \"#utility.yul\":8916:8932   */\n      swap1\n      pop\n        /* \"#utility.yul\":8951:8954   */\n      dup1\n        /* \"#utility.yul\":8948:8949   */\n      dup3\n        /* \"#utility.yul\":8945:8955   */\n      gt\n        /* \"#utility.yul\":8942:8978   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":8958:8976   */\n      tag_376\n      tag_261\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8942:8978   */\n    tag_375:\n        /* \"#utility.yul\":8794:8985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8991:9212   */\n    tag_262:\n        /* \"#utility.yul\":9131:9165   */\n      0x496e73756666696369656e742062616c616e636520696e636c7564696e672074\n        /* \"#utility.yul\":9127:9128   */\n      0x00\n        /* \"#utility.yul\":9119:9125   */\n      dup3\n        /* \"#utility.yul\":9115:9129   */\n      add\n        /* \"#utility.yul\":9108:9166   */\n      mstore\n        /* \"#utility.yul\":9200:9204   */\n      0x6178000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9195:9197   */\n      0x20\n        /* \"#utility.yul\":9187:9193   */\n      dup3\n        /* \"#utility.yul\":9183:9198   */\n      add\n        /* \"#utility.yul\":9176:9205   */\n      mstore\n        /* \"#utility.yul\":8991:9212   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9218:9584   */\n    tag_263:\n        /* \"#utility.yul\":9360:9363   */\n      0x00\n        /* \"#utility.yul\":9381:9448   */\n      tag_379\n        /* \"#utility.yul\":9445:9447   */\n      0x22\n        /* \"#utility.yul\":9440:9443   */\n      dup4\n        /* \"#utility.yul\":9381:9448   */\n      tag_238\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":9374:9448   */\n      swap2\n      pop\n        /* \"#utility.yul\":9457:9550   */\n      tag_380\n        /* \"#utility.yul\":9546:9549   */\n      dup3\n        /* \"#utility.yul\":9457:9550   */\n      tag_262\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9575:9577   */\n      0x40\n        /* \"#utility.yul\":9570:9573   */\n      dup3\n        /* \"#utility.yul\":9566:9578   */\n      add\n        /* \"#utility.yul\":9559:9578   */\n      swap1\n      pop\n        /* \"#utility.yul\":9218:9584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9590:10009   */\n    tag_129:\n        /* \"#utility.yul\":9756:9760   */\n      0x00\n        /* \"#utility.yul\":9794:9796   */\n      0x20\n        /* \"#utility.yul\":9783:9792   */\n      dup3\n        /* \"#utility.yul\":9779:9797   */\n      add\n        /* \"#utility.yul\":9771:9797   */\n      swap1\n      pop\n        /* \"#utility.yul\":9843:9852   */\n      dup2\n        /* \"#utility.yul\":9837:9841   */\n      dup2\n        /* \"#utility.yul\":9833:9853   */\n      sub\n        /* \"#utility.yul\":9829:9830   */\n      0x00\n        /* \"#utility.yul\":9818:9827   */\n      dup4\n        /* \"#utility.yul\":9814:9831   */\n      add\n        /* \"#utility.yul\":9807:9854   */\n      mstore\n        /* \"#utility.yul\":9871:10002   */\n      tag_382\n        /* \"#utility.yul\":9997:10001   */\n      dup2\n        /* \"#utility.yul\":9871:10002   */\n      tag_263\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":9863:10002   */\n      swap1\n      pop\n        /* \"#utility.yul\":9590:10009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10015:10209   */\n    tag_135:\n        /* \"#utility.yul\":10055:10059   */\n      0x00\n        /* \"#utility.yul\":10075:10095   */\n      tag_384\n        /* \"#utility.yul\":10093:10094   */\n      dup3\n        /* \"#utility.yul\":10075:10095   */\n      tag_249\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":10070:10095   */\n      swap2\n      pop\n        /* \"#utility.yul\":10109:10129   */\n      tag_385\n        /* \"#utility.yul\":10127:10128   */\n      dup4\n        /* \"#utility.yul\":10109:10129   */\n      tag_249\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10104:10129   */\n      swap3\n      pop\n        /* \"#utility.yul\":10153:10154   */\n      dup3\n        /* \"#utility.yul\":10150:10151   */\n      dup3\n        /* \"#utility.yul\":10146:10155   */\n      sub\n        /* \"#utility.yul\":10138:10155   */\n      swap1\n      pop\n        /* \"#utility.yul\":10177:10178   */\n      dup2\n        /* \"#utility.yul\":10171:10175   */\n      dup2\n        /* \"#utility.yul\":10168:10179   */\n      gt\n        /* \"#utility.yul\":10165:10202   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":10182:10200   */\n      tag_387\n      tag_261\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":10165:10202   */\n    tag_386:\n        /* \"#utility.yul\":10015:10209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10215:10387   */\n    tag_264:\n        /* \"#utility.yul\":10355:10379   */\n      0x4c697175696469747920706f6f6c206e6f742073657400000000000000000000\n        /* \"#utility.yul\":10351:10352   */\n      0x00\n        /* \"#utility.yul\":10343:10349   */\n      dup3\n        /* \"#utility.yul\":10339:10353   */\n      add\n        /* \"#utility.yul\":10332:10380   */\n      mstore\n        /* \"#utility.yul\":10215:10387   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10393:10759   */\n    tag_265:\n        /* \"#utility.yul\":10535:10538   */\n      0x00\n        /* \"#utility.yul\":10556:10623   */\n      tag_390\n        /* \"#utility.yul\":10620:10622   */\n      0x16\n        /* \"#utility.yul\":10615:10618   */\n      dup4\n        /* \"#utility.yul\":10556:10623   */\n      tag_238\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":10549:10623   */\n      swap2\n      pop\n        /* \"#utility.yul\":10632:10725   */\n      tag_391\n        /* \"#utility.yul\":10721:10724   */\n      dup3\n        /* \"#utility.yul\":10632:10725   */\n      tag_264\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":10750:10752   */\n      0x20\n        /* \"#utility.yul\":10745:10748   */\n      dup3\n        /* \"#utility.yul\":10741:10753   */\n      add\n        /* \"#utility.yul\":10734:10753   */\n      swap1\n      pop\n        /* \"#utility.yul\":10393:10759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10765:11184   */\n    tag_147:\n        /* \"#utility.yul\":10931:10935   */\n      0x00\n        /* \"#utility.yul\":10969:10971   */\n      0x20\n        /* \"#utility.yul\":10958:10967   */\n      dup3\n        /* \"#utility.yul\":10954:10972   */\n      add\n        /* \"#utility.yul\":10946:10972   */\n      swap1\n      pop\n        /* \"#utility.yul\":11018:11027   */\n      dup2\n        /* \"#utility.yul\":11012:11016   */\n      dup2\n        /* \"#utility.yul\":11008:11028   */\n      sub\n        /* \"#utility.yul\":11004:11005   */\n      0x00\n        /* \"#utility.yul\":10993:11002   */\n      dup4\n        /* \"#utility.yul\":10989:11006   */\n      add\n        /* \"#utility.yul\":10982:11029   */\n      mstore\n        /* \"#utility.yul\":11046:11177   */\n      tag_393\n        /* \"#utility.yul\":11172:11176   */\n      dup2\n        /* \"#utility.yul\":11046:11177   */\n      tag_265\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11038:11177   */\n      swap1\n      pop\n        /* \"#utility.yul\":10765:11184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11190:11632   */\n    tag_149:\n        /* \"#utility.yul\":11339:11343   */\n      0x00\n        /* \"#utility.yul\":11377:11379   */\n      0x60\n        /* \"#utility.yul\":11366:11375   */\n      dup3\n        /* \"#utility.yul\":11362:11380   */\n      add\n        /* \"#utility.yul\":11354:11380   */\n      swap1\n      pop\n        /* \"#utility.yul\":11390:11461   */\n      tag_395\n        /* \"#utility.yul\":11458:11459   */\n      0x00\n        /* \"#utility.yul\":11447:11456   */\n      dup4\n        /* \"#utility.yul\":11443:11460   */\n      add\n        /* \"#utility.yul\":11434:11440   */\n      dup7\n        /* \"#utility.yul\":11390:11461   */\n      tag_257\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":11471:11543   */\n      tag_396\n        /* \"#utility.yul\":11539:11541   */\n      0x20\n        /* \"#utility.yul\":11528:11537   */\n      dup4\n        /* \"#utility.yul\":11524:11542   */\n      add\n        /* \"#utility.yul\":11515:11521   */\n      dup6\n        /* \"#utility.yul\":11471:11543   */\n      tag_257\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":11553:11625   */\n      tag_397\n        /* \"#utility.yul\":11621:11623   */\n      0x40\n        /* \"#utility.yul\":11610:11619   */\n      dup4\n        /* \"#utility.yul\":11606:11624   */\n      add\n        /* \"#utility.yul\":11597:11603   */\n      dup5\n        /* \"#utility.yul\":11553:11625   */\n      tag_254\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11190:11632   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11638:11754   */\n    tag_266:\n        /* \"#utility.yul\":11708:11729   */\n      tag_399\n        /* \"#utility.yul\":11723:11728   */\n      dup2\n        /* \"#utility.yul\":11708:11729   */\n      tag_252\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":11701:11706   */\n      dup2\n        /* \"#utility.yul\":11698:11730   */\n      eq\n        /* \"#utility.yul\":11688:11748   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":11744:11745   */\n      0x00\n        /* \"#utility.yul\":11741:11742   */\n      0x00\n        /* \"#utility.yul\":11734:11746   */\n      revert\n        /* \"#utility.yul\":11688:11748   */\n    tag_400:\n        /* \"#utility.yul\":11638:11754   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11760:11897   */\n    tag_267:\n        /* \"#utility.yul\":11814:11819   */\n      0x00\n        /* \"#utility.yul\":11845:11851   */\n      dup2\n        /* \"#utility.yul\":11839:11852   */\n      mload\n        /* \"#utility.yul\":11830:11852   */\n      swap1\n      pop\n        /* \"#utility.yul\":11861:11891   */\n      tag_402\n        /* \"#utility.yul\":11885:11890   */\n      dup2\n        /* \"#utility.yul\":11861:11891   */\n      tag_266\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":11760:11897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11903:12248   */\n    tag_153:\n        /* \"#utility.yul\":11970:11976   */\n      0x00\n        /* \"#utility.yul\":12019:12021   */\n      0x20\n        /* \"#utility.yul\":12007:12016   */\n      dup3\n        /* \"#utility.yul\":11998:12005   */\n      dup5\n        /* \"#utility.yul\":11994:12017   */\n      sub\n        /* \"#utility.yul\":11990:12022   */\n      slt\n        /* \"#utility.yul\":11987:12106   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":12025:12104   */\n      tag_405\n      tag_243\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":11987:12106   */\n    tag_404:\n        /* \"#utility.yul\":12145:12146   */\n      0x00\n        /* \"#utility.yul\":12170:12231   */\n      tag_406\n        /* \"#utility.yul\":12223:12230   */\n      dup5\n        /* \"#utility.yul\":12214:12220   */\n      dup3\n        /* \"#utility.yul\":12203:12212   */\n      dup6\n        /* \"#utility.yul\":12199:12221   */\n      add\n        /* \"#utility.yul\":12170:12231   */\n      tag_267\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":12160:12231   */\n      swap2\n      pop\n        /* \"#utility.yul\":12116:12241   */\n      pop\n        /* \"#utility.yul\":11903:12248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12254:12397   */\n    tag_268:\n        /* \"#utility.yul\":12311:12316   */\n      0x00\n        /* \"#utility.yul\":12342:12348   */\n      dup2\n        /* \"#utility.yul\":12336:12349   */\n      mload\n        /* \"#utility.yul\":12327:12349   */\n      swap1\n      pop\n        /* \"#utility.yul\":12358:12391   */\n      tag_408\n        /* \"#utility.yul\":12385:12390   */\n      dup2\n        /* \"#utility.yul\":12358:12391   */\n      tag_250\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":12254:12397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12403:12910   */\n    tag_158:\n        /* \"#utility.yul\":12482:12488   */\n      0x00\n        /* \"#utility.yul\":12490:12496   */\n      0x00\n        /* \"#utility.yul\":12539:12541   */\n      0x40\n        /* \"#utility.yul\":12527:12536   */\n      dup4\n        /* \"#utility.yul\":12518:12525   */\n      dup6\n        /* \"#utility.yul\":12514:12537   */\n      sub\n        /* \"#utility.yul\":12510:12542   */\n      slt\n        /* \"#utility.yul\":12507:12626   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":12545:12624   */\n      tag_411\n      tag_243\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":12507:12626   */\n    tag_410:\n        /* \"#utility.yul\":12665:12666   */\n      0x00\n        /* \"#utility.yul\":12690:12754   */\n      tag_412\n        /* \"#utility.yul\":12746:12753   */\n      dup6\n        /* \"#utility.yul\":12737:12743   */\n      dup3\n        /* \"#utility.yul\":12726:12735   */\n      dup7\n        /* \"#utility.yul\":12722:12744   */\n      add\n        /* \"#utility.yul\":12690:12754   */\n      tag_268\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12680:12754   */\n      swap3\n      pop\n        /* \"#utility.yul\":12636:12764   */\n      pop\n        /* \"#utility.yul\":12803:12805   */\n      0x20\n        /* \"#utility.yul\":12829:12893   */\n      tag_413\n        /* \"#utility.yul\":12885:12892   */\n      dup6\n        /* \"#utility.yul\":12876:12882   */\n      dup3\n        /* \"#utility.yul\":12865:12874   */\n      dup7\n        /* \"#utility.yul\":12861:12883   */\n      add\n        /* \"#utility.yul\":12829:12893   */\n      tag_268\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":12819:12893   */\n      swap2\n      pop\n        /* \"#utility.yul\":12774:12903   */\n      pop\n        /* \"#utility.yul\":12403:12910   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12916:13085   */\n    tag_269:\n        /* \"#utility.yul\":13056:13077   */\n      0x45544820616d6f756e74206d69736d6174636800000000000000000000000000\n        /* \"#utility.yul\":13052:13053   */\n      0x00\n        /* \"#utility.yul\":13044:13050   */\n      dup3\n        /* \"#utility.yul\":13040:13054   */\n      add\n        /* \"#utility.yul\":13033:13078   */\n      mstore\n        /* \"#utility.yul\":12916:13085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13091:13457   */\n    tag_270:\n        /* \"#utility.yul\":13233:13236   */\n      0x00\n        /* \"#utility.yul\":13254:13321   */\n      tag_416\n        /* \"#utility.yul\":13318:13320   */\n      0x13\n        /* \"#utility.yul\":13313:13316   */\n      dup4\n        /* \"#utility.yul\":13254:13321   */\n      tag_238\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":13247:13321   */\n      swap2\n      pop\n        /* \"#utility.yul\":13330:13423   */\n      tag_417\n        /* \"#utility.yul\":13419:13422   */\n      dup3\n        /* \"#utility.yul\":13330:13423   */\n      tag_269\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":13448:13450   */\n      0x20\n        /* \"#utility.yul\":13443:13446   */\n      dup3\n        /* \"#utility.yul\":13439:13451   */\n      add\n        /* \"#utility.yul\":13432:13451   */\n      swap1\n      pop\n        /* \"#utility.yul\":13091:13457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13463:13882   */\n    tag_164:\n        /* \"#utility.yul\":13629:13633   */\n      0x00\n        /* \"#utility.yul\":13667:13669   */\n      0x20\n        /* \"#utility.yul\":13656:13665   */\n      dup3\n        /* \"#utility.yul\":13652:13670   */\n      add\n        /* \"#utility.yul\":13644:13670   */\n      swap1\n      pop\n        /* \"#utility.yul\":13716:13725   */\n      dup2\n        /* \"#utility.yul\":13710:13714   */\n      dup2\n        /* \"#utility.yul\":13706:13726   */\n      sub\n        /* \"#utility.yul\":13702:13703   */\n      0x00\n        /* \"#utility.yul\":13691:13700   */\n      dup4\n        /* \"#utility.yul\":13687:13704   */\n      add\n        /* \"#utility.yul\":13680:13727   */\n      mstore\n        /* \"#utility.yul\":13744:13875   */\n      tag_419\n        /* \"#utility.yul\":13870:13874   */\n      dup2\n        /* \"#utility.yul\":13744:13875   */\n      tag_270\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":13736:13875   */\n      swap1\n      pop\n        /* \"#utility.yul\":13463:13882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13888:14035   */\n    tag_271:\n        /* \"#utility.yul\":13989:14000   */\n      0x00\n        /* \"#utility.yul\":14026:14029   */\n      dup2\n        /* \"#utility.yul\":14011:14029   */\n      swap1\n      pop\n        /* \"#utility.yul\":13888:14035   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14041:14155   */\n    tag_272:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14161:14559   */\n    tag_273:\n        /* \"#utility.yul\":14320:14323   */\n      0x00\n        /* \"#utility.yul\":14341:14424   */\n      tag_423\n        /* \"#utility.yul\":14422:14423   */\n      0x00\n        /* \"#utility.yul\":14417:14420   */\n      dup4\n        /* \"#utility.yul\":14341:14424   */\n      tag_271\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":14334:14424   */\n      swap2\n      pop\n        /* \"#utility.yul\":14433:14526   */\n      tag_424\n        /* \"#utility.yul\":14522:14525   */\n      dup3\n        /* \"#utility.yul\":14433:14526   */\n      tag_272\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":14551:14552   */\n      0x00\n        /* \"#utility.yul\":14546:14549   */\n      dup3\n        /* \"#utility.yul\":14542:14553   */\n      add\n        /* \"#utility.yul\":14535:14553   */\n      swap1\n      pop\n        /* \"#utility.yul\":14161:14559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14565:14944   */\n    tag_167:\n        /* \"#utility.yul\":14749:14752   */\n      0x00\n        /* \"#utility.yul\":14771:14918   */\n      tag_426\n        /* \"#utility.yul\":14914:14917   */\n      dup3\n        /* \"#utility.yul\":14771:14918   */\n      tag_273\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":14764:14918   */\n      swap2\n      pop\n        /* \"#utility.yul\":14935:14938   */\n      dup2\n        /* \"#utility.yul\":14928:14938   */\n      swap1\n      pop\n        /* \"#utility.yul\":14565:14944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14950:15119   */\n    tag_274:\n        /* \"#utility.yul\":15090:15111   */\n      0x455448207472616e73666572206661696c656400000000000000000000000000\n        /* \"#utility.yul\":15086:15087   */\n      0x00\n        /* \"#utility.yul\":15078:15084   */\n      dup3\n        /* \"#utility.yul\":15074:15088   */\n      add\n        /* \"#utility.yul\":15067:15112   */\n      mstore\n        /* \"#utility.yul\":14950:15119   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15125:15491   */\n    tag_275:\n        /* \"#utility.yul\":15267:15270   */\n      0x00\n        /* \"#utility.yul\":15288:15355   */\n      tag_429\n        /* \"#utility.yul\":15352:15354   */\n      0x13\n        /* \"#utility.yul\":15347:15350   */\n      dup4\n        /* \"#utility.yul\":15288:15355   */\n      tag_238\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15281:15355   */\n      swap2\n      pop\n        /* \"#utility.yul\":15364:15457   */\n      tag_430\n        /* \"#utility.yul\":15453:15456   */\n      dup3\n        /* \"#utility.yul\":15364:15457   */\n      tag_274\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15482:15484   */\n      0x20\n        /* \"#utility.yul\":15477:15480   */\n      dup3\n        /* \"#utility.yul\":15473:15485   */\n      add\n        /* \"#utility.yul\":15466:15485   */\n      swap1\n      pop\n        /* \"#utility.yul\":15125:15491   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15497:15916   */\n    tag_173:\n        /* \"#utility.yul\":15663:15667   */\n      0x00\n        /* \"#utility.yul\":15701:15703   */\n      0x20\n        /* \"#utility.yul\":15690:15699   */\n      dup3\n        /* \"#utility.yul\":15686:15704   */\n      add\n        /* \"#utility.yul\":15678:15704   */\n      swap1\n      pop\n        /* \"#utility.yul\":15750:15759   */\n      dup2\n        /* \"#utility.yul\":15744:15748   */\n      dup2\n        /* \"#utility.yul\":15740:15760   */\n      sub\n        /* \"#utility.yul\":15736:15737   */\n      0x00\n        /* \"#utility.yul\":15725:15734   */\n      dup4\n        /* \"#utility.yul\":15721:15738   */\n      add\n        /* \"#utility.yul\":15714:15761   */\n      mstore\n        /* \"#utility.yul\":15778:15909   */\n      tag_432\n        /* \"#utility.yul\":15904:15908   */\n      dup2\n        /* \"#utility.yul\":15778:15909   */\n      tag_275\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":15770:15909   */\n      swap1\n      pop\n        /* \"#utility.yul\":15497:15916   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15922:16273   */\n    tag_178:\n        /* \"#utility.yul\":15992:15998   */\n      0x00\n        /* \"#utility.yul\":16041:16043   */\n      0x20\n        /* \"#utility.yul\":16029:16038   */\n      dup3\n        /* \"#utility.yul\":16020:16027   */\n      dup5\n        /* \"#utility.yul\":16016:16039   */\n      sub\n        /* \"#utility.yul\":16012:16044   */\n      slt\n        /* \"#utility.yul\":16009:16128   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":16047:16126   */\n      tag_435\n      tag_243\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":16009:16128   */\n    tag_434:\n        /* \"#utility.yul\":16167:16168   */\n      0x00\n        /* \"#utility.yul\":16192:16256   */\n      tag_436\n        /* \"#utility.yul\":16248:16255   */\n      dup5\n        /* \"#utility.yul\":16239:16245   */\n      dup3\n        /* \"#utility.yul\":16228:16237   */\n      dup6\n        /* \"#utility.yul\":16224:16246   */\n      add\n        /* \"#utility.yul\":16192:16256   */\n      tag_268\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":16182:16256   */\n      swap2\n      pop\n        /* \"#utility.yul\":16138:16266   */\n      pop\n        /* \"#utility.yul\":15922:16273   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16279:16461   */\n    tag_276:\n        /* \"#utility.yul\":16419:16453   */\n      0x5472616e73616374696f6e20616d6f756e742065786365656473206c696d6974\n        /* \"#utility.yul\":16415:16416   */\n      0x00\n        /* \"#utility.yul\":16407:16413   */\n      dup3\n        /* \"#utility.yul\":16403:16417   */\n      add\n        /* \"#utility.yul\":16396:16454   */\n      mstore\n        /* \"#utility.yul\":16279:16461   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16467:16833   */\n    tag_277:\n        /* \"#utility.yul\":16609:16612   */\n      0x00\n        /* \"#utility.yul\":16630:16697   */\n      tag_439\n        /* \"#utility.yul\":16694:16696   */\n      0x20\n        /* \"#utility.yul\":16689:16692   */\n      dup4\n        /* \"#utility.yul\":16630:16697   */\n      tag_238\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":16623:16697   */\n      swap2\n      pop\n        /* \"#utility.yul\":16706:16799   */\n      tag_440\n        /* \"#utility.yul\":16795:16798   */\n      dup3\n        /* \"#utility.yul\":16706:16799   */\n      tag_276\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":16824:16826   */\n      0x20\n        /* \"#utility.yul\":16819:16822   */\n      dup3\n        /* \"#utility.yul\":16815:16827   */\n      add\n        /* \"#utility.yul\":16808:16827   */\n      swap1\n      pop\n        /* \"#utility.yul\":16467:16833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16839:17258   */\n    tag_197:\n        /* \"#utility.yul\":17005:17009   */\n      0x00\n        /* \"#utility.yul\":17043:17045   */\n      0x20\n        /* \"#utility.yul\":17032:17041   */\n      dup3\n        /* \"#utility.yul\":17028:17046   */\n      add\n        /* \"#utility.yul\":17020:17046   */\n      swap1\n      pop\n        /* \"#utility.yul\":17092:17101   */\n      dup2\n        /* \"#utility.yul\":17086:17090   */\n      dup2\n        /* \"#utility.yul\":17082:17102   */\n      sub\n        /* \"#utility.yul\":17078:17079   */\n      0x00\n        /* \"#utility.yul\":17067:17076   */\n      dup4\n        /* \"#utility.yul\":17063:17080   */\n      add\n        /* \"#utility.yul\":17056:17103   */\n      mstore\n        /* \"#utility.yul\":17120:17251   */\n      tag_442\n        /* \"#utility.yul\":17246:17250   */\n      dup2\n        /* \"#utility.yul\":17120:17251   */\n      tag_277\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":17112:17251   */\n      swap1\n      pop\n        /* \"#utility.yul\":16839:17258   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17264:17444   */\n    tag_278:\n        /* \"#utility.yul\":17312:17389   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17309:17310   */\n      0x00\n        /* \"#utility.yul\":17302:17390   */\n      mstore\n        /* \"#utility.yul\":17409:17413   */\n      0x12\n        /* \"#utility.yul\":17406:17407   */\n      0x04\n        /* \"#utility.yul\":17399:17414   */\n      mstore\n        /* \"#utility.yul\":17433:17437   */\n      0x24\n        /* \"#utility.yul\":17430:17431   */\n      0x00\n        /* \"#utility.yul\":17423:17438   */\n      revert\n        /* \"#utility.yul\":17450:17635   */\n    tag_199:\n        /* \"#utility.yul\":17490:17491   */\n      0x00\n        /* \"#utility.yul\":17507:17527   */\n      tag_445\n        /* \"#utility.yul\":17525:17526   */\n      dup3\n        /* \"#utility.yul\":17507:17527   */\n      tag_249\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":17502:17527   */\n      swap2\n      pop\n        /* \"#utility.yul\":17541:17561   */\n      tag_446\n        /* \"#utility.yul\":17559:17560   */\n      dup4\n        /* \"#utility.yul\":17541:17561   */\n      tag_249\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":17536:17561   */\n      swap3\n      pop\n        /* \"#utility.yul\":17580:17581   */\n      dup3\n        /* \"#utility.yul\":17570:17605   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":17585:17603   */\n      tag_448\n      tag_278\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":17570:17605   */\n    tag_447:\n        /* \"#utility.yul\":17627:17628   */\n      dup3\n        /* \"#utility.yul\":17624:17625   */\n      dup3\n        /* \"#utility.yul\":17620:17629   */\n      div\n        /* \"#utility.yul\":17615:17629   */\n      swap1\n      pop\n        /* \"#utility.yul\":17450:17635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17641:17823   */\n    tag_279:\n        /* \"#utility.yul\":17781:17815   */\n      0x4461696c79207472616e73616374696f6e206c696d6974206578636565646564\n        /* \"#utility.yul\":17777:17778   */\n      0x00\n        /* \"#utility.yul\":17769:17775   */\n      dup3\n        /* \"#utility.yul\":17765:17779   */\n      add\n        /* \"#utility.yul\":17758:17816   */\n      mstore\n        /* \"#utility.yul\":17641:17823   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17829:18195   */\n    tag_280:\n        /* \"#utility.yul\":17971:17974   */\n      0x00\n        /* \"#utility.yul\":17992:18059   */\n      tag_451\n        /* \"#utility.yul\":18056:18058   */\n      0x20\n        /* \"#utility.yul\":18051:18054   */\n      dup4\n        /* \"#utility.yul\":17992:18059   */\n      tag_238\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":17985:18059   */\n      swap2\n      pop\n        /* \"#utility.yul\":18068:18161   */\n      tag_452\n        /* \"#utility.yul\":18157:18160   */\n      dup3\n        /* \"#utility.yul\":18068:18161   */\n      tag_279\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":18186:18188   */\n      0x20\n        /* \"#utility.yul\":18181:18184   */\n      dup3\n        /* \"#utility.yul\":18177:18189   */\n      add\n        /* \"#utility.yul\":18170:18189   */\n      swap1\n      pop\n        /* \"#utility.yul\":17829:18195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18201:18620   */\n    tag_203:\n        /* \"#utility.yul\":18367:18371   */\n      0x00\n        /* \"#utility.yul\":18405:18407   */\n      0x20\n        /* \"#utility.yul\":18394:18403   */\n      dup3\n        /* \"#utility.yul\":18390:18408   */\n      add\n        /* \"#utility.yul\":18382:18408   */\n      swap1\n      pop\n        /* \"#utility.yul\":18454:18463   */\n      dup2\n        /* \"#utility.yul\":18448:18452   */\n      dup2\n        /* \"#utility.yul\":18444:18464   */\n      sub\n        /* \"#utility.yul\":18440:18441   */\n      0x00\n        /* \"#utility.yul\":18429:18438   */\n      dup4\n        /* \"#utility.yul\":18425:18442   */\n      add\n        /* \"#utility.yul\":18418:18465   */\n      mstore\n        /* \"#utility.yul\":18482:18613   */\n      tag_454\n        /* \"#utility.yul\":18608:18612   */\n      dup2\n        /* \"#utility.yul\":18482:18613   */\n      tag_280\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":18474:18613   */\n      swap1\n      pop\n        /* \"#utility.yul\":18201:18620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18626:18859   */\n    tag_205:\n        /* \"#utility.yul\":18665:18668   */\n      0x00\n        /* \"#utility.yul\":18688:18712   */\n      tag_456\n        /* \"#utility.yul\":18706:18711   */\n      dup3\n        /* \"#utility.yul\":18688:18712   */\n      tag_249\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":18679:18712   */\n      swap2\n      pop\n        /* \"#utility.yul\":18734:18800   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18727:18732   */\n      dup3\n        /* \"#utility.yul\":18724:18801   */\n      sub\n        /* \"#utility.yul\":18721:18824   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":18804:18822   */\n      tag_458\n      tag_261\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":18721:18824   */\n    tag_457:\n        /* \"#utility.yul\":18851:18852   */\n      0x01\n        /* \"#utility.yul\":18844:18849   */\n      dup3\n        /* \"#utility.yul\":18840:18853   */\n      add\n        /* \"#utility.yul\":18833:18853   */\n      swap1\n      pop\n        /* \"#utility.yul\":18626:18859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18865:19275   */\n    tag_208:\n        /* \"#utility.yul\":18905:18912   */\n      0x00\n        /* \"#utility.yul\":18928:18948   */\n      tag_460\n        /* \"#utility.yul\":18946:18947   */\n      dup3\n        /* \"#utility.yul\":18928:18948   */\n      tag_249\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":18923:18948   */\n      swap2\n      pop\n        /* \"#utility.yul\":18962:18982   */\n      tag_461\n        /* \"#utility.yul\":18980:18981   */\n      dup4\n        /* \"#utility.yul\":18962:18982   */\n      tag_249\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":18957:18982   */\n      swap3\n      pop\n        /* \"#utility.yul\":19017:19018   */\n      dup3\n        /* \"#utility.yul\":19014:19015   */\n      dup3\n        /* \"#utility.yul\":19010:19019   */\n      mul\n        /* \"#utility.yul\":19039:19069   */\n      tag_462\n        /* \"#utility.yul\":19057:19068   */\n      dup2\n        /* \"#utility.yul\":19039:19069   */\n      tag_249\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":19028:19069   */\n      swap2\n      pop\n        /* \"#utility.yul\":19218:19219   */\n      dup3\n        /* \"#utility.yul\":19209:19216   */\n      dup3\n        /* \"#utility.yul\":19205:19220   */\n      div\n        /* \"#utility.yul\":19202:19203   */\n      dup5\n        /* \"#utility.yul\":19199:19221   */\n      eq\n        /* \"#utility.yul\":19179:19180   */\n      dup4\n        /* \"#utility.yul\":19172:19181   */\n      iszero\n        /* \"#utility.yul\":19152:19235   */\n      or\n        /* \"#utility.yul\":19129:19268   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":19248:19266   */\n      tag_464\n      tag_261\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":19129:19268   */\n    tag_463:\n        /* \"#utility.yul\":18913:19275   */\n      pop\n        /* \"#utility.yul\":18865:19275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19281:19723   */\n    tag_233:\n        /* \"#utility.yul\":19430:19434   */\n      0x00\n        /* \"#utility.yul\":19468:19470   */\n      0x60\n        /* \"#utility.yul\":19457:19466   */\n      dup3\n        /* \"#utility.yul\":19453:19471   */\n      add\n        /* \"#utility.yul\":19445:19471   */\n      swap1\n      pop\n        /* \"#utility.yul\":19481:19552   */\n      tag_466\n        /* \"#utility.yul\":19549:19550   */\n      0x00\n        /* \"#utility.yul\":19538:19547   */\n      dup4\n        /* \"#utility.yul\":19534:19551   */\n      add\n        /* \"#utility.yul\":19525:19531   */\n      dup7\n        /* \"#utility.yul\":19481:19552   */\n      tag_257\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":19562:19634   */\n      tag_467\n        /* \"#utility.yul\":19630:19632   */\n      0x20\n        /* \"#utility.yul\":19619:19628   */\n      dup4\n        /* \"#utility.yul\":19615:19633   */\n      add\n        /* \"#utility.yul\":19606:19612   */\n      dup6\n        /* \"#utility.yul\":19562:19634   */\n      tag_254\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":19644:19716   */\n      tag_468\n        /* \"#utility.yul\":19712:19714   */\n      0x40\n        /* \"#utility.yul\":19701:19710   */\n      dup4\n        /* \"#utility.yul\":19697:19715   */\n      add\n        /* \"#utility.yul\":19688:19694   */\n      dup5\n        /* \"#utility.yul\":19644:19716   */\n      tag_254\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":19281:19723   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e4e0f30767bc3fd53532e36d1ffab999ce5ac2e10e03fd0962394629c71b0a4f64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_581": {
									"entryPoint": null,
									"id": 581,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_85": {
									"entryPoint": null,
									"id": 85,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_mint_884": {
									"entryPoint": 260,
									"id": 884,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_851": {
									"entryPoint": 393,
									"id": 851,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_addresst_address_fromMemory": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2494,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1627,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11574:6",
										"nodeType": "YulBlock",
										"src": "0:11574:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "423:28:6",
													"nodeType": "YulBlock",
													"src": "423:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:6",
																		"nodeType": "YulLiteral",
																		"src": "443:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:12:6",
																"nodeType": "YulFunctionCall",
																"src": "433:12:6"
															},
															"nativeSrc": "433:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:6"
											},
											{
												"body": {
													"nativeSrc": "546:28:6",
													"nodeType": "YulBlock",
													"src": "546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:6"
																},
																"nativeSrc": "556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "556:12:6"
															},
															"nativeSrc": "556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:6"
											},
											{
												"body": {
													"nativeSrc": "628:54:6",
													"nodeType": "YulBlock",
													"src": "628:54:6",
													"statements": [
														{
															"nativeSrc": "638:38:6",
															"nodeType": "YulAssignment",
															"src": "638:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:6",
																				"nodeType": "YulLiteral",
																				"src": "663:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:6"
																		},
																		"nativeSrc": "652:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:6",
																				"nodeType": "YulLiteral",
																				"src": "672:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:6"
																		},
																		"nativeSrc": "668:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:6"
																},
																"nativeSrc": "648:28:6",
																"nodeType": "YulFunctionCall",
																"src": "648:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:6",
														"nodeType": "YulTypedName",
														"src": "611:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:6",
														"nodeType": "YulTypedName",
														"src": "621:6:6",
														"type": ""
													}
												],
												"src": "580:102:6"
											},
											{
												"body": {
													"nativeSrc": "716:152:6",
													"nodeType": "YulBlock",
													"src": "716:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:6",
																		"nodeType": "YulLiteral",
																		"src": "733:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:6",
																		"nodeType": "YulLiteral",
																		"src": "736:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:6"
																},
																"nativeSrc": "726:88:6",
																"nodeType": "YulFunctionCall",
																"src": "726:88:6"
															},
															"nativeSrc": "726:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:6",
																		"nodeType": "YulLiteral",
																		"src": "830:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:6",
																		"nodeType": "YulLiteral",
																		"src": "833:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																},
																"nativeSrc": "823:15:6",
																"nodeType": "YulFunctionCall",
																"src": "823:15:6"
															},
															"nativeSrc": "823:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:6",
																		"nodeType": "YulLiteral",
																		"src": "857:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:6"
																},
																"nativeSrc": "847:15:6",
																"nodeType": "YulFunctionCall",
																"src": "847:15:6"
															},
															"nativeSrc": "847:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:6"
											},
											{
												"body": {
													"nativeSrc": "917:238:6",
													"nodeType": "YulBlock",
													"src": "917:238:6",
													"statements": [
														{
															"nativeSrc": "927:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:6"
																		},
																		"nativeSrc": "957:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:6"
																},
																"nativeSrc": "945:40:6",
																"nodeType": "YulFunctionCall",
																"src": "945:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:6",
																	"nodeType": "YulTypedName",
																	"src": "931:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:6",
																"nodeType": "YulBlock",
																"src": "1096:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:6"
																			},
																			"nativeSrc": "1098:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:6"
																		},
																		"nativeSrc": "1098:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:6",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:6"
																		},
																		"nativeSrc": "1036:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:6"
																		},
																		"nativeSrc": "1072:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:6"
																},
																"nativeSrc": "1033:62:6",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:6"
															},
															"nativeSrc": "1030:88:6",
															"nodeType": "YulIf",
															"src": "1030:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																},
																"nativeSrc": "1127:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:6"
															},
															"nativeSrc": "1127:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:6",
														"nodeType": "YulTypedName",
														"src": "903:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:6",
														"nodeType": "YulTypedName",
														"src": "911:4:6",
														"type": ""
													}
												],
												"src": "874:281:6"
											},
											{
												"body": {
													"nativeSrc": "1202:88:6",
													"nodeType": "YulBlock",
													"src": "1202:88:6",
													"statements": [
														{
															"nativeSrc": "1212:30:6",
															"nodeType": "YulAssignment",
															"src": "1212:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:6"
																},
																"nativeSrc": "1222:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:6"
																},
																"nativeSrc": "1251:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:6"
															},
															"nativeSrc": "1251:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:6",
														"nodeType": "YulTypedName",
														"src": "1186:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:6",
														"nodeType": "YulTypedName",
														"src": "1195:6:6",
														"type": ""
													}
												],
												"src": "1161:129:6"
											},
											{
												"body": {
													"nativeSrc": "1363:241:6",
													"nodeType": "YulBlock",
													"src": "1363:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:6",
																"nodeType": "YulBlock",
																"src": "1468:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:6"
																			},
																			"nativeSrc": "1470:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:6"
																		},
																		"nativeSrc": "1470:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:6"
																},
																"nativeSrc": "1437:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:6"
															},
															"nativeSrc": "1434:56:6",
															"nodeType": "YulIf",
															"src": "1434:56:6"
														},
														{
															"nativeSrc": "1500:37:6",
															"nodeType": "YulAssignment",
															"src": "1500:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:6"
																},
																"nativeSrc": "1508:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:6"
																}
															]
														},
														{
															"nativeSrc": "1574:23:6",
															"nodeType": "YulAssignment",
															"src": "1574:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:6"
																},
																"nativeSrc": "1582:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:6",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:6",
														"nodeType": "YulTypedName",
														"src": "1358:4:6",
														"type": ""
													}
												],
												"src": "1296:308:6"
											},
											{
												"body": {
													"nativeSrc": "1672:77:6",
													"nodeType": "YulBlock",
													"src": "1672:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:6"
																},
																"nativeSrc": "1683:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:6"
															},
															"nativeSrc": "1683:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:6"
																		},
																		"nativeSrc": "1722:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:6"
																},
																"nativeSrc": "1715:27:6",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:6"
															},
															"nativeSrc": "1715:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:6",
														"nodeType": "YulTypedName",
														"src": "1654:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:6",
														"nodeType": "YulTypedName",
														"src": "1659:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:6",
														"nodeType": "YulTypedName",
														"src": "1664:6:6",
														"type": ""
													}
												],
												"src": "1610:139:6"
											},
											{
												"body": {
													"nativeSrc": "1850:339:6",
													"nodeType": "YulBlock",
													"src": "1850:339:6",
													"statements": [
														{
															"nativeSrc": "1860:75:6",
															"nodeType": "YulAssignment",
															"src": "1860:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:6"
																		},
																		"nativeSrc": "1885:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:6"
																},
																"nativeSrc": "1869:66:6",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:6"
																},
																"nativeSrc": "1944:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:6"
															},
															"nativeSrc": "1944:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:6"
														},
														{
															"nativeSrc": "1974:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:6"
																},
																"nativeSrc": "1985:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:6",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:6",
																"nodeType": "YulBlock",
																"src": "2039:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:6"
																			},
																			"nativeSrc": "2041:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:6"
																		},
																		"nativeSrc": "2041:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:6"
																		},
																		"nativeSrc": "2016:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:6"
																},
																"nativeSrc": "2013:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:6"
															},
															"nativeSrc": "2010:112:6",
															"nodeType": "YulIf",
															"src": "2010:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:6"
																},
																"nativeSrc": "2131:52:6",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:6"
															},
															"nativeSrc": "2131:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:6",
														"nodeType": "YulTypedName",
														"src": "1823:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:6",
														"nodeType": "YulTypedName",
														"src": "1828:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:6",
														"nodeType": "YulTypedName",
														"src": "1836:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:6",
														"nodeType": "YulTypedName",
														"src": "1844:5:6",
														"type": ""
													}
												],
												"src": "1755:434:6"
											},
											{
												"body": {
													"nativeSrc": "2282:282:6",
													"nodeType": "YulBlock",
													"src": "2282:282:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:6",
																"nodeType": "YulBlock",
																"src": "2331:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:6"
																			},
																			"nativeSrc": "2333:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:6"
																		},
																		"nativeSrc": "2333:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:6"
																				},
																				"nativeSrc": "2306:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:6"
																		},
																		"nativeSrc": "2302:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:6"
																},
																"nativeSrc": "2295:35:6",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:6"
															},
															"nativeSrc": "2292:122:6",
															"nodeType": "YulIf",
															"src": "2292:122:6"
														},
														{
															"nativeSrc": "2423:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:6"
																},
																"nativeSrc": "2437:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:6",
															"nodeType": "YulAssignment",
															"src": "2459:99:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:6"
																		},
																		"nativeSrc": "2527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:6"
																},
																"nativeSrc": "2468:90:6",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:6",
														"nodeType": "YulTypedName",
														"src": "2260:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:6",
														"nodeType": "YulTypedName",
														"src": "2268:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:6",
														"nodeType": "YulTypedName",
														"src": "2276:5:6",
														"type": ""
													}
												],
												"src": "2209:355:6"
											},
											{
												"body": {
													"nativeSrc": "2615:32:6",
													"nodeType": "YulBlock",
													"src": "2615:32:6",
													"statements": [
														{
															"nativeSrc": "2625:16:6",
															"nodeType": "YulAssignment",
															"src": "2625:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:6",
																"nodeType": "YulIdentifier",
																"src": "2636:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:6",
														"nodeType": "YulTypedName",
														"src": "2597:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:6",
														"nodeType": "YulTypedName",
														"src": "2607:7:6",
														"type": ""
													}
												],
												"src": "2570:77:6"
											},
											{
												"body": {
													"nativeSrc": "2696:79:6",
													"nodeType": "YulBlock",
													"src": "2696:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:6",
																"nodeType": "YulBlock",
																"src": "2753:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:6"
																			},
																			"nativeSrc": "2755:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:6"
																		},
																		"nativeSrc": "2755:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:6"
																				},
																				"nativeSrc": "2726:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:6"
																		},
																		"nativeSrc": "2716:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:6"
																},
																"nativeSrc": "2709:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:6"
															},
															"nativeSrc": "2706:63:6",
															"nodeType": "YulIf",
															"src": "2706:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:6",
														"nodeType": "YulTypedName",
														"src": "2689:5:6",
														"type": ""
													}
												],
												"src": "2653:122:6"
											},
											{
												"body": {
													"nativeSrc": "2844:80:6",
													"nodeType": "YulBlock",
													"src": "2844:80:6",
													"statements": [
														{
															"nativeSrc": "2854:22:6",
															"nodeType": "YulAssignment",
															"src": "2854:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:6"
																},
																"nativeSrc": "2863:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:6"
																},
																"nativeSrc": "2885:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:6"
															},
															"nativeSrc": "2885:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:6",
														"nodeType": "YulTypedName",
														"src": "2822:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:6",
														"nodeType": "YulTypedName",
														"src": "2830:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:6",
														"nodeType": "YulTypedName",
														"src": "2838:5:6",
														"type": ""
													}
												],
												"src": "2781:143:6"
											},
											{
												"body": {
													"nativeSrc": "2975:81:6",
													"nodeType": "YulBlock",
													"src": "2975:81:6",
													"statements": [
														{
															"nativeSrc": "2985:65:6",
															"nodeType": "YulAssignment",
															"src": "2985:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3000:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3000:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3007:42:6",
																		"nodeType": "YulLiteral",
																		"src": "3007:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2996:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:6"
																},
																"nativeSrc": "2996:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2996:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2985:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2985:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2930:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2957:5:6",
														"nodeType": "YulTypedName",
														"src": "2957:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2967:7:6",
														"nodeType": "YulTypedName",
														"src": "2967:7:6",
														"type": ""
													}
												],
												"src": "2930:126:6"
											},
											{
												"body": {
													"nativeSrc": "3107:51:6",
													"nodeType": "YulBlock",
													"src": "3107:51:6",
													"statements": [
														{
															"nativeSrc": "3117:35:6",
															"nodeType": "YulAssignment",
															"src": "3117:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3146:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3146:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3128:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3128:17:6"
																},
																"nativeSrc": "3128:24:6",
																"nodeType": "YulFunctionCall",
																"src": "3128:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3117:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3117:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3062:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3089:5:6",
														"nodeType": "YulTypedName",
														"src": "3089:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3099:7:6",
														"nodeType": "YulTypedName",
														"src": "3099:7:6",
														"type": ""
													}
												],
												"src": "3062:96:6"
											},
											{
												"body": {
													"nativeSrc": "3207:79:6",
													"nodeType": "YulBlock",
													"src": "3207:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3264:16:6",
																"nodeType": "YulBlock",
																"src": "3264:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3273:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3276:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3276:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3266:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3266:6:6"
																			},
																			"nativeSrc": "3266:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3266:12:6"
																		},
																		"nativeSrc": "3266:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3266:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3230:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3230:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3255:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3255:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3237:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3237:17:6"
																				},
																				"nativeSrc": "3237:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3237:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3227:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3227:2:6"
																		},
																		"nativeSrc": "3227:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3227:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3220:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:6"
																},
																"nativeSrc": "3220:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3220:43:6"
															},
															"nativeSrc": "3217:63:6",
															"nodeType": "YulIf",
															"src": "3217:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3164:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3200:5:6",
														"nodeType": "YulTypedName",
														"src": "3200:5:6",
														"type": ""
													}
												],
												"src": "3164:122:6"
											},
											{
												"body": {
													"nativeSrc": "3355:80:6",
													"nodeType": "YulBlock",
													"src": "3355:80:6",
													"statements": [
														{
															"nativeSrc": "3365:22:6",
															"nodeType": "YulAssignment",
															"src": "3365:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3380:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3374:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3374:5:6"
																},
																"nativeSrc": "3374:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3374:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3365:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3365:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3423:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3423:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3396:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3396:26:6"
																},
																"nativeSrc": "3396:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3396:33:6"
															},
															"nativeSrc": "3396:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3396:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3292:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3333:6:6",
														"nodeType": "YulTypedName",
														"src": "3333:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3341:3:6",
														"nodeType": "YulTypedName",
														"src": "3341:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3349:5:6",
														"nodeType": "YulTypedName",
														"src": "3349:5:6",
														"type": ""
													}
												],
												"src": "3292:143:6"
											},
											{
												"body": {
													"nativeSrc": "3640:1438:6",
													"nodeType": "YulBlock",
													"src": "3640:1438:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3687:83:6",
																"nodeType": "YulBlock",
																"src": "3687:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3689:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3689:77:6"
																			},
																			"nativeSrc": "3689:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3689:79:6"
																		},
																		"nativeSrc": "3689:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3689:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3661:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3661:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3670:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3670:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3657:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3657:3:6"
																		},
																		"nativeSrc": "3657:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3657:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3682:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3682:3:6",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3653:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3653:3:6"
																},
																"nativeSrc": "3653:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3653:33:6"
															},
															"nativeSrc": "3650:120:6",
															"nodeType": "YulIf",
															"src": "3650:120:6"
														},
														{
															"nativeSrc": "3780:291:6",
															"nodeType": "YulBlock",
															"src": "3780:291:6",
															"statements": [
																{
																	"nativeSrc": "3795:38:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3795:38:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3819:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3819:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3830:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3830:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3815:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3815:3:6"
																				},
																				"nativeSrc": "3815:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3815:17:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3809:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "3809:5:6"
																		},
																		"nativeSrc": "3809:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3809:24:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3799:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3799:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3880:83:6",
																		"nodeType": "YulBlock",
																		"src": "3880:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3882:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "3882:77:6"
																					},
																					"nativeSrc": "3882:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3882:79:6"
																				},
																				"nativeSrc": "3882:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3882:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3852:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3852:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3860:18:6",
																				"nodeType": "YulLiteral",
																				"src": "3860:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3849:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3849:2:6"
																		},
																		"nativeSrc": "3849:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3849:30:6"
																	},
																	"nativeSrc": "3846:117:6",
																	"nodeType": "YulIf",
																	"src": "3846:117:6"
																},
																{
																	"nativeSrc": "3977:84:6",
																	"nodeType": "YulAssignment",
																	"src": "3977:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4033:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4033:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4044:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4044:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4029:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4029:3:6"
																				},
																				"nativeSrc": "4029:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4029:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4053:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4053:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3987:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "3987:41:6"
																		},
																		"nativeSrc": "3987:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3987:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3977:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3977:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4081:292:6",
															"nodeType": "YulBlock",
															"src": "4081:292:6",
															"statements": [
																{
																	"nativeSrc": "4096:39:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4096:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4120:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4120:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4131:2:6",
																						"nodeType": "YulLiteral",
																						"src": "4131:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4116:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4116:3:6"
																				},
																				"nativeSrc": "4116:18:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4116:18:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4110:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4110:5:6"
																		},
																		"nativeSrc": "4110:25:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:25:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4100:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4100:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4182:83:6",
																		"nodeType": "YulBlock",
																		"src": "4182:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4184:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "4184:77:6"
																					},
																					"nativeSrc": "4184:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4184:79:6"
																				},
																				"nativeSrc": "4184:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4184:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4154:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4154:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4162:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4162:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4151:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4151:2:6"
																		},
																		"nativeSrc": "4151:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4151:30:6"
																	},
																	"nativeSrc": "4148:117:6",
																	"nodeType": "YulIf",
																	"src": "4148:117:6"
																},
																{
																	"nativeSrc": "4279:84:6",
																	"nodeType": "YulAssignment",
																	"src": "4279:84:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4335:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4335:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4346:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4346:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4331:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4331:3:6"
																				},
																				"nativeSrc": "4331:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4331:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4355:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4355:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4289:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "4289:41:6"
																		},
																		"nativeSrc": "4289:74:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4289:74:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4279:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4279:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4383:129:6",
															"nodeType": "YulBlock",
															"src": "4383:129:6",
															"statements": [
																{
																	"nativeSrc": "4398:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4398:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4412:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4412:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4402:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4402:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4428:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4428:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4474:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4474:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4485:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4485:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4470:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:6"
																				},
																				"nativeSrc": "4470:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4494:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4494:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4438:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4438:31:6"
																		},
																		"nativeSrc": "4438:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4438:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4428:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4428:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4522:129:6",
															"nodeType": "YulBlock",
															"src": "4522:129:6",
															"statements": [
																{
																	"nativeSrc": "4537:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4537:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4551:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4551:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4541:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4541:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4567:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4567:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4613:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4613:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4624:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4624:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4609:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4609:3:6"
																				},
																				"nativeSrc": "4609:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4609:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4633:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4633:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4577:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4577:31:6"
																		},
																		"nativeSrc": "4577:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4577:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4567:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4567:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4661:130:6",
															"nodeType": "YulBlock",
															"src": "4661:130:6",
															"statements": [
																{
																	"nativeSrc": "4676:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4676:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4690:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4690:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4680:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4680:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4707:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4707:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4753:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4753:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4764:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4764:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4749:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4749:3:6"
																				},
																				"nativeSrc": "4749:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4749:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4773:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4773:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4717:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4717:31:6"
																		},
																		"nativeSrc": "4717:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4717:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4707:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4707:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4801:130:6",
															"nodeType": "YulBlock",
															"src": "4801:130:6",
															"statements": [
																{
																	"nativeSrc": "4816:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4816:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4830:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4830:3:6",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4820:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4820:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4847:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4847:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4893:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4893:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4904:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4904:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4889:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4889:3:6"
																				},
																				"nativeSrc": "4889:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4889:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4913:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4913:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4857:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4857:31:6"
																		},
																		"nativeSrc": "4857:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4857:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "4847:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4847:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4941:130:6",
															"nodeType": "YulBlock",
															"src": "4941:130:6",
															"statements": [
																{
																	"nativeSrc": "4956:17:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4956:17:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4970:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4970:3:6",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4960:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4960:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:74:6",
																	"nodeType": "YulAssignment",
																	"src": "4987:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5033:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5033:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5044:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5044:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5029:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5029:3:6"
																				},
																				"nativeSrc": "5029:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5029:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5053:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5053:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4997:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4997:31:6"
																		},
																		"nativeSrc": "4997:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "4987:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_addresst_address_fromMemory",
												"nativeSrc": "3441:1637:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3562:9:6",
														"nodeType": "YulTypedName",
														"src": "3562:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3573:7:6",
														"nodeType": "YulTypedName",
														"src": "3573:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3585:6:6",
														"nodeType": "YulTypedName",
														"src": "3585:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3593:6:6",
														"nodeType": "YulTypedName",
														"src": "3593:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3601:6:6",
														"nodeType": "YulTypedName",
														"src": "3601:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3609:6:6",
														"nodeType": "YulTypedName",
														"src": "3609:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3617:6:6",
														"nodeType": "YulTypedName",
														"src": "3617:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3625:6:6",
														"nodeType": "YulTypedName",
														"src": "3625:6:6",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3633:6:6",
														"nodeType": "YulTypedName",
														"src": "3633:6:6",
														"type": ""
													}
												],
												"src": "3441:1637:6"
											},
											{
												"body": {
													"nativeSrc": "5143:40:6",
													"nodeType": "YulBlock",
													"src": "5143:40:6",
													"statements": [
														{
															"nativeSrc": "5154:22:6",
															"nodeType": "YulAssignment",
															"src": "5154:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5170:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5170:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5164:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "5164:5:6"
																},
																"nativeSrc": "5164:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5164:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5154:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5154:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5084:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5126:5:6",
														"nodeType": "YulTypedName",
														"src": "5126:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5136:6:6",
														"nodeType": "YulTypedName",
														"src": "5136:6:6",
														"type": ""
													}
												],
												"src": "5084:99:6"
											},
											{
												"body": {
													"nativeSrc": "5217:152:6",
													"nodeType": "YulBlock",
													"src": "5217:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5234:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5234:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5237:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5237:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5227:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5227:6:6"
																},
																"nativeSrc": "5227:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5227:88:6"
															},
															"nativeSrc": "5227:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5227:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5331:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5334:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5334:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5324:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5324:6:6"
																},
																"nativeSrc": "5324:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5324:15:6"
															},
															"nativeSrc": "5324:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5324:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5355:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5355:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5358:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5358:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5348:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:6"
																},
																"nativeSrc": "5348:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5348:15:6"
															},
															"nativeSrc": "5348:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5348:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5189:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5189:180:6"
											},
											{
												"body": {
													"nativeSrc": "5426:269:6",
													"nodeType": "YulBlock",
													"src": "5426:269:6",
													"statements": [
														{
															"nativeSrc": "5436:22:6",
															"nodeType": "YulAssignment",
															"src": "5436:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5450:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5450:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5456:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5456:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5446:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5446:3:6"
																},
																"nativeSrc": "5446:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5446:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5436:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5436:6:6"
																}
															]
														},
														{
															"nativeSrc": "5467:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5467:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5497:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5497:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5503:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5503:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5493:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5493:3:6"
																},
																"nativeSrc": "5493:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5493:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5471:18:6",
																	"nodeType": "YulTypedName",
																	"src": "5471:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5544:51:6",
																"nodeType": "YulBlock",
																"src": "5544:51:6",
																"statements": [
																	{
																		"nativeSrc": "5558:27:6",
																		"nodeType": "YulAssignment",
																		"src": "5558:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5572:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5572:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5580:4:6",
																					"nodeType": "YulLiteral",
																					"src": "5580:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5568:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5568:3:6"
																			},
																			"nativeSrc": "5568:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5568:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5558:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5558:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5524:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5524:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5517:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:6"
																},
																"nativeSrc": "5517:26:6",
																"nodeType": "YulFunctionCall",
																"src": "5517:26:6"
															},
															"nativeSrc": "5514:81:6",
															"nodeType": "YulIf",
															"src": "5514:81:6"
														},
														{
															"body": {
																"nativeSrc": "5647:42:6",
																"nodeType": "YulBlock",
																"src": "5647:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5661:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5661:16:6"
																			},
																			"nativeSrc": "5661:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5661:18:6"
																		},
																		"nativeSrc": "5661:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5661:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5611:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5611:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5634:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5634:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5642:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5642:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5631:2:6"
																		},
																		"nativeSrc": "5631:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5631:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5608:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5608:2:6"
																},
																"nativeSrc": "5608:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5608:38:6"
															},
															"nativeSrc": "5605:84:6",
															"nodeType": "YulIf",
															"src": "5605:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5375:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5410:4:6",
														"nodeType": "YulTypedName",
														"src": "5410:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5419:6:6",
														"nodeType": "YulTypedName",
														"src": "5419:6:6",
														"type": ""
													}
												],
												"src": "5375:320:6"
											},
											{
												"body": {
													"nativeSrc": "5755:87:6",
													"nodeType": "YulBlock",
													"src": "5755:87:6",
													"statements": [
														{
															"nativeSrc": "5765:11:6",
															"nodeType": "YulAssignment",
															"src": "5765:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "5773:3:6",
																"nodeType": "YulIdentifier",
																"src": "5773:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5765:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5765:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5793:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5793:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5796:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5796:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5786:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5786:6:6"
																},
																"nativeSrc": "5786:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5786:14:6"
															},
															"nativeSrc": "5786:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "5786:14:6"
														},
														{
															"nativeSrc": "5809:26:6",
															"nodeType": "YulAssignment",
															"src": "5809:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5827:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5827:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5830:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5830:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5817:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5817:9:6"
																},
																"nativeSrc": "5817:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5817:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5809:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5809:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5701:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5742:3:6",
														"nodeType": "YulTypedName",
														"src": "5742:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5750:4:6",
														"nodeType": "YulTypedName",
														"src": "5750:4:6",
														"type": ""
													}
												],
												"src": "5701:141:6"
											},
											{
												"body": {
													"nativeSrc": "5892:49:6",
													"nodeType": "YulBlock",
													"src": "5892:49:6",
													"statements": [
														{
															"nativeSrc": "5902:33:6",
															"nodeType": "YulAssignment",
															"src": "5902:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5920:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5920:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5927:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5927:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5916:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:6"
																		},
																		"nativeSrc": "5916:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5916:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5932:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5932:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5912:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5912:3:6"
																},
																"nativeSrc": "5912:23:6",
																"nodeType": "YulFunctionCall",
																"src": "5912:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5902:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5902:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5848:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5875:5:6",
														"nodeType": "YulTypedName",
														"src": "5875:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5885:6:6",
														"nodeType": "YulTypedName",
														"src": "5885:6:6",
														"type": ""
													}
												],
												"src": "5848:93:6"
											},
											{
												"body": {
													"nativeSrc": "6000:54:6",
													"nodeType": "YulBlock",
													"src": "6000:54:6",
													"statements": [
														{
															"nativeSrc": "6010:37:6",
															"nodeType": "YulAssignment",
															"src": "6010:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6035:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6035:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6041:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6041:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "6031:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6031:3:6"
																},
																"nativeSrc": "6031:16:6",
																"nodeType": "YulFunctionCall",
																"src": "6031:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6010:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "6010:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5947:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5975:4:6",
														"nodeType": "YulTypedName",
														"src": "5975:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5981:5:6",
														"nodeType": "YulTypedName",
														"src": "5981:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5991:8:6",
														"nodeType": "YulTypedName",
														"src": "5991:8:6",
														"type": ""
													}
												],
												"src": "5947:107:6"
											},
											{
												"body": {
													"nativeSrc": "6136:317:6",
													"nodeType": "YulBlock",
													"src": "6136:317:6",
													"statements": [
														{
															"nativeSrc": "6146:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6146:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "6167:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "6167:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6179:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6179:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6163:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6163:3:6"
																},
																"nativeSrc": "6163:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6163:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "6150:9:6",
																	"nodeType": "YulTypedName",
																	"src": "6150:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6190:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6190:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6221:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6221:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6232:66:6",
																		"nodeType": "YulLiteral",
																		"src": "6232:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6202:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "6202:18:6"
																},
																"nativeSrc": "6202:97:6",
																"nodeType": "YulFunctionCall",
																"src": "6202:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6194:4:6",
																	"nodeType": "YulTypedName",
																	"src": "6194:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6308:51:6",
															"nodeType": "YulAssignment",
															"src": "6308:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6339:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6339:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6350:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "6350:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6320:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "6320:18:6"
																},
																"nativeSrc": "6320:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6320:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "6308:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "6308:8:6"
																}
															]
														},
														{
															"nativeSrc": "6368:30:6",
															"nodeType": "YulAssignment",
															"src": "6368:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6381:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6381:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6392:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6392:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6388:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:6"
																		},
																		"nativeSrc": "6388:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6388:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6377:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:6"
																},
																"nativeSrc": "6377:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6377:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6368:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6368:5:6"
																}
															]
														},
														{
															"nativeSrc": "6407:40:6",
															"nodeType": "YulAssignment",
															"src": "6407:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6420:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6420:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6431:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "6431:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6441:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6441:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6427:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6427:3:6"
																		},
																		"nativeSrc": "6427:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6427:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6417:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6417:2:6"
																},
																"nativeSrc": "6417:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6417:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6407:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "6060:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6097:5:6",
														"nodeType": "YulTypedName",
														"src": "6097:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "6104:10:6",
														"nodeType": "YulTypedName",
														"src": "6104:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "6116:8:6",
														"nodeType": "YulTypedName",
														"src": "6116:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6129:6:6",
														"nodeType": "YulTypedName",
														"src": "6129:6:6",
														"type": ""
													}
												],
												"src": "6060:393:6"
											},
											{
												"body": {
													"nativeSrc": "6491:28:6",
													"nodeType": "YulBlock",
													"src": "6491:28:6",
													"statements": [
														{
															"nativeSrc": "6501:12:6",
															"nodeType": "YulAssignment",
															"src": "6501:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "6508:5:6",
																"nodeType": "YulIdentifier",
																"src": "6508:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6501:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6501:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6459:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6477:5:6",
														"nodeType": "YulTypedName",
														"src": "6477:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6487:3:6",
														"nodeType": "YulTypedName",
														"src": "6487:3:6",
														"type": ""
													}
												],
												"src": "6459:60:6"
											},
											{
												"body": {
													"nativeSrc": "6585:82:6",
													"nodeType": "YulBlock",
													"src": "6585:82:6",
													"statements": [
														{
															"nativeSrc": "6595:66:6",
															"nodeType": "YulAssignment",
															"src": "6595:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6653:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6653:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6635:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "6635:17:6"
																				},
																				"nativeSrc": "6635:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6635:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6626:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "6626:8:6"
																		},
																		"nativeSrc": "6626:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6626:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6608:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6608:17:6"
																},
																"nativeSrc": "6608:53:6",
																"nodeType": "YulFunctionCall",
																"src": "6608:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6595:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6595:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6525:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6565:5:6",
														"nodeType": "YulTypedName",
														"src": "6565:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6575:9:6",
														"nodeType": "YulTypedName",
														"src": "6575:9:6",
														"type": ""
													}
												],
												"src": "6525:142:6"
											},
											{
												"body": {
													"nativeSrc": "6720:28:6",
													"nodeType": "YulBlock",
													"src": "6720:28:6",
													"statements": [
														{
															"nativeSrc": "6730:12:6",
															"nodeType": "YulAssignment",
															"src": "6730:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "6737:5:6",
																"nodeType": "YulIdentifier",
																"src": "6737:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6730:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6730:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6673:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6706:5:6",
														"nodeType": "YulTypedName",
														"src": "6706:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6716:3:6",
														"nodeType": "YulTypedName",
														"src": "6716:3:6",
														"type": ""
													}
												],
												"src": "6673:75:6"
											},
											{
												"body": {
													"nativeSrc": "6830:193:6",
													"nodeType": "YulBlock",
													"src": "6830:193:6",
													"statements": [
														{
															"nativeSrc": "6840:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6840:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6895:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "6895:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6864:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "6864:30:6"
																},
																"nativeSrc": "6864:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6864:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6844:16:6",
																	"nodeType": "YulTypedName",
																	"src": "6844:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6919:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6919:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6959:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "6959:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6953:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "6953:5:6"
																				},
																				"nativeSrc": "6953:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6953:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6966:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6966:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6998:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "6998:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6974:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "6974:23:6"
																				},
																				"nativeSrc": "6974:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6974:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6925:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "6925:27:6"
																		},
																		"nativeSrc": "6925:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6925:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6912:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6912:6:6"
																},
																"nativeSrc": "6912:105:6",
																"nodeType": "YulFunctionCall",
																"src": "6912:105:6"
															},
															"nativeSrc": "6912:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "6912:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6754:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6807:4:6",
														"nodeType": "YulTypedName",
														"src": "6807:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6813:6:6",
														"nodeType": "YulTypedName",
														"src": "6813:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6821:7:6",
														"nodeType": "YulTypedName",
														"src": "6821:7:6",
														"type": ""
													}
												],
												"src": "6754:269:6"
											},
											{
												"body": {
													"nativeSrc": "7078:24:6",
													"nodeType": "YulBlock",
													"src": "7078:24:6",
													"statements": [
														{
															"nativeSrc": "7088:8:6",
															"nodeType": "YulAssignment",
															"src": "7088:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "7095:1:6",
																"nodeType": "YulLiteral",
																"src": "7095:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7088:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7088:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "7029:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7074:3:6",
														"nodeType": "YulTypedName",
														"src": "7074:3:6",
														"type": ""
													}
												],
												"src": "7029:73:6"
											},
											{
												"body": {
													"nativeSrc": "7161:136:6",
													"nodeType": "YulBlock",
													"src": "7161:136:6",
													"statements": [
														{
															"nativeSrc": "7171:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7171:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "7185:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "7185:30:6"
																},
																"nativeSrc": "7185:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7185:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "7175:6:6",
																	"nodeType": "YulTypedName",
																	"src": "7175:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7270:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7270:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7276:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7276:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "7284:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7284:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "7226:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7226:43:6"
																},
																"nativeSrc": "7226:65:6",
																"nodeType": "YulFunctionCall",
																"src": "7226:65:6"
															},
															"nativeSrc": "7226:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "7226:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "7108:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7147:4:6",
														"nodeType": "YulTypedName",
														"src": "7147:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7153:6:6",
														"nodeType": "YulTypedName",
														"src": "7153:6:6",
														"type": ""
													}
												],
												"src": "7108:189:6"
											},
											{
												"body": {
													"nativeSrc": "7353:136:6",
													"nodeType": "YulBlock",
													"src": "7353:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7420:63:6",
																"nodeType": "YulBlock",
																"src": "7420:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7464:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "7464:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7471:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7471:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7434:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "7434:29:6"
																			},
																			"nativeSrc": "7434:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7434:39:6"
																		},
																		"nativeSrc": "7434:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7434:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7373:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7373:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7380:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7380:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7370:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7370:2:6"
																},
																"nativeSrc": "7370:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7370:14:6"
															},
															"nativeSrc": "7363:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7385:26:6",
																"nodeType": "YulBlock",
																"src": "7385:26:6",
																"statements": [
																	{
																		"nativeSrc": "7387:22:6",
																		"nodeType": "YulAssignment",
																		"src": "7387:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7400:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "7400:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7407:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7407:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7396:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7396:3:6"
																			},
																			"nativeSrc": "7396:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7396:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7387:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7387:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7367:2:6",
																"nodeType": "YulBlock",
																"src": "7367:2:6",
																"statements": []
															},
															"src": "7363:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "7303:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7341:5:6",
														"nodeType": "YulTypedName",
														"src": "7341:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7348:3:6",
														"nodeType": "YulTypedName",
														"src": "7348:3:6",
														"type": ""
													}
												],
												"src": "7303:186:6"
											},
											{
												"body": {
													"nativeSrc": "7574:464:6",
													"nodeType": "YulBlock",
													"src": "7574:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7600:431:6",
																"nodeType": "YulBlock",
																"src": "7600:431:6",
																"statements": [
																	{
																		"nativeSrc": "7614:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7614:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7662:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "7662:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7630:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "7630:31:6"
																			},
																			"nativeSrc": "7630:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7630:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7618:8:6",
																				"nodeType": "YulTypedName",
																				"src": "7618:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7681:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7681:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7704:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "7704:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7732:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "7732:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7714:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "7714:17:6"
																					},
																					"nativeSrc": "7714:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7714:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7700:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7700:3:6"
																			},
																			"nativeSrc": "7700:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7700:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7685:11:6",
																				"nodeType": "YulTypedName",
																				"src": "7685:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7901:27:6",
																			"nodeType": "YulBlock",
																			"src": "7901:27:6",
																			"statements": [
																				{
																					"nativeSrc": "7903:23:6",
																					"nodeType": "YulAssignment",
																					"src": "7903:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7918:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "7918:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7903:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "7903:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7885:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "7885:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7897:2:6",
																					"nodeType": "YulLiteral",
																					"src": "7897:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7882:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "7882:2:6"
																			},
																			"nativeSrc": "7882:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7882:18:6"
																		},
																		"nativeSrc": "7879:49:6",
																		"nodeType": "YulIf",
																		"src": "7879:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7970:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "7970:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7987:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "7987:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8015:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "8015:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7997:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "7997:17:6"
																							},
																							"nativeSrc": "7997:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7997:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7983:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "7983:3:6"
																					},
																					"nativeSrc": "7983:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7983:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7941:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "7941:28:6"
																			},
																			"nativeSrc": "7941:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7941:80:6"
																		},
																		"nativeSrc": "7941:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7941:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7591:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7591:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7596:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7596:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7588:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7588:2:6"
																},
																"nativeSrc": "7588:11:6",
																"nodeType": "YulFunctionCall",
																"src": "7588:11:6"
															},
															"nativeSrc": "7585:446:6",
															"nodeType": "YulIf",
															"src": "7585:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7495:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7550:5:6",
														"nodeType": "YulTypedName",
														"src": "7550:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7557:3:6",
														"nodeType": "YulTypedName",
														"src": "7557:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7562:10:6",
														"nodeType": "YulTypedName",
														"src": "7562:10:6",
														"type": ""
													}
												],
												"src": "7495:543:6"
											},
											{
												"body": {
													"nativeSrc": "8107:54:6",
													"nodeType": "YulBlock",
													"src": "8107:54:6",
													"statements": [
														{
															"nativeSrc": "8117:37:6",
															"nodeType": "YulAssignment",
															"src": "8117:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "8142:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8142:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8148:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8148:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8138:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8138:3:6"
																},
																"nativeSrc": "8138:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8138:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8117:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "8117:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "8044:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "8082:4:6",
														"nodeType": "YulTypedName",
														"src": "8082:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "8088:5:6",
														"nodeType": "YulTypedName",
														"src": "8088:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8098:8:6",
														"nodeType": "YulTypedName",
														"src": "8098:8:6",
														"type": ""
													}
												],
												"src": "8044:117:6"
											},
											{
												"body": {
													"nativeSrc": "8218:118:6",
													"nodeType": "YulBlock",
													"src": "8218:118:6",
													"statements": [
														{
															"nativeSrc": "8228:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8228:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8277:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8277:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "8280:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "8280:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8273:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8273:3:6"
																				},
																				"nativeSrc": "8273:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8273:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8292:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8292:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8288:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8288:3:6"
																				},
																				"nativeSrc": "8288:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8288:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "8244:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "8244:28:6"
																		},
																		"nativeSrc": "8244:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8244:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8240:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8240:3:6"
																},
																"nativeSrc": "8240:56:6",
																"nodeType": "YulFunctionCall",
																"src": "8240:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "8232:4:6",
																	"nodeType": "YulTypedName",
																	"src": "8232:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8305:25:6",
															"nodeType": "YulAssignment",
															"src": "8305:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8319:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8319:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8325:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8325:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8315:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8315:3:6"
																},
																"nativeSrc": "8315:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8315:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8305:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8305:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "8167:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8195:4:6",
														"nodeType": "YulTypedName",
														"src": "8195:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "8201:5:6",
														"nodeType": "YulTypedName",
														"src": "8201:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8211:6:6",
														"nodeType": "YulTypedName",
														"src": "8211:6:6",
														"type": ""
													}
												],
												"src": "8167:169:6"
											},
											{
												"body": {
													"nativeSrc": "8422:214:6",
													"nodeType": "YulBlock",
													"src": "8422:214:6",
													"statements": [
														{
															"nativeSrc": "8555:37:6",
															"nodeType": "YulAssignment",
															"src": "8555:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8582:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8582:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8588:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8588:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8563:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "8563:18:6"
																},
																"nativeSrc": "8563:29:6",
																"nodeType": "YulFunctionCall",
																"src": "8563:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8555:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8555:4:6"
																}
															]
														},
														{
															"nativeSrc": "8601:29:6",
															"nodeType": "YulAssignment",
															"src": "8601:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8612:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8612:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8622:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8622:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8625:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "8625:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8618:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8618:3:6"
																		},
																		"nativeSrc": "8618:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8618:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8609:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8609:2:6"
																},
																"nativeSrc": "8609:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8609:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8601:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8601:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8341:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8403:4:6",
														"nodeType": "YulTypedName",
														"src": "8403:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8409:3:6",
														"nodeType": "YulTypedName",
														"src": "8409:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8417:4:6",
														"nodeType": "YulTypedName",
														"src": "8417:4:6",
														"type": ""
													}
												],
												"src": "8341:295:6"
											},
											{
												"body": {
													"nativeSrc": "8733:1303:6",
													"nodeType": "YulBlock",
													"src": "8733:1303:6",
													"statements": [
														{
															"nativeSrc": "8744:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8744:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8791:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8791:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8758:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "8758:32:6"
																},
																"nativeSrc": "8758:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8758:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8748:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8748:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8880:22:6",
																"nodeType": "YulBlock",
																"src": "8880:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8882:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8882:16:6"
																			},
																			"nativeSrc": "8882:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8882:18:6"
																		},
																		"nativeSrc": "8882:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8882:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8852:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8852:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8860:18:6",
																		"nodeType": "YulLiteral",
																		"src": "8860:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8849:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8849:2:6"
																},
																"nativeSrc": "8849:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8849:30:6"
															},
															"nativeSrc": "8846:56:6",
															"nodeType": "YulIf",
															"src": "8846:56:6"
														},
														{
															"nativeSrc": "8912:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8912:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8958:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8958:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8952:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8952:5:6"
																		},
																		"nativeSrc": "8952:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8952:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8926:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "8926:25:6"
																},
																"nativeSrc": "8926:38:6",
																"nodeType": "YulFunctionCall",
																"src": "8926:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8916:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8916:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9057:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9057:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "9063:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9063:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9071:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9071:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "9011:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "9011:45:6"
																},
																"nativeSrc": "9011:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9011:67:6"
															},
															"nativeSrc": "9011:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "9011:67:6"
														},
														{
															"nativeSrc": "9088:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9088:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "9105:1:6",
																"nodeType": "YulLiteral",
																"src": "9105:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9092:9:6",
																	"nodeType": "YulTypedName",
																	"src": "9092:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9116:17:6",
															"nodeType": "YulAssignment",
															"src": "9116:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "9129:4:6",
																"nodeType": "YulLiteral",
																"src": "9129:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9116:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "9116:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9180:611:6",
																		"nodeType": "YulBlock",
																		"src": "9180:611:6",
																		"statements": [
																			{
																				"nativeSrc": "9194:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9194:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9213:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "9213:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9225:4:6",
																									"nodeType": "YulLiteral",
																									"src": "9225:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9221:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "9221:3:6"
																							},
																							"nativeSrc": "9221:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9221:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9209:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9209:3:6"
																					},
																					"nativeSrc": "9209:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9209:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9198:7:6",
																						"nodeType": "YulTypedName",
																						"src": "9198:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9245:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9245:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9291:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9291:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "9259:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "9259:31:6"
																					},
																					"nativeSrc": "9259:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9259:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9249:6:6",
																						"nodeType": "YulTypedName",
																						"src": "9249:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9309:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9309:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9318:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9318:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9313:1:6",
																						"nodeType": "YulTypedName",
																						"src": "9313:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9377:163:6",
																					"nodeType": "YulBlock",
																					"src": "9377:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9402:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "9402:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9420:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "9420:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9425:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "9425:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9416:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "9416:3:6"
																												},
																												"nativeSrc": "9416:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "9416:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9410:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "9410:5:6"
																										},
																										"nativeSrc": "9410:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9410:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9395:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9395:6:6"
																								},
																								"nativeSrc": "9395:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9395:42:6"
																							},
																							"nativeSrc": "9395:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "9395:42:6"
																						},
																						{
																							"nativeSrc": "9454:24:6",
																							"nodeType": "YulAssignment",
																							"src": "9454:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9468:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "9468:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9476:1:6",
																										"nodeType": "YulLiteral",
																										"src": "9476:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9464:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "9464:3:6"
																								},
																								"nativeSrc": "9464:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9464:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9454:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9454:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9495:31:6",
																							"nodeType": "YulAssignment",
																							"src": "9495:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9512:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "9512:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9523:2:6",
																										"nodeType": "YulLiteral",
																										"src": "9523:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9508:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "9508:3:6"
																								},
																								"nativeSrc": "9508:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9508:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9495:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "9495:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9343:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "9343:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9346:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "9346:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9340:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "9340:2:6"
																					},
																					"nativeSrc": "9340:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9340:14:6"
																				},
																				"nativeSrc": "9332:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9355:21:6",
																					"nodeType": "YulBlock",
																					"src": "9355:21:6",
																					"statements": [
																						{
																							"nativeSrc": "9357:17:6",
																							"nodeType": "YulAssignment",
																							"src": "9357:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9366:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "9366:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9369:4:6",
																										"nodeType": "YulLiteral",
																										"src": "9369:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9362:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "9362:3:6"
																								},
																								"nativeSrc": "9362:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9362:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9357:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "9357:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9336:3:6",
																					"nodeType": "YulBlock",
																					"src": "9336:3:6",
																					"statements": []
																				},
																				"src": "9332:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "9576:156:6",
																					"nodeType": "YulBlock",
																					"src": "9576:156:6",
																					"statements": [
																						{
																							"nativeSrc": "9594:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9594:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9621:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9621:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9626:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9626:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9617:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9617:3:6"
																										},
																										"nativeSrc": "9617:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9617:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9611:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9611:5:6"
																								},
																								"nativeSrc": "9611:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9611:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9598:9:6",
																									"nodeType": "YulTypedName",
																									"src": "9598:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9661:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "9661:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9688:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9688:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9703:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "9703:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9711:4:6",
																														"nodeType": "YulLiteral",
																														"src": "9711:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9699:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "9699:3:6"
																												},
																												"nativeSrc": "9699:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "9699:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9669:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "9669:18:6"
																										},
																										"nativeSrc": "9669:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9669:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9654:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "9654:6:6"
																								},
																								"nativeSrc": "9654:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9654:64:6"
																							},
																							"nativeSrc": "9654:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "9654:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9559:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "9559:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9568:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "9568:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9556:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "9556:2:6"
																					},
																					"nativeSrc": "9556:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9556:19:6"
																				},
																				"nativeSrc": "9553:179:6",
																				"nodeType": "YulIf",
																				"src": "9553:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9752:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9752:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9766:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "9766:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9774:1:6",
																											"nodeType": "YulLiteral",
																											"src": "9774:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9762:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "9762:3:6"
																									},
																									"nativeSrc": "9762:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "9762:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9778:1:6",
																									"nodeType": "YulLiteral",
																									"src": "9778:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9758:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "9758:3:6"
																							},
																							"nativeSrc": "9758:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9758:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9745:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9745:6:6"
																					},
																					"nativeSrc": "9745:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9745:36:6"
																				},
																				"nativeSrc": "9745:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9745:36:6"
																			}
																		]
																	},
																	"nativeSrc": "9173:618:6",
																	"nodeType": "YulCase",
																	"src": "9173:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9178:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9178:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9808:222:6",
																		"nodeType": "YulBlock",
																		"src": "9808:222:6",
																		"statements": [
																			{
																				"nativeSrc": "9822:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9822:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9835:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9835:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9826:5:6",
																						"nodeType": "YulTypedName",
																						"src": "9826:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9859:67:6",
																					"nodeType": "YulBlock",
																					"src": "9859:67:6",
																					"statements": [
																						{
																							"nativeSrc": "9877:35:6",
																							"nodeType": "YulAssignment",
																							"src": "9877:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9896:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "9896:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9901:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "9901:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9892:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "9892:3:6"
																										},
																										"nativeSrc": "9892:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "9892:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9886:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9886:5:6"
																								},
																								"nativeSrc": "9886:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "9886:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9877:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "9877:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9852:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9852:6:6"
																				},
																				"nativeSrc": "9849:77:6",
																				"nodeType": "YulIf",
																				"src": "9849:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9946:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "9946:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10005:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "10005:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10012:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "10012:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9952:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "9952:52:6"
																							},
																							"nativeSrc": "9952:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "9952:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9939:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9939:6:6"
																					},
																					"nativeSrc": "9939:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9939:81:6"
																				},
																				"nativeSrc": "9939:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "9939:81:6"
																			}
																		]
																	},
																	"nativeSrc": "9800:230:6",
																	"nodeType": "YulCase",
																	"src": "9800:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9153:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9153:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9161:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9161:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9150:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9150:2:6"
																},
																"nativeSrc": "9150:14:6",
																"nodeType": "YulFunctionCall",
																"src": "9150:14:6"
															},
															"nativeSrc": "9143:887:6",
															"nodeType": "YulSwitch",
															"src": "9143:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8641:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8722:4:6",
														"nodeType": "YulTypedName",
														"src": "8722:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8728:3:6",
														"nodeType": "YulTypedName",
														"src": "8728:3:6",
														"type": ""
													}
												],
												"src": "8641:1395:6"
											},
											{
												"body": {
													"nativeSrc": "10107:53:6",
													"nodeType": "YulBlock",
													"src": "10107:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10124:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10124:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10147:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10147:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10129:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "10129:17:6"
																		},
																		"nativeSrc": "10129:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10129:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10117:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10117:6:6"
																},
																"nativeSrc": "10117:37:6",
																"nodeType": "YulFunctionCall",
																"src": "10117:37:6"
															},
															"nativeSrc": "10117:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "10117:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10042:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10095:5:6",
														"nodeType": "YulTypedName",
														"src": "10095:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10102:3:6",
														"nodeType": "YulTypedName",
														"src": "10102:3:6",
														"type": ""
													}
												],
												"src": "10042:118:6"
											},
											{
												"body": {
													"nativeSrc": "10264:124:6",
													"nodeType": "YulBlock",
													"src": "10264:124:6",
													"statements": [
														{
															"nativeSrc": "10274:26:6",
															"nodeType": "YulAssignment",
															"src": "10274:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10286:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10286:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10297:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10297:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10282:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10282:3:6"
																},
																"nativeSrc": "10282:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10282:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10274:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10274:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10354:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10354:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10367:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10367:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10378:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10378:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10363:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10363:3:6"
																		},
																		"nativeSrc": "10363:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10363:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10310:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10310:43:6"
																},
																"nativeSrc": "10310:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10310:71:6"
															},
															"nativeSrc": "10310:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10310:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10166:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10236:9:6",
														"nodeType": "YulTypedName",
														"src": "10236:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10248:6:6",
														"nodeType": "YulTypedName",
														"src": "10248:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10259:4:6",
														"nodeType": "YulTypedName",
														"src": "10259:4:6",
														"type": ""
													}
												],
												"src": "10166:222:6"
											},
											{
												"body": {
													"nativeSrc": "10422:152:6",
													"nodeType": "YulBlock",
													"src": "10422:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10439:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10439:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10442:77:6",
																		"nodeType": "YulLiteral",
																		"src": "10442:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10432:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10432:6:6"
																},
																"nativeSrc": "10432:88:6",
																"nodeType": "YulFunctionCall",
																"src": "10432:88:6"
															},
															"nativeSrc": "10432:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "10432:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10536:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10536:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10539:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10539:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10529:6:6"
																},
																"nativeSrc": "10529:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10529:15:6"
															},
															"nativeSrc": "10529:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10529:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10560:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10560:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10563:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10563:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10553:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10553:6:6"
																},
																"nativeSrc": "10553:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10553:15:6"
															},
															"nativeSrc": "10553:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10553:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10394:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "10394:180:6"
											},
											{
												"body": {
													"nativeSrc": "10624:147:6",
													"nodeType": "YulBlock",
													"src": "10624:147:6",
													"statements": [
														{
															"nativeSrc": "10634:25:6",
															"nodeType": "YulAssignment",
															"src": "10634:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10657:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10657:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10639:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10639:17:6"
																},
																"nativeSrc": "10639:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10639:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10634:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10634:1:6"
																}
															]
														},
														{
															"nativeSrc": "10668:25:6",
															"nodeType": "YulAssignment",
															"src": "10668:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10691:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10691:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10673:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10673:17:6"
																},
																"nativeSrc": "10673:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10673:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10668:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10668:1:6"
																}
															]
														},
														{
															"nativeSrc": "10702:16:6",
															"nodeType": "YulAssignment",
															"src": "10702:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10713:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10713:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10716:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10716:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10709:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10709:3:6"
																},
																"nativeSrc": "10709:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10709:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10702:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10702:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10742:22:6",
																"nodeType": "YulBlock",
																"src": "10742:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10744:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10744:16:6"
																			},
																			"nativeSrc": "10744:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10744:18:6"
																		},
																		"nativeSrc": "10744:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10744:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10734:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10734:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10737:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10737:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10731:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10731:2:6"
																},
																"nativeSrc": "10731:10:6",
																"nodeType": "YulFunctionCall",
																"src": "10731:10:6"
															},
															"nativeSrc": "10728:36:6",
															"nodeType": "YulIf",
															"src": "10728:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10580:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10611:1:6",
														"nodeType": "YulTypedName",
														"src": "10611:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10614:1:6",
														"nodeType": "YulTypedName",
														"src": "10614:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10620:3:6",
														"nodeType": "YulTypedName",
														"src": "10620:3:6",
														"type": ""
													}
												],
												"src": "10580:191:6"
											},
											{
												"body": {
													"nativeSrc": "10842:53:6",
													"nodeType": "YulBlock",
													"src": "10842:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10859:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10859:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10882:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10882:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10864:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "10864:17:6"
																		},
																		"nativeSrc": "10864:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10864:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10852:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10852:6:6"
																},
																"nativeSrc": "10852:37:6",
																"nodeType": "YulFunctionCall",
																"src": "10852:37:6"
															},
															"nativeSrc": "10852:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "10852:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10777:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10830:5:6",
														"nodeType": "YulTypedName",
														"src": "10830:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10837:3:6",
														"nodeType": "YulTypedName",
														"src": "10837:3:6",
														"type": ""
													}
												],
												"src": "10777:118:6"
											},
											{
												"body": {
													"nativeSrc": "11055:288:6",
													"nodeType": "YulBlock",
													"src": "11055:288:6",
													"statements": [
														{
															"nativeSrc": "11065:26:6",
															"nodeType": "YulAssignment",
															"src": "11065:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11077:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11077:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11088:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11088:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11073:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11073:3:6"
																},
																"nativeSrc": "11073:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11073:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11065:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11065:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11145:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11145:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11158:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11158:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11169:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11169:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11154:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11154:3:6"
																		},
																		"nativeSrc": "11154:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11154:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11101:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11101:43:6"
																},
																"nativeSrc": "11101:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11101:71:6"
															},
															"nativeSrc": "11101:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11101:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11226:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11226:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11239:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11239:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11250:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11250:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11235:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11235:3:6"
																		},
																		"nativeSrc": "11235:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11235:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11182:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11182:43:6"
																},
																"nativeSrc": "11182:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11182:72:6"
															},
															"nativeSrc": "11182:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11182:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11308:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11308:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11321:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11321:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11332:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11332:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11317:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11317:3:6"
																		},
																		"nativeSrc": "11317:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11317:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11264:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11264:43:6"
																},
																"nativeSrc": "11264:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11264:72:6"
															},
															"nativeSrc": "11264:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11264:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10901:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11011:9:6",
														"nodeType": "YulTypedName",
														"src": "11011:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11023:6:6",
														"nodeType": "YulTypedName",
														"src": "11023:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11031:6:6",
														"nodeType": "YulTypedName",
														"src": "11031:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11039:6:6",
														"nodeType": "YulTypedName",
														"src": "11039:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11050:4:6",
														"nodeType": "YulTypedName",
														"src": "11050:4:6",
														"type": ""
													}
												],
												"src": "10901:442:6"
											},
											{
												"body": {
													"nativeSrc": "11447:124:6",
													"nodeType": "YulBlock",
													"src": "11447:124:6",
													"statements": [
														{
															"nativeSrc": "11457:26:6",
															"nodeType": "YulAssignment",
															"src": "11457:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11469:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11469:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11480:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11480:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11465:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11465:3:6"
																},
																"nativeSrc": "11465:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11465:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11457:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11457:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11537:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11537:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11550:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11550:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11561:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11561:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11546:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11546:3:6"
																		},
																		"nativeSrc": "11546:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11546:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11493:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11493:43:6"
																},
																"nativeSrc": "11493:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11493:71:6"
															},
															"nativeSrc": "11493:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11493:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11349:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11419:9:6",
														"nodeType": "YulTypedName",
														"src": "11419:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11431:6:6",
														"nodeType": "YulTypedName",
														"src": "11431:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11442:4:6",
														"nodeType": "YulTypedName",
														"src": "11442:4:6",
														"type": ""
													}
												],
												"src": "11349:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260c8600555348015610014575f5ffd5b506040516127f53803806127f58339818101604052810190610036919061057c565b868681600390816100479190610858565b5080600490816100579190610858565b50505061006a338661010460201b60201c565b83600781905550826008819055508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050610a0c565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610174575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161016b9190610936565b60405180910390fd5b6101855f838361018960201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101d9578060025f8282546101cd919061097c565b925050819055506102a7565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610262578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610259939291906109be565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102ee578060025f8282540392505081905550610338565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161039591906109f3565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610401826103bb565b810181811067ffffffffffffffff821117156104205761041f6103cb565b5b80604052505050565b5f6104326103a2565b905061043e82826103f8565b919050565b5f67ffffffffffffffff82111561045d5761045c6103cb565b5b610466826103bb565b9050602081019050919050565b8281835e5f83830152505050565b5f61049361048e84610443565b610429565b9050828152602081018484840111156104af576104ae6103b7565b5b6104ba848285610473565b509392505050565b5f82601f8301126104d6576104d56103b3565b5b81516104e6848260208601610481565b91505092915050565b5f819050919050565b610501816104ef565b811461050b575f5ffd5b50565b5f8151905061051c816104f8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61054b82610522565b9050919050565b61055b81610541565b8114610565575f5ffd5b50565b5f8151905061057681610552565b92915050565b5f5f5f5f5f5f5f60e0888a031215610597576105966103ab565b5b5f88015167ffffffffffffffff8111156105b4576105b36103af565b5b6105c08a828b016104c2565b975050602088015167ffffffffffffffff8111156105e1576105e06103af565b5b6105ed8a828b016104c2565b96505060406105fe8a828b0161050e565b955050606061060f8a828b0161050e565b94505060806106208a828b0161050e565b93505060a06106318a828b01610568565b92505060c06106428a828b01610568565b91505092959891949750929550565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061069f57607f821691505b6020821081036106b2576106b161065b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106d9565b61071e86836106d9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61075961075461074f846104ef565b610736565b6104ef565b9050919050565b5f819050919050565b6107728361073f565b61078661077e82610760565b8484546106e5565b825550505050565b5f5f905090565b61079d61078e565b6107a8818484610769565b505050565b5b818110156107cb576107c05f82610795565b6001810190506107ae565b5050565b601f821115610810576107e1816106b8565b6107ea846106ca565b810160208510156107f9578190505b61080d610805856106ca565b8301826107ad565b50505b505050565b5f82821c905092915050565b5f6108305f1984600802610815565b1980831691505092915050565b5f6108488383610821565b9150826002028217905092915050565b61086182610651565b67ffffffffffffffff81111561087a576108796103cb565b5b6108848254610688565b61088f8282856107cf565b5f60209050601f8311600181146108c0575f84156108ae578287015190505b6108b8858261083d565b86555061091f565b601f1984166108ce866106b8565b5f5b828110156108f5578489015182556001820191506020850194506020810190506108d0565b86831015610912578489015161090e601f891682610821565b8355505b6001600288020188555050505b505050505050565b61093081610541565b82525050565b5f6020820190506109495f830184610927565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610986826104ef565b9150610991836104ef565b92508282019050808211156109a9576109a861094f565b5b92915050565b6109b8816104ef565b82525050565b5f6060820190506109d15f830186610927565b6109de60208301856109af565b6109eb60408301846109af565b949350505050565b5f602082019050610a065f8301846109af565b92915050565b611ddc80610a195f395ff3fe6080604052600436106100f2575f3560e01c806395d89b4111610089578063c8c8ebe411610058578063c8c8ebe41461033b578063dd62ed3e14610365578063e6ef73d6146103a1578063f450c23a146103cb576100f2565b806395d89b411461027c5780639c8f9f23146102a65780639cd441da146102e3578063a9059cbb146102ff576100f2565b8063313ce567116100c5578063313ce567146101c2578063665a11ca146101ec57806370a0823114610216578063771a3a1d14610252576100f2565b806306fdde03146100f6578063095ea7b31461012057806318160ddd1461015c57806323b872dd14610186575b5f5ffd5b348015610101575f5ffd5b5061010a6103f5565b6040516101179190611441565b60405180910390f35b34801561012b575f5ffd5b50610146600480360381019061014191906114f2565b610485565b604051610153919061154a565b60405180910390f35b348015610167575f5ffd5b506101706104a7565b60405161017d9190611572565b60405180910390f35b348015610191575f5ffd5b506101ac60048036038101906101a7919061158b565b6104b0565b6040516101b9919061154a565b60405180910390f35b3480156101cd575f5ffd5b506101d66105cc565b6040516101e391906115f6565b60405180910390f35b3480156101f7575f5ffd5b506102006105d4565b60405161020d919061161e565b60405180910390f35b348015610221575f5ffd5b5061023c60048036038101906102379190611637565b6105f9565b6040516102499190611572565b60405180910390f35b34801561025d575f5ffd5b5061026661063e565b6040516102739190611572565b60405180910390f35b348015610287575f5ffd5b50610290610644565b60405161029d9190611441565b60405180910390f35b3480156102b1575f5ffd5b506102cc60048036038101906102c79190611662565b6106d4565b6040516102da92919061168d565b60405180910390f35b6102fd60048036038101906102f891906116b4565b6108cb565b005b34801561030a575f5ffd5b50610325600480360381019061032091906114f2565b610b31565b604051610332919061154a565b60405180910390f35b348015610346575f5ffd5b5061034f610bea565b60405161035c9190611572565b60405180910390f35b348015610370575f5ffd5b5061038b600480360381019061038691906116f2565b610bf0565b6040516103989190611572565b60405180910390f35b3480156103ac575f5ffd5b506103b5610c72565b6040516103c2919061161e565b60405180910390f35b3480156103d6575f5ffd5b506103df610c97565b6040516103ec9190611572565b60405180910390f35b6060600380546104049061175d565b80601f01602080910402602001604051908101604052809291908181526020018280546104309061175d565b801561047b5780601f106104525761010080835404028352916020019161047b565b820191905f5260205f20905b81548152906001019060200180831161045e57829003601f168201915b5050505050905090565b5f5f61048f610c9d565b905061049c818585610ca4565b600191505092915050565b5f600254905090565b5f5f6104bc8533610bf0565b905082811015610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f8906117fd565b60405180910390fd5b61050b8584610cb6565b5f61051584610eb4565b90505f81856105249190611848565b905080610530886105f9565b1015610571576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610568906118eb565b60405180910390fd5b61057c878787610ed7565b6105a88760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610ed7565b6105be873387866105b99190611909565b610ca4565b600193505050509392505050565b5f6012905090565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60055481565b6060600480546106539061175d565b80601f016020809104026020016040519081016040528092919081815260200182805461067f9061175d565b80156106ca5780601f106106a1576101008083540402835291602001916106ca565b820191905f5260205f20905b8154815290600101906020018083116106ad57829003601f168201915b5050505050905090565b5f5f5f73ffffffffffffffffffffffffffffffffffffffff16600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90611986565b60405180910390fd5b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518463ffffffff1660e01b81526004016107e4939291906119a4565b6020604051808303815f875af1158015610800573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108249190611a03565b50600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166389afcb44336040518263ffffffff1660e01b815260040161087f919061161e565b60408051808303815f875af115801561089a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108be9190611a42565b8092508193505050915091565b5f73ffffffffffffffffffffffffffffffffffffffff16600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095190611986565b60405180910390fd5b34811461099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099390611aca565b60405180910390fd5b6109c833600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610ed7565b5f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610a0e90611b15565b5f6040518083038185875af1925050503d805f8114610a48576040519150601f19603f3d011682016040523d82523d5f602084013e610a4d565b606091505b5050905080610a91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8890611b73565b60405180910390fd5b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b8152600401610aeb919061161e565b6020604051808303815f875af1158015610b07573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2b9190611b91565b50505050565b5f5f339050610b408184610cb6565b5f610b4a84610eb4565b90505f8185610b599190611848565b905080610b65846105f9565b1015610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d906118eb565b60405180910390fd5b610bb08686610fc7565b50610bdc60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610fc7565b506001935050505092915050565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b5f33905090565b610cb18383836001610fe9565b505050565b600754811115610cfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf290611c06565b60405180910390fd5b5f6201518042610d0b9190611c51565b90505f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905080821115610ddb575f60095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555081600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b60085460095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410610e5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5390611ccb565b60405180910390fd5b60095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190610ea990611ce9565b919050555050505050565b5f61271060055483610ec69190611d30565b610ed09190611c51565b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f47575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f3e919061161e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fb7575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610fae919061161e565b60405180910390fd5b610fc28383836111b8565b505050565b5f5f610fd1610c9d565b9050610fde818585610ed7565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611059575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611050919061161e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110c9575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110c0919061161e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111b2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111a99190611572565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611208578060025f8282546111fc9190611848565b925050819055506112d6565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611291578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161128893929190611d71565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361131d578060025f8282540392505081905550611367565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113c49190611572565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611413826113d1565b61141d81856113db565b935061142d8185602086016113eb565b611436816113f9565b840191505092915050565b5f6020820190508181035f8301526114598184611409565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61148e82611465565b9050919050565b61149e81611484565b81146114a8575f5ffd5b50565b5f813590506114b981611495565b92915050565b5f819050919050565b6114d1816114bf565b81146114db575f5ffd5b50565b5f813590506114ec816114c8565b92915050565b5f5f6040838503121561150857611507611461565b5b5f611515858286016114ab565b9250506020611526858286016114de565b9150509250929050565b5f8115159050919050565b61154481611530565b82525050565b5f60208201905061155d5f83018461153b565b92915050565b61156c816114bf565b82525050565b5f6020820190506115855f830184611563565b92915050565b5f5f5f606084860312156115a2576115a1611461565b5b5f6115af868287016114ab565b93505060206115c0868287016114ab565b92505060406115d1868287016114de565b9150509250925092565b5f60ff82169050919050565b6115f0816115db565b82525050565b5f6020820190506116095f8301846115e7565b92915050565b61161881611484565b82525050565b5f6020820190506116315f83018461160f565b92915050565b5f6020828403121561164c5761164b611461565b5b5f611659848285016114ab565b91505092915050565b5f6020828403121561167757611676611461565b5b5f611684848285016114de565b91505092915050565b5f6040820190506116a05f830185611563565b6116ad6020830184611563565b9392505050565b5f5f604083850312156116ca576116c9611461565b5b5f6116d7858286016114de565b92505060206116e8858286016114de565b9150509250929050565b5f5f6040838503121561170857611707611461565b5b5f611715858286016114ab565b9250506020611726858286016114ab565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061177457607f821691505b60208210810361178757611786611730565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320615f8201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b5f6117e76028836113db565b91506117f28261178d565b604082019050919050565b5f6020820190508181035f830152611814816117db565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611852826114bf565b915061185d836114bf565b92508282019050808211156118755761187461181b565b5b92915050565b7f496e73756666696369656e742062616c616e636520696e636c7564696e6720745f8201527f6178000000000000000000000000000000000000000000000000000000000000602082015250565b5f6118d56022836113db565b91506118e08261187b565b604082019050919050565b5f6020820190508181035f830152611902816118c9565b9050919050565b5f611913826114bf565b915061191e836114bf565b92508282039050818111156119365761193561181b565b5b92915050565b7f4c697175696469747920706f6f6c206e6f7420736574000000000000000000005f82015250565b5f6119706016836113db565b915061197b8261193c565b602082019050919050565b5f6020820190508181035f83015261199d81611964565b9050919050565b5f6060820190506119b75f83018661160f565b6119c4602083018561160f565b6119d16040830184611563565b949350505050565b6119e281611530565b81146119ec575f5ffd5b50565b5f815190506119fd816119d9565b92915050565b5f60208284031215611a1857611a17611461565b5b5f611a25848285016119ef565b91505092915050565b5f81519050611a3c816114c8565b92915050565b5f5f60408385031215611a5857611a57611461565b5b5f611a6585828601611a2e565b9250506020611a7685828601611a2e565b9150509250929050565b7f45544820616d6f756e74206d69736d61746368000000000000000000000000005f82015250565b5f611ab46013836113db565b9150611abf82611a80565b602082019050919050565b5f6020820190508181035f830152611ae181611aa8565b9050919050565b5f81905092915050565b50565b5f611b005f83611ae8565b9150611b0b82611af2565b5f82019050919050565b5f611b1f82611af5565b9150819050919050565b7f455448207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f611b5d6013836113db565b9150611b6882611b29565b602082019050919050565b5f6020820190508181035f830152611b8a81611b51565b9050919050565b5f60208284031215611ba657611ba5611461565b5b5f611bb384828501611a2e565b91505092915050565b7f5472616e73616374696f6e20616d6f756e742065786365656473206c696d69745f82015250565b5f611bf06020836113db565b9150611bfb82611bbc565b602082019050919050565b5f6020820190508181035f830152611c1d81611be4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611c5b826114bf565b9150611c66836114bf565b925082611c7657611c75611c24565b5b828204905092915050565b7f4461696c79207472616e73616374696f6e206c696d69742065786365656465645f82015250565b5f611cb56020836113db565b9150611cc082611c81565b602082019050919050565b5f6020820190508181035f830152611ce281611ca9565b9050919050565b5f611cf3826114bf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d2557611d2461181b565b5b600182019050919050565b5f611d3a826114bf565b9150611d45836114bf565b9250828202611d53816114bf565b91508282048414831517611d6a57611d6961181b565b5b5092915050565b5f606082019050611d845f83018661160f565b611d916020830185611563565b611d9e6040830184611563565b94935050505056fea2646970667358221220e4e0f30767bc3fd53532e36d1ffab999ce5ac2e10e03fd0962394629c71b0a4f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xC8 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x27F5 CODESIZE SUB DUP1 PUSH2 0x27F5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x57C JUMP JUMPDEST DUP7 DUP7 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x47 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST POP POP POP PUSH2 0x6A CALLER DUP7 PUSH2 0x104 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP PUSH2 0xA0C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x174 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x185 PUSH0 DUP4 DUP4 PUSH2 0x189 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2A7 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x262 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2EE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x338 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x401 DUP3 PUSH2 0x3BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x420 JUMPI PUSH2 0x41F PUSH2 0x3CB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x432 PUSH2 0x3A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x43E DUP3 DUP3 PUSH2 0x3F8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x45D JUMPI PUSH2 0x45C PUSH2 0x3CB JUMP JUMPDEST JUMPDEST PUSH2 0x466 DUP3 PUSH2 0x3BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x493 PUSH2 0x48E DUP5 PUSH2 0x443 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4AF JUMPI PUSH2 0x4AE PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST PUSH2 0x4BA DUP5 DUP3 DUP6 PUSH2 0x473 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4D6 JUMPI PUSH2 0x4D5 PUSH2 0x3B3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4E6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x481 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x501 DUP2 PUSH2 0x4EF JUMP JUMPDEST DUP2 EQ PUSH2 0x50B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x51C DUP2 PUSH2 0x4F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x54B DUP3 PUSH2 0x522 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55B DUP2 PUSH2 0x541 JUMP JUMPDEST DUP2 EQ PUSH2 0x565 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x576 DUP2 PUSH2 0x552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x597 JUMPI PUSH2 0x596 PUSH2 0x3AB JUMP JUMPDEST JUMPDEST PUSH0 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B4 JUMPI PUSH2 0x5B3 PUSH2 0x3AF JUMP JUMPDEST JUMPDEST PUSH2 0x5C0 DUP11 DUP3 DUP12 ADD PUSH2 0x4C2 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E1 JUMPI PUSH2 0x5E0 PUSH2 0x3AF JUMP JUMPDEST JUMPDEST PUSH2 0x5ED DUP11 DUP3 DUP12 ADD PUSH2 0x4C2 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x5FE DUP11 DUP3 DUP12 ADD PUSH2 0x50E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x60F DUP11 DUP3 DUP12 ADD PUSH2 0x50E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x620 DUP11 DUP3 DUP12 ADD PUSH2 0x50E JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x631 DUP11 DUP3 DUP12 ADD PUSH2 0x568 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x642 DUP11 DUP3 DUP12 ADD PUSH2 0x568 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x69F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6B2 JUMPI PUSH2 0x6B1 PUSH2 0x65B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x714 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x71E DUP7 DUP4 PUSH2 0x6D9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x759 PUSH2 0x754 PUSH2 0x74F DUP5 PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x736 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x772 DUP4 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x786 PUSH2 0x77E DUP3 PUSH2 0x760 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x6E5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x79D PUSH2 0x78E JUMP JUMPDEST PUSH2 0x7A8 DUP2 DUP5 DUP5 PUSH2 0x769 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7CB JUMPI PUSH2 0x7C0 PUSH0 DUP3 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x810 JUMPI PUSH2 0x7E1 DUP2 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x7EA DUP5 PUSH2 0x6CA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x7F9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x80D PUSH2 0x805 DUP6 PUSH2 0x6CA JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x7AD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x830 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x815 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x848 DUP4 DUP4 PUSH2 0x821 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x861 DUP3 PUSH2 0x651 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87A JUMPI PUSH2 0x879 PUSH2 0x3CB JUMP JUMPDEST JUMPDEST PUSH2 0x884 DUP3 SLOAD PUSH2 0x688 JUMP JUMPDEST PUSH2 0x88F DUP3 DUP3 DUP6 PUSH2 0x7CF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x8C0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x8AE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x8B8 DUP6 DUP3 PUSH2 0x83D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x91F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x8CE DUP7 PUSH2 0x6B8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8D0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x912 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x90E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x821 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x930 DUP2 PUSH2 0x541 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x949 PUSH0 DUP4 ADD DUP5 PUSH2 0x927 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x986 DUP3 PUSH2 0x4EF JUMP JUMPDEST SWAP2 POP PUSH2 0x991 DUP4 PUSH2 0x4EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9A9 JUMPI PUSH2 0x9A8 PUSH2 0x94F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B8 DUP2 PUSH2 0x4EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9D1 PUSH0 DUP4 ADD DUP7 PUSH2 0x927 JUMP JUMPDEST PUSH2 0x9DE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x9EB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9AF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA06 PUSH0 DUP4 ADD DUP5 PUSH2 0x9AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DDC DUP1 PUSH2 0xA19 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xC8C8EBE4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xC8C8EBE4 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xE6EF73D6 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xF450C23A EQ PUSH2 0x3CB JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FF JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x665A11CA EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x252 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x186 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x15F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x200 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x266 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x290 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP3 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B5 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DF PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x404 SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x430 SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x452 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x48F PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP PUSH2 0x49C DUP2 DUP6 DUP6 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4BC DUP6 CALLER PUSH2 0xBF0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F8 SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50B DUP6 DUP5 PUSH2 0xCB6 JUMP JUMPDEST PUSH0 PUSH2 0x515 DUP5 PUSH2 0xEB4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x530 DUP9 PUSH2 0x5F9 JUMP JUMPDEST LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP8 DUP8 DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x5A8 DUP8 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x5BE DUP8 CALLER DUP8 DUP7 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x653 SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67F SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75C SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x800 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x89AFCB44 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BE SWAP2 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x951 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP2 EQ PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x993 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C8 CALLER PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xED7 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA0E SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA88 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6A627842 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB07 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 CALLER SWAP1 POP PUSH2 0xB40 DUP2 DUP5 PUSH2 0xCB6 JUMP JUMPDEST PUSH0 PUSH2 0xB4A DUP5 PUSH2 0xEB4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB65 DUP5 PUSH2 0x5F9 JUMP JUMPDEST LT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9D SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB0 DUP7 DUP7 PUSH2 0xFC7 JUMP JUMPDEST POP PUSH2 0xBDC PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xFC7 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCB1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFE9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH3 0x15180 TIMESTAMP PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1C51 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDDB JUMPI PUSH0 PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE53 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xEA9 SWAP1 PUSH2 0x1CE9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x5 SLOAD DUP4 PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0xED0 SWAP2 SWAP1 PUSH2 0x1C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF47 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAE SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC2 DUP4 DUP4 DUP4 PUSH2 0x11B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xFD1 PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP PUSH2 0xFDE DUP2 DUP6 DUP6 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1059 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1050 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11B2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1208 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11FC SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12D6 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1291 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x131D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1367 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1413 DUP3 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x141D DUP2 DUP6 PUSH2 0x13DB JUMP JUMPDEST SWAP4 POP PUSH2 0x142D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x13F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1459 DUP2 DUP5 PUSH2 0x1409 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x148E DUP3 PUSH2 0x1465 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x149E DUP2 PUSH2 0x1484 JUMP JUMPDEST DUP2 EQ PUSH2 0x14A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B9 DUP2 PUSH2 0x1495 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x14BF JUMP JUMPDEST DUP2 EQ PUSH2 0x14DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EC DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1508 JUMPI PUSH2 0x1507 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1515 DUP6 DUP3 DUP7 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1526 DUP6 DUP3 DUP7 ADD PUSH2 0x14DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1544 DUP2 PUSH2 0x1530 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155D PUSH0 DUP4 ADD DUP5 PUSH2 0x153B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x156C DUP2 PUSH2 0x14BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1585 PUSH0 DUP4 ADD DUP5 PUSH2 0x1563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AF DUP7 DUP3 DUP8 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15C0 DUP7 DUP3 DUP8 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15D1 DUP7 DUP3 DUP8 ADD PUSH2 0x14DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F0 DUP2 PUSH2 0x15DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1609 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1618 DUP2 PUSH2 0x1484 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1631 PUSH0 DUP4 ADD DUP5 PUSH2 0x160F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164C JUMPI PUSH2 0x164B PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1659 DUP5 DUP3 DUP6 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1677 JUMPI PUSH2 0x1676 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1684 DUP5 DUP3 DUP6 ADD PUSH2 0x14DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16A0 PUSH0 DUP4 ADD DUP6 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x16AD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1563 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CA JUMPI PUSH2 0x16C9 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D7 DUP6 DUP3 DUP7 ADD PUSH2 0x14DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16E8 DUP6 DUP3 DUP7 ADD PUSH2 0x14DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1708 JUMPI PUSH2 0x1707 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1715 DUP6 DUP3 DUP7 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1726 DUP6 DUP3 DUP7 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1774 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1787 JUMPI PUSH2 0x1786 PUSH2 0x1730 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17E7 PUSH1 0x28 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x17F2 DUP3 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1814 DUP2 PUSH2 0x17DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1852 DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP PUSH2 0x185D DUP4 PUSH2 0x14BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1875 JUMPI PUSH2 0x1874 PUSH2 0x181B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520696E636C7564696E672074 PUSH0 DUP3 ADD MSTORE PUSH32 0x6178000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18D5 PUSH1 0x22 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x18E0 DUP3 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1902 DUP2 PUSH2 0x18C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1913 DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP PUSH2 0x191E DUP4 PUSH2 0x14BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1935 PUSH2 0x181B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697175696469747920706F6F6C206E6F742073657400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1970 PUSH1 0x16 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x197B DUP3 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x199D DUP2 PUSH2 0x1964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19B7 PUSH0 DUP4 ADD DUP7 PUSH2 0x160F JUMP JUMPDEST PUSH2 0x19C4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x160F JUMP JUMPDEST PUSH2 0x19D1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1563 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x19E2 DUP2 PUSH2 0x1530 JUMP JUMPDEST DUP2 EQ PUSH2 0x19EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19FD DUP2 PUSH2 0x19D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A18 JUMPI PUSH2 0x1A17 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A25 DUP5 DUP3 DUP6 ADD PUSH2 0x19EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A3C DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A58 JUMPI PUSH2 0x1A57 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A65 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A76 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E74206D69736D6174636800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB4 PUSH1 0x13 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABF DUP3 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE1 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1B00 PUSH0 DUP4 PUSH2 0x1AE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0B DUP3 PUSH2 0x1AF2 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B1F DUP3 PUSH2 0x1AF5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5D PUSH1 0x13 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B68 DUP3 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B8A DUP2 PUSH2 0x1B51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA6 JUMPI PUSH2 0x1BA5 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BB3 DUP5 DUP3 DUP6 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73616374696F6E20616D6F756E742065786365656473206C696D6974 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF0 PUSH1 0x20 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFB DUP3 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C1D DUP2 PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C5B DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP PUSH2 0x1C66 DUP4 PUSH2 0x14BF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C76 JUMPI PUSH2 0x1C75 PUSH2 0x1C24 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4461696C79207472616E73616374696F6E206C696D6974206578636565646564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB5 PUSH1 0x20 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC0 DUP3 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CE2 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF3 DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1D25 JUMPI PUSH2 0x1D24 PUSH2 0x181B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3A DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP PUSH2 0x1D45 DUP4 PUSH2 0x14BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D53 DUP2 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D6A JUMPI PUSH2 0x1D69 PUSH2 0x181B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D84 PUSH0 DUP4 ADD DUP7 PUSH2 0x160F JUMP JUMPDEST PUSH2 0x1D91 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x1D9E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1563 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETF RJUMP 0xF307 PUSH8 0xBC3FD53532E36D1F STATICCALL 0xB9 SWAP10 0xCE GAS 0xC2 RJUMPI 0xE03 REVERT MULMOD PUSH3 0x394629 0xC7 SHL EXP 0x4F PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "510:5882:0:-:0;;;693:3;668:28;;1178:534;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1446:4;1452:6;1656:5:2;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1471:33:0::1;1477:10;1489:14;1471:5;;;:33;;:::i;:::-;1538:21;1515:20;:44;;;;1599:27;1570:26;:56;;;;1651:12;1637:11;;:26;;;;;;;;;;;;;;;;;;1690:14;1674:13;;:30;;;;;;;;;;;;;;;;;;1178:534:::0;;;;;;;510:5882;;7362:208:2;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:75:6:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:126::-;2967:7;3007:42;3000:5;2996:54;2985:65;;2930:126;;;:::o;3062:96::-;3099:7;3128:24;3146:5;3128:24;:::i;:::-;3117:35;;3062:96;;;:::o;3164:122::-;3237:24;3255:5;3237:24;:::i;:::-;3230:5;3227:35;3217:63;;3276:1;3273;3266:12;3217:63;3164:122;:::o;3292:143::-;3349:5;3380:6;3374:13;3365:22;;3396:33;3423:5;3396:33;:::i;:::-;3292:143;;;;:::o;3441:1637::-;3585:6;3593;3601;3609;3617;3625;3633;3682:3;3670:9;3661:7;3657:23;3653:33;3650:120;;;3689:79;;:::i;:::-;3650:120;3830:1;3819:9;3815:17;3809:24;3860:18;3852:6;3849:30;3846:117;;;3882:79;;:::i;:::-;3846:117;3987:74;4053:7;4044:6;4033:9;4029:22;3987:74;:::i;:::-;3977:84;;3780:291;4131:2;4120:9;4116:18;4110:25;4162:18;4154:6;4151:30;4148:117;;;4184:79;;:::i;:::-;4148:117;4289:74;4355:7;4346:6;4335:9;4331:22;4289:74;:::i;:::-;4279:84;;4081:292;4412:2;4438:64;4494:7;4485:6;4474:9;4470:22;4438:64;:::i;:::-;4428:74;;4383:129;4551:2;4577:64;4633:7;4624:6;4613:9;4609:22;4577:64;:::i;:::-;4567:74;;4522:129;4690:3;4717:64;4773:7;4764:6;4753:9;4749:22;4717:64;:::i;:::-;4707:74;;4661:130;4830:3;4857:64;4913:7;4904:6;4893:9;4889:22;4857:64;:::i;:::-;4847:74;;4801:130;4970:3;4997:64;5053:7;5044:6;5033:9;5029:22;4997:64;:::i;:::-;4987:74;;4941:130;3441:1637;;;;;;;;;;:::o;5084:99::-;5136:6;5170:5;5164:12;5154:22;;5084:99;;;:::o;5189:180::-;5237:77;5234:1;5227:88;5334:4;5331:1;5324:15;5358:4;5355:1;5348:15;5375:320;5419:6;5456:1;5450:4;5446:12;5436:22;;5503:1;5497:4;5493:12;5524:18;5514:81;;5580:4;5572:6;5568:17;5558:27;;5514:81;5642:2;5634:6;5631:14;5611:18;5608:38;5605:84;;5661:18;;:::i;:::-;5605:84;5426:269;5375:320;;;:::o;5701:141::-;5750:4;5773:3;5765:11;;5796:3;5793:1;5786:14;5830:4;5827:1;5817:18;5809:26;;5701:141;;;:::o;5848:93::-;5885:6;5932:2;5927;5920:5;5916:14;5912:23;5902:33;;5848:93;;;:::o;5947:107::-;5991:8;6041:5;6035:4;6031:16;6010:37;;5947:107;;;;:::o;6060:393::-;6129:6;6179:1;6167:10;6163:18;6202:97;6232:66;6221:9;6202:97;:::i;:::-;6320:39;6350:8;6339:9;6320:39;:::i;:::-;6308:51;;6392:4;6388:9;6381:5;6377:21;6368:30;;6441:4;6431:8;6427:19;6420:5;6417:30;6407:40;;6136:317;;6060:393;;;;;:::o;6459:60::-;6487:3;6508:5;6501:12;;6459:60;;;:::o;6525:142::-;6575:9;6608:53;6626:34;6635:24;6653:5;6635:24;:::i;:::-;6626:34;:::i;:::-;6608:53;:::i;:::-;6595:66;;6525:142;;;:::o;6673:75::-;6716:3;6737:5;6730:12;;6673:75;;;:::o;6754:269::-;6864:39;6895:7;6864:39;:::i;:::-;6925:91;6974:41;6998:16;6974:41;:::i;:::-;6966:6;6959:4;6953:11;6925:91;:::i;:::-;6919:4;6912:105;6830:193;6754:269;;;:::o;7029:73::-;7074:3;7095:1;7088:8;;7029:73;:::o;7108:189::-;7185:32;;:::i;:::-;7226:65;7284:6;7276;7270:4;7226:65;:::i;:::-;7161:136;7108:189;;:::o;7303:186::-;7363:120;7380:3;7373:5;7370:14;7363:120;;;7434:39;7471:1;7464:5;7434:39;:::i;:::-;7407:1;7400:5;7396:13;7387:22;;7363:120;;;7303:186;;:::o;7495:543::-;7596:2;7591:3;7588:11;7585:446;;;7630:38;7662:5;7630:38;:::i;:::-;7714:29;7732:10;7714:29;:::i;:::-;7704:8;7700:44;7897:2;7885:10;7882:18;7879:49;;;7918:8;7903:23;;7879:49;7941:80;7997:22;8015:3;7997:22;:::i;:::-;7987:8;7983:37;7970:11;7941:80;:::i;:::-;7600:431;;7585:446;7495:543;;;:::o;8044:117::-;8098:8;8148:5;8142:4;8138:16;8117:37;;8044:117;;;;:::o;8167:169::-;8211:6;8244:51;8292:1;8288:6;8280:5;8277:1;8273:13;8244:51;:::i;:::-;8240:56;8325:4;8319;8315:15;8305:25;;8218:118;8167:169;;;;:::o;8341:295::-;8417:4;8563:29;8588:3;8582:4;8563:29;:::i;:::-;8555:37;;8625:3;8622:1;8618:11;8612:4;8609:21;8601:29;;8341:295;;;;:::o;8641:1395::-;8758:37;8791:3;8758:37;:::i;:::-;8860:18;8852:6;8849:30;8846:56;;;8882:18;;:::i;:::-;8846:56;8926:38;8958:4;8952:11;8926:38;:::i;:::-;9011:67;9071:6;9063;9057:4;9011:67;:::i;:::-;9105:1;9129:4;9116:17;;9161:2;9153:6;9150:14;9178:1;9173:618;;;;9835:1;9852:6;9849:77;;;9901:9;9896:3;9892:19;9886:26;9877:35;;9849:77;9952:67;10012:6;10005:5;9952:67;:::i;:::-;9946:4;9939:81;9808:222;9143:887;;9173:618;9225:4;9221:9;9213:6;9209:22;9259:37;9291:4;9259:37;:::i;:::-;9318:1;9332:208;9346:7;9343:1;9340:14;9332:208;;;9425:9;9420:3;9416:19;9410:26;9402:6;9395:42;9476:1;9468:6;9464:14;9454:24;;9523:2;9512:9;9508:18;9495:31;;9369:4;9366:1;9362:12;9357:17;;9332:208;;;9568:6;9559:7;9556:19;9553:179;;;9626:9;9621:3;9617:19;9611:26;9669:48;9711:4;9703:6;9699:17;9688:9;9669:48;:::i;:::-;9661:6;9654:64;9576:156;9553:179;9778:1;9774;9766:6;9762:14;9758:22;9752:4;9745:36;9180:611;;;9143:887;;8733:1303;;;8641:1395;;:::o;10042:118::-;10129:24;10147:5;10129:24;:::i;:::-;10124:3;10117:37;10042:118;;:::o;10166:222::-;10259:4;10297:2;10286:9;10282:18;10274:26;;10310:71;10378:1;10367:9;10363:17;10354:6;10310:71;:::i;:::-;10166:222;;;;:::o;10394:180::-;10442:77;10439:1;10432:88;10539:4;10536:1;10529:15;10563:4;10560:1;10553:15;10580:191;10620:3;10639:20;10657:1;10639:20;:::i;:::-;10634:25;;10673:20;10691:1;10673:20;:::i;:::-;10668:25;;10716:1;10713;10709:9;10702:16;;10737:3;10734:1;10731:10;10728:36;;;10744:18;;:::i;:::-;10728:36;10580:191;;;;:::o;10777:118::-;10864:24;10882:5;10864:24;:::i;:::-;10859:3;10852:37;10777:118;;:::o;10901:442::-;11050:4;11088:2;11077:9;11073:18;11065:26;;11101:71;11169:1;11158:9;11154:17;11145:6;11101:71;:::i;:::-;11182:72;11250:2;11239:9;11235:18;11226:6;11182:72;:::i;:::-;11264;11332:2;11321:9;11317:18;11308:6;11264:72;:::i;:::-;10901:442;;;;;;:::o;11349:222::-;11442:4;11480:2;11469:9;11465:18;11457:26;;11493:71;11561:1;11550:9;11546:17;11537:6;11493:71;:::i;:::-;11349:222;;;;:::o;510:5882:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_935": {
									"entryPoint": 3236,
									"id": 935,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_995": {
									"entryPoint": 4073,
									"id": 995,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_calculateTax_235": {
									"entryPoint": 3764,
									"id": 235,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkTransactionLimits_294": {
									"entryPoint": 3254,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1160": {
									"entryPoint": 3229,
									"id": 1160,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_774": {
									"entryPoint": 3799,
									"id": 774,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_851": {
									"entryPoint": 4536,
									"id": 851,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_349": {
									"entryPoint": 2251,
									"id": 349,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_671": {
									"entryPoint": 3056,
									"id": 671,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_695": {
									"entryPoint": 1157,
									"id": 695,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_630": {
									"entryPoint": 1529,
									"id": 630,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@dailyTransactionCountLimit_31": {
									"entryPoint": 3223,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_608": {
									"entryPoint": 1484,
									"id": 608,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@liquidityPool_41": {
									"entryPoint": 1492,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxTransactionAmount_29": {
									"entryPoint": 3050,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_590": {
									"entryPoint": 1013,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_391": {
									"entryPoint": 1748,
									"id": 391,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@symbol_599": {
									"entryPoint": 1604,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxRate_25": {
									"entryPoint": 1598,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@taxReceiver_27": {
									"entryPoint": 3186,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_617": {
									"entryPoint": 1191,
									"id": 617,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_220": {
									"entryPoint": 1200,
									"id": 220,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_143": {
									"entryPoint": 2865,
									"id": 143,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_654": {
									"entryPoint": 4039,
									"id": 654,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6564,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7537,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb": {
									"entryPoint": 7100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 6898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19726:6",
										"nodeType": "YulBlock",
										"src": "0:19726:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4359:43:6",
													"nodeType": "YulBlock",
													"src": "4359:43:6",
													"statements": [
														{
															"nativeSrc": "4369:27:6",
															"nodeType": "YulAssignment",
															"src": "4369:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:6",
														"nodeType": "YulTypedName",
														"src": "4341:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:6",
														"nodeType": "YulTypedName",
														"src": "4351:7:6",
														"type": ""
													}
												],
												"src": "4316:86:6"
											},
											{
												"body": {
													"nativeSrc": "4469:51:6",
													"nodeType": "YulBlock",
													"src": "4469:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:6"
																		},
																		"nativeSrc": "4491:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																},
																"nativeSrc": "4479:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:6"
															},
															"nativeSrc": "4479:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:6",
														"nodeType": "YulTypedName",
														"src": "4457:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:6",
														"nodeType": "YulTypedName",
														"src": "4464:3:6",
														"type": ""
													}
												],
												"src": "4408:112:6"
											},
											{
												"body": {
													"nativeSrc": "4620:120:6",
													"nodeType": "YulBlock",
													"src": "4620:120:6",
													"statements": [
														{
															"nativeSrc": "4630:26:6",
															"nodeType": "YulAssignment",
															"src": "4630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:6"
																},
																"nativeSrc": "4638:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:6"
																		},
																		"nativeSrc": "4715:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:6"
																},
																"nativeSrc": "4666:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:6"
															},
															"nativeSrc": "4666:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:6",
														"nodeType": "YulTypedName",
														"src": "4592:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:6",
														"nodeType": "YulTypedName",
														"src": "4604:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:6",
														"nodeType": "YulTypedName",
														"src": "4615:4:6",
														"type": ""
													}
												],
												"src": "4526:214:6"
											},
											{
												"body": {
													"nativeSrc": "4811:53:6",
													"nodeType": "YulBlock",
													"src": "4811:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4828:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4828:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4851:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4851:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4833:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4833:17:6"
																		},
																		"nativeSrc": "4833:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4821:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:6"
																},
																"nativeSrc": "4821:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4821:37:6"
															},
															"nativeSrc": "4821:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4821:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4746:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4799:5:6",
														"nodeType": "YulTypedName",
														"src": "4799:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4806:3:6",
														"nodeType": "YulTypedName",
														"src": "4806:3:6",
														"type": ""
													}
												],
												"src": "4746:118:6"
											},
											{
												"body": {
													"nativeSrc": "4968:124:6",
													"nodeType": "YulBlock",
													"src": "4968:124:6",
													"statements": [
														{
															"nativeSrc": "4978:26:6",
															"nodeType": "YulAssignment",
															"src": "4978:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4990:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4990:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5001:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5001:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4986:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4986:3:6"
																},
																"nativeSrc": "4986:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4986:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4978:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4978:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5058:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5058:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5082:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:6"
																		},
																		"nativeSrc": "5067:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5014:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5014:43:6"
																},
																"nativeSrc": "5014:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5014:71:6"
															},
															"nativeSrc": "5014:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5014:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4870:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4940:9:6",
														"nodeType": "YulTypedName",
														"src": "4940:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4952:6:6",
														"nodeType": "YulTypedName",
														"src": "4952:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4963:4:6",
														"nodeType": "YulTypedName",
														"src": "4963:4:6",
														"type": ""
													}
												],
												"src": "4870:222:6"
											},
											{
												"body": {
													"nativeSrc": "5164:263:6",
													"nodeType": "YulBlock",
													"src": "5164:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:6",
																"nodeType": "YulBlock",
																"src": "5210:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:6"
																			},
																			"nativeSrc": "5212:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:6"
																		},
																		"nativeSrc": "5212:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:6"
																		},
																		"nativeSrc": "5181:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:6"
																},
																"nativeSrc": "5177:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:6"
															},
															"nativeSrc": "5174:119:6",
															"nodeType": "YulIf",
															"src": "5174:119:6"
														},
														{
															"nativeSrc": "5303:117:6",
															"nodeType": "YulBlock",
															"src": "5303:117:6",
															"statements": [
																{
																	"nativeSrc": "5318:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:6"
																				},
																				"nativeSrc": "5378:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:6"
																		},
																		"nativeSrc": "5357:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5098:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5134:9:6",
														"nodeType": "YulTypedName",
														"src": "5134:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5145:7:6",
														"nodeType": "YulTypedName",
														"src": "5145:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5157:6:6",
														"nodeType": "YulTypedName",
														"src": "5157:6:6",
														"type": ""
													}
												],
												"src": "5098:329:6"
											},
											{
												"body": {
													"nativeSrc": "5499:263:6",
													"nodeType": "YulBlock",
													"src": "5499:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:6",
																"nodeType": "YulBlock",
																"src": "5545:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:6"
																			},
																			"nativeSrc": "5547:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:6"
																		},
																		"nativeSrc": "5547:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:6"
																		},
																		"nativeSrc": "5516:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:6"
																},
																"nativeSrc": "5512:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:6"
															},
															"nativeSrc": "5509:119:6",
															"nodeType": "YulIf",
															"src": "5509:119:6"
														},
														{
															"nativeSrc": "5638:117:6",
															"nodeType": "YulBlock",
															"src": "5638:117:6",
															"statements": [
																{
																	"nativeSrc": "5653:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:6"
																				},
																				"nativeSrc": "5713:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5692:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:6"
																		},
																		"nativeSrc": "5692:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5433:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:6",
														"nodeType": "YulTypedName",
														"src": "5469:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:6",
														"nodeType": "YulTypedName",
														"src": "5480:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:6",
														"nodeType": "YulTypedName",
														"src": "5492:6:6",
														"type": ""
													}
												],
												"src": "5433:329:6"
											},
											{
												"body": {
													"nativeSrc": "5894:206:6",
													"nodeType": "YulBlock",
													"src": "5894:206:6",
													"statements": [
														{
															"nativeSrc": "5904:26:6",
															"nodeType": "YulAssignment",
															"src": "5904:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5916:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5916:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5927:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5927:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5912:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5912:3:6"
																},
																"nativeSrc": "5912:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5912:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5904:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5904:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5984:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5984:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5997:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5997:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6008:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6008:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5993:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5993:3:6"
																		},
																		"nativeSrc": "5993:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5993:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5940:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5940:43:6"
																},
																"nativeSrc": "5940:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5940:71:6"
															},
															"nativeSrc": "5940:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5940:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6065:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6065:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6078:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6078:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6089:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6089:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6074:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:6"
																		},
																		"nativeSrc": "6074:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6074:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6021:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6021:43:6"
																},
																"nativeSrc": "6021:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6021:72:6"
															},
															"nativeSrc": "6021:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6021:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5768:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5858:9:6",
														"nodeType": "YulTypedName",
														"src": "5858:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5870:6:6",
														"nodeType": "YulTypedName",
														"src": "5870:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5878:6:6",
														"nodeType": "YulTypedName",
														"src": "5878:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5889:4:6",
														"nodeType": "YulTypedName",
														"src": "5889:4:6",
														"type": ""
													}
												],
												"src": "5768:332:6"
											},
											{
												"body": {
													"nativeSrc": "6189:391:6",
													"nodeType": "YulBlock",
													"src": "6189:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6235:83:6",
																"nodeType": "YulBlock",
																"src": "6235:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6237:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6237:77:6"
																			},
																			"nativeSrc": "6237:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6237:79:6"
																		},
																		"nativeSrc": "6237:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6237:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6210:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6210:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6219:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6219:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6206:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6206:3:6"
																		},
																		"nativeSrc": "6206:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6206:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6231:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6231:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6202:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6202:3:6"
																},
																"nativeSrc": "6202:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6202:32:6"
															},
															"nativeSrc": "6199:119:6",
															"nodeType": "YulIf",
															"src": "6199:119:6"
														},
														{
															"nativeSrc": "6328:117:6",
															"nodeType": "YulBlock",
															"src": "6328:117:6",
															"statements": [
																{
																	"nativeSrc": "6343:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6343:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6357:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6357:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6347:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6347:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6372:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6372:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6407:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6407:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6418:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6418:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6403:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6403:3:6"
																				},
																				"nativeSrc": "6403:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6403:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6427:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6427:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6382:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6382:20:6"
																		},
																		"nativeSrc": "6382:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6382:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6372:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6372:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6455:118:6",
															"nodeType": "YulBlock",
															"src": "6455:118:6",
															"statements": [
																{
																	"nativeSrc": "6470:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6470:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6484:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6484:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6474:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6474:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6500:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6500:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6535:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6535:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6546:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6546:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6531:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6531:3:6"
																				},
																				"nativeSrc": "6531:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6531:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6555:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6555:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6510:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6510:20:6"
																		},
																		"nativeSrc": "6510:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6510:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6500:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6500:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6106:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6151:9:6",
														"nodeType": "YulTypedName",
														"src": "6151:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6162:7:6",
														"nodeType": "YulTypedName",
														"src": "6162:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6174:6:6",
														"nodeType": "YulTypedName",
														"src": "6174:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6182:6:6",
														"nodeType": "YulTypedName",
														"src": "6182:6:6",
														"type": ""
													}
												],
												"src": "6106:474:6"
											},
											{
												"body": {
													"nativeSrc": "6669:391:6",
													"nodeType": "YulBlock",
													"src": "6669:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6715:83:6",
																"nodeType": "YulBlock",
																"src": "6715:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6717:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6717:77:6"
																			},
																			"nativeSrc": "6717:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6717:79:6"
																		},
																		"nativeSrc": "6717:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6717:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6690:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6690:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6699:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6699:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6686:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6686:3:6"
																		},
																		"nativeSrc": "6686:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6686:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6711:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6711:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6682:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6682:3:6"
																},
																"nativeSrc": "6682:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6682:32:6"
															},
															"nativeSrc": "6679:119:6",
															"nodeType": "YulIf",
															"src": "6679:119:6"
														},
														{
															"nativeSrc": "6808:117:6",
															"nodeType": "YulBlock",
															"src": "6808:117:6",
															"statements": [
																{
																	"nativeSrc": "6823:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6823:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6837:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6837:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6827:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6827:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6852:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6852:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6887:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6887:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6898:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6898:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6883:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6883:3:6"
																				},
																				"nativeSrc": "6883:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6883:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6907:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6907:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6862:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6862:20:6"
																		},
																		"nativeSrc": "6862:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6862:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6852:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6852:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6935:118:6",
															"nodeType": "YulBlock",
															"src": "6935:118:6",
															"statements": [
																{
																	"nativeSrc": "6950:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6950:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6964:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6964:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6954:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6954:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6980:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6980:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7015:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7015:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7026:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7026:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7011:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7011:3:6"
																				},
																				"nativeSrc": "7011:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7011:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7035:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7035:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6990:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6990:20:6"
																		},
																		"nativeSrc": "6990:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6990:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6980:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6980:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6586:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6631:9:6",
														"nodeType": "YulTypedName",
														"src": "6631:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6642:7:6",
														"nodeType": "YulTypedName",
														"src": "6642:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6654:6:6",
														"nodeType": "YulTypedName",
														"src": "6654:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6662:6:6",
														"nodeType": "YulTypedName",
														"src": "6662:6:6",
														"type": ""
													}
												],
												"src": "6586:474:6"
											},
											{
												"body": {
													"nativeSrc": "7094:152:6",
													"nodeType": "YulBlock",
													"src": "7094:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7111:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7111:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7114:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7114:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7104:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7104:6:6"
																},
																"nativeSrc": "7104:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7104:88:6"
															},
															"nativeSrc": "7104:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7104:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7208:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7208:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7211:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7211:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7201:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7201:6:6"
																},
																"nativeSrc": "7201:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7201:15:6"
															},
															"nativeSrc": "7201:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7201:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7232:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7232:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7235:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7235:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7225:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7225:6:6"
																},
																"nativeSrc": "7225:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7225:15:6"
															},
															"nativeSrc": "7225:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7225:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7066:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "7066:180:6"
											},
											{
												"body": {
													"nativeSrc": "7303:269:6",
													"nodeType": "YulBlock",
													"src": "7303:269:6",
													"statements": [
														{
															"nativeSrc": "7313:22:6",
															"nodeType": "YulAssignment",
															"src": "7313:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7327:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7327:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7333:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7333:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7323:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7323:3:6"
																},
																"nativeSrc": "7323:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7323:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7313:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7313:6:6"
																}
															]
														},
														{
															"nativeSrc": "7344:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7344:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7374:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7374:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7380:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7380:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7370:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7370:3:6"
																},
																"nativeSrc": "7370:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7370:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7348:18:6",
																	"nodeType": "YulTypedName",
																	"src": "7348:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7421:51:6",
																"nodeType": "YulBlock",
																"src": "7421:51:6",
																"statements": [
																	{
																		"nativeSrc": "7435:27:6",
																		"nodeType": "YulAssignment",
																		"src": "7435:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7449:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7449:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7457:4:6",
																					"nodeType": "YulLiteral",
																					"src": "7457:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7445:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7445:3:6"
																			},
																			"nativeSrc": "7445:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7445:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7435:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7435:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7401:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "7401:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7394:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7394:6:6"
																},
																"nativeSrc": "7394:26:6",
																"nodeType": "YulFunctionCall",
																"src": "7394:26:6"
															},
															"nativeSrc": "7391:81:6",
															"nodeType": "YulIf",
															"src": "7391:81:6"
														},
														{
															"body": {
																"nativeSrc": "7524:42:6",
																"nodeType": "YulBlock",
																"src": "7524:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7538:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7538:16:6"
																			},
																			"nativeSrc": "7538:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7538:18:6"
																		},
																		"nativeSrc": "7538:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7538:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7488:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "7488:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7511:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7511:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7519:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7519:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7508:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7508:2:6"
																		},
																		"nativeSrc": "7508:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7508:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7485:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7485:2:6"
																},
																"nativeSrc": "7485:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7485:38:6"
															},
															"nativeSrc": "7482:84:6",
															"nodeType": "YulIf",
															"src": "7482:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7252:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7287:4:6",
														"nodeType": "YulTypedName",
														"src": "7287:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7296:6:6",
														"nodeType": "YulTypedName",
														"src": "7296:6:6",
														"type": ""
													}
												],
												"src": "7252:320:6"
											},
											{
												"body": {
													"nativeSrc": "7684:121:6",
													"nodeType": "YulBlock",
													"src": "7684:121:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7706:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7706:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7714:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7714:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7702:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7702:3:6"
																		},
																		"nativeSrc": "7702:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7702:14:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nativeSrc": "7718:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7718:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7695:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7695:6:6"
																},
																"nativeSrc": "7695:58:6",
																"nodeType": "YulFunctionCall",
																"src": "7695:58:6"
															},
															"nativeSrc": "7695:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "7695:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7774:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7774:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7782:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7782:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7770:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7770:3:6"
																		},
																		"nativeSrc": "7770:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7770:15:6"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "7787:10:6",
																		"nodeType": "YulLiteral",
																		"src": "7787:10:6",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7763:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7763:6:6"
																},
																"nativeSrc": "7763:35:6",
																"nodeType": "YulFunctionCall",
																"src": "7763:35:6"
															},
															"nativeSrc": "7763:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "7763:35:6"
														}
													]
												},
												"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
												"nativeSrc": "7578:227:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7676:6:6",
														"nodeType": "YulTypedName",
														"src": "7676:6:6",
														"type": ""
													}
												],
												"src": "7578:227:6"
											},
											{
												"body": {
													"nativeSrc": "7957:220:6",
													"nodeType": "YulBlock",
													"src": "7957:220:6",
													"statements": [
														{
															"nativeSrc": "7967:74:6",
															"nodeType": "YulAssignment",
															"src": "7967:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8033:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8033:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8038:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8038:2:6",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7974:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7974:58:6"
																},
																"nativeSrc": "7974:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7974:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7967:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7967:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8139:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8139:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																	"nativeSrc": "8050:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8050:88:6"
																},
																"nativeSrc": "8050:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8050:93:6"
															},
															"nativeSrc": "8050:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8050:93:6"
														},
														{
															"nativeSrc": "8152:19:6",
															"nodeType": "YulAssignment",
															"src": "8152:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8163:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8163:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8168:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8168:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8159:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8159:3:6"
																},
																"nativeSrc": "8159:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8159:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8152:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8152:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7811:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7945:3:6",
														"nodeType": "YulTypedName",
														"src": "7945:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7953:3:6",
														"nodeType": "YulTypedName",
														"src": "7953:3:6",
														"type": ""
													}
												],
												"src": "7811:366:6"
											},
											{
												"body": {
													"nativeSrc": "8354:248:6",
													"nodeType": "YulBlock",
													"src": "8354:248:6",
													"statements": [
														{
															"nativeSrc": "8364:26:6",
															"nodeType": "YulAssignment",
															"src": "8364:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8376:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8376:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8387:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8387:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8372:3:6"
																},
																"nativeSrc": "8372:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8372:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8364:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8364:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8411:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8411:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8422:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8422:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8407:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8407:3:6"
																		},
																		"nativeSrc": "8407:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8407:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8430:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8430:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8436:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8436:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8426:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8426:3:6"
																		},
																		"nativeSrc": "8426:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8426:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8400:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8400:6:6"
																},
																"nativeSrc": "8400:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8400:47:6"
															},
															"nativeSrc": "8400:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8400:47:6"
														},
														{
															"nativeSrc": "8456:139:6",
															"nodeType": "YulAssignment",
															"src": "8456:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8590:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8590:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8464:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8464:124:6"
																},
																"nativeSrc": "8464:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8464:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8456:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8456:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8183:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8334:9:6",
														"nodeType": "YulTypedName",
														"src": "8334:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8349:4:6",
														"nodeType": "YulTypedName",
														"src": "8349:4:6",
														"type": ""
													}
												],
												"src": "8183:419:6"
											},
											{
												"body": {
													"nativeSrc": "8636:152:6",
													"nodeType": "YulBlock",
													"src": "8636:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8653:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8653:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8656:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8656:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8646:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8646:6:6"
																},
																"nativeSrc": "8646:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8646:88:6"
															},
															"nativeSrc": "8646:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8646:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8750:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8750:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8753:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8753:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8743:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8743:6:6"
																},
																"nativeSrc": "8743:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8743:15:6"
															},
															"nativeSrc": "8743:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8743:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8774:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8774:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8777:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8777:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8767:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8767:6:6"
																},
																"nativeSrc": "8767:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8767:15:6"
															},
															"nativeSrc": "8767:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8767:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8608:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8608:180:6"
											},
											{
												"body": {
													"nativeSrc": "8838:147:6",
													"nodeType": "YulBlock",
													"src": "8838:147:6",
													"statements": [
														{
															"nativeSrc": "8848:25:6",
															"nodeType": "YulAssignment",
															"src": "8848:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8871:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8871:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8853:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8853:17:6"
																},
																"nativeSrc": "8853:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8853:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8848:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8848:1:6"
																}
															]
														},
														{
															"nativeSrc": "8882:25:6",
															"nodeType": "YulAssignment",
															"src": "8882:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8905:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8905:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8887:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8887:17:6"
																},
																"nativeSrc": "8887:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8887:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8882:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8882:1:6"
																}
															]
														},
														{
															"nativeSrc": "8916:16:6",
															"nodeType": "YulAssignment",
															"src": "8916:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8927:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8927:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8930:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8930:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8923:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8923:3:6"
																},
																"nativeSrc": "8923:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8923:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8916:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8916:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8956:22:6",
																"nodeType": "YulBlock",
																"src": "8956:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8958:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8958:16:6"
																			},
																			"nativeSrc": "8958:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8958:18:6"
																		},
																		"nativeSrc": "8958:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8958:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8948:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8948:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8951:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8951:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8945:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8945:2:6"
																},
																"nativeSrc": "8945:10:6",
																"nodeType": "YulFunctionCall",
																"src": "8945:10:6"
															},
															"nativeSrc": "8942:36:6",
															"nodeType": "YulIf",
															"src": "8942:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8794:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8825:1:6",
														"nodeType": "YulTypedName",
														"src": "8825:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8828:1:6",
														"nodeType": "YulTypedName",
														"src": "8828:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8834:3:6",
														"nodeType": "YulTypedName",
														"src": "8834:3:6",
														"type": ""
													}
												],
												"src": "8794:191:6"
											},
											{
												"body": {
													"nativeSrc": "9097:115:6",
													"nodeType": "YulBlock",
													"src": "9097:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9119:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9119:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9127:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9127:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9115:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9115:3:6"
																		},
																		"nativeSrc": "9115:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9115:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520696e636c7564696e672074",
																		"kind": "string",
																		"nativeSrc": "9131:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9131:34:6",
																		"type": "",
																		"value": "Insufficient balance including t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9108:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9108:6:6"
																},
																"nativeSrc": "9108:58:6",
																"nodeType": "YulFunctionCall",
																"src": "9108:58:6"
															},
															"nativeSrc": "9108:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "9108:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9187:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9187:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9195:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9195:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9183:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:6"
																		},
																		"nativeSrc": "9183:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9183:15:6"
																	},
																	{
																		"hexValue": "6178",
																		"kind": "string",
																		"nativeSrc": "9200:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9200:4:6",
																		"type": "",
																		"value": "ax"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9176:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9176:6:6"
																},
																"nativeSrc": "9176:29:6",
																"nodeType": "YulFunctionCall",
																"src": "9176:29:6"
															},
															"nativeSrc": "9176:29:6",
															"nodeType": "YulExpressionStatement",
															"src": "9176:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd",
												"nativeSrc": "8991:221:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9089:6:6",
														"nodeType": "YulTypedName",
														"src": "9089:6:6",
														"type": ""
													}
												],
												"src": "8991:221:6"
											},
											{
												"body": {
													"nativeSrc": "9364:220:6",
													"nodeType": "YulBlock",
													"src": "9364:220:6",
													"statements": [
														{
															"nativeSrc": "9374:74:6",
															"nodeType": "YulAssignment",
															"src": "9374:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9440:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9440:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9445:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9445:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9381:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9381:58:6"
																},
																"nativeSrc": "9381:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9381:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9374:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9374:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9546:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9546:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd",
																	"nativeSrc": "9457:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9457:88:6"
																},
																"nativeSrc": "9457:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9457:93:6"
															},
															"nativeSrc": "9457:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9457:93:6"
														},
														{
															"nativeSrc": "9559:19:6",
															"nodeType": "YulAssignment",
															"src": "9559:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9570:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9570:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9575:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9575:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9566:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9566:3:6"
																},
																"nativeSrc": "9566:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9566:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9559:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9559:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9218:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9352:3:6",
														"nodeType": "YulTypedName",
														"src": "9352:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9360:3:6",
														"nodeType": "YulTypedName",
														"src": "9360:3:6",
														"type": ""
													}
												],
												"src": "9218:366:6"
											},
											{
												"body": {
													"nativeSrc": "9761:248:6",
													"nodeType": "YulBlock",
													"src": "9761:248:6",
													"statements": [
														{
															"nativeSrc": "9771:26:6",
															"nodeType": "YulAssignment",
															"src": "9771:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9783:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9783:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9794:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9794:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9779:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9779:3:6"
																},
																"nativeSrc": "9779:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9779:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9771:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9771:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9818:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9818:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9829:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9829:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9814:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9814:3:6"
																		},
																		"nativeSrc": "9814:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9814:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9837:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9837:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9843:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9843:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9833:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9833:3:6"
																		},
																		"nativeSrc": "9833:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9833:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9807:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9807:6:6"
																},
																"nativeSrc": "9807:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9807:47:6"
															},
															"nativeSrc": "9807:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9807:47:6"
														},
														{
															"nativeSrc": "9863:139:6",
															"nodeType": "YulAssignment",
															"src": "9863:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9997:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9997:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9871:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9871:124:6"
																},
																"nativeSrc": "9871:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9871:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9863:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9863:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9590:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9741:9:6",
														"nodeType": "YulTypedName",
														"src": "9741:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9756:4:6",
														"nodeType": "YulTypedName",
														"src": "9756:4:6",
														"type": ""
													}
												],
												"src": "9590:419:6"
											},
											{
												"body": {
													"nativeSrc": "10060:149:6",
													"nodeType": "YulBlock",
													"src": "10060:149:6",
													"statements": [
														{
															"nativeSrc": "10070:25:6",
															"nodeType": "YulAssignment",
															"src": "10070:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10093:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10093:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10075:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10075:17:6"
																},
																"nativeSrc": "10075:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10075:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10070:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10070:1:6"
																}
															]
														},
														{
															"nativeSrc": "10104:25:6",
															"nodeType": "YulAssignment",
															"src": "10104:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10127:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10127:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10109:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10109:17:6"
																},
																"nativeSrc": "10109:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10109:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10104:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10104:1:6"
																}
															]
														},
														{
															"nativeSrc": "10138:17:6",
															"nodeType": "YulAssignment",
															"src": "10138:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10150:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10150:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10153:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10153:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10146:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10146:3:6"
																},
																"nativeSrc": "10146:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10146:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10138:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10138:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10180:22:6",
																"nodeType": "YulBlock",
																"src": "10180:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10182:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10182:16:6"
																			},
																			"nativeSrc": "10182:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10182:18:6"
																		},
																		"nativeSrc": "10182:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10182:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10171:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10171:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10177:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10177:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10168:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10168:2:6"
																},
																"nativeSrc": "10168:11:6",
																"nodeType": "YulFunctionCall",
																"src": "10168:11:6"
															},
															"nativeSrc": "10165:37:6",
															"nodeType": "YulIf",
															"src": "10165:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10015:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10046:1:6",
														"nodeType": "YulTypedName",
														"src": "10046:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10049:1:6",
														"nodeType": "YulTypedName",
														"src": "10049:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10055:4:6",
														"nodeType": "YulTypedName",
														"src": "10055:4:6",
														"type": ""
													}
												],
												"src": "10015:194:6"
											},
											{
												"body": {
													"nativeSrc": "10321:66:6",
													"nodeType": "YulBlock",
													"src": "10321:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10343:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10343:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10351:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10351:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10339:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10339:3:6"
																		},
																		"nativeSrc": "10339:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10339:14:6"
																	},
																	{
																		"hexValue": "4c697175696469747920706f6f6c206e6f7420736574",
																		"kind": "string",
																		"nativeSrc": "10355:24:6",
																		"nodeType": "YulLiteral",
																		"src": "10355:24:6",
																		"type": "",
																		"value": "Liquidity pool not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10332:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10332:6:6"
																},
																"nativeSrc": "10332:48:6",
																"nodeType": "YulFunctionCall",
																"src": "10332:48:6"
															},
															"nativeSrc": "10332:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "10332:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448",
												"nativeSrc": "10215:172:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10313:6:6",
														"nodeType": "YulTypedName",
														"src": "10313:6:6",
														"type": ""
													}
												],
												"src": "10215:172:6"
											},
											{
												"body": {
													"nativeSrc": "10539:220:6",
													"nodeType": "YulBlock",
													"src": "10539:220:6",
													"statements": [
														{
															"nativeSrc": "10549:74:6",
															"nodeType": "YulAssignment",
															"src": "10549:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10615:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10615:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10620:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10620:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10556:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10556:58:6"
																},
																"nativeSrc": "10556:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10556:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10549:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10549:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10721:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10721:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448",
																	"nativeSrc": "10632:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10632:88:6"
																},
																"nativeSrc": "10632:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10632:93:6"
															},
															"nativeSrc": "10632:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10632:93:6"
														},
														{
															"nativeSrc": "10734:19:6",
															"nodeType": "YulAssignment",
															"src": "10734:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10745:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10745:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10750:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10750:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10741:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10741:3:6"
																},
																"nativeSrc": "10741:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10741:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10734:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10734:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10393:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10527:3:6",
														"nodeType": "YulTypedName",
														"src": "10527:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10535:3:6",
														"nodeType": "YulTypedName",
														"src": "10535:3:6",
														"type": ""
													}
												],
												"src": "10393:366:6"
											},
											{
												"body": {
													"nativeSrc": "10936:248:6",
													"nodeType": "YulBlock",
													"src": "10936:248:6",
													"statements": [
														{
															"nativeSrc": "10946:26:6",
															"nodeType": "YulAssignment",
															"src": "10946:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10958:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10958:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10969:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10969:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10954:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10954:3:6"
																},
																"nativeSrc": "10954:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10954:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10946:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10946:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10993:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10993:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11004:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11004:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10989:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10989:3:6"
																		},
																		"nativeSrc": "10989:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10989:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11012:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11012:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11018:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11018:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11008:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11008:3:6"
																		},
																		"nativeSrc": "11008:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11008:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10982:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10982:6:6"
																},
																"nativeSrc": "10982:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10982:47:6"
															},
															"nativeSrc": "10982:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10982:47:6"
														},
														{
															"nativeSrc": "11038:139:6",
															"nodeType": "YulAssignment",
															"src": "11038:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11172:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11172:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11046:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11046:124:6"
																},
																"nativeSrc": "11046:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11046:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11038:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11038:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10765:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10916:9:6",
														"nodeType": "YulTypedName",
														"src": "10916:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10931:4:6",
														"nodeType": "YulTypedName",
														"src": "10931:4:6",
														"type": ""
													}
												],
												"src": "10765:419:6"
											},
											{
												"body": {
													"nativeSrc": "11344:288:6",
													"nodeType": "YulBlock",
													"src": "11344:288:6",
													"statements": [
														{
															"nativeSrc": "11354:26:6",
															"nodeType": "YulAssignment",
															"src": "11354:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11366:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11366:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11377:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11377:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11362:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11362:3:6"
																},
																"nativeSrc": "11362:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11362:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11354:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11354:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11434:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11434:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11447:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11447:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11458:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11458:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11443:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11443:3:6"
																		},
																		"nativeSrc": "11443:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11443:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11390:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11390:43:6"
																},
																"nativeSrc": "11390:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11390:71:6"
															},
															"nativeSrc": "11390:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11390:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11515:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11515:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11528:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11528:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11539:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11539:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11524:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11524:3:6"
																		},
																		"nativeSrc": "11524:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11524:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11471:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11471:43:6"
																},
																"nativeSrc": "11471:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11471:72:6"
															},
															"nativeSrc": "11471:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11471:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11597:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11597:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11610:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11610:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11621:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11621:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11606:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11606:3:6"
																		},
																		"nativeSrc": "11606:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11606:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11553:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11553:43:6"
																},
																"nativeSrc": "11553:72:6",
																"nodeType": "YulFunctionCall",
																"src": "11553:72:6"
															},
															"nativeSrc": "11553:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "11553:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11190:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11300:9:6",
														"nodeType": "YulTypedName",
														"src": "11300:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11312:6:6",
														"nodeType": "YulTypedName",
														"src": "11312:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11320:6:6",
														"nodeType": "YulTypedName",
														"src": "11320:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11328:6:6",
														"nodeType": "YulTypedName",
														"src": "11328:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11339:4:6",
														"nodeType": "YulTypedName",
														"src": "11339:4:6",
														"type": ""
													}
												],
												"src": "11190:442:6"
											},
											{
												"body": {
													"nativeSrc": "11678:76:6",
													"nodeType": "YulBlock",
													"src": "11678:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "11732:16:6",
																"nodeType": "YulBlock",
																"src": "11732:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11741:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11741:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11744:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11744:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11734:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11734:6:6"
																			},
																			"nativeSrc": "11734:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11734:12:6"
																		},
																		"nativeSrc": "11734:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11734:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11701:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "11701:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11723:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "11723:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11708:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "11708:14:6"
																				},
																				"nativeSrc": "11708:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11708:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11698:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "11698:2:6"
																		},
																		"nativeSrc": "11698:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11698:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11691:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11691:6:6"
																},
																"nativeSrc": "11691:40:6",
																"nodeType": "YulFunctionCall",
																"src": "11691:40:6"
															},
															"nativeSrc": "11688:60:6",
															"nodeType": "YulIf",
															"src": "11688:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11638:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11671:5:6",
														"nodeType": "YulTypedName",
														"src": "11671:5:6",
														"type": ""
													}
												],
												"src": "11638:116:6"
											},
											{
												"body": {
													"nativeSrc": "11820:77:6",
													"nodeType": "YulBlock",
													"src": "11820:77:6",
													"statements": [
														{
															"nativeSrc": "11830:22:6",
															"nodeType": "YulAssignment",
															"src": "11830:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11845:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11845:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11839:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11839:5:6"
																},
																"nativeSrc": "11839:13:6",
																"nodeType": "YulFunctionCall",
																"src": "11839:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11830:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11830:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11885:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11885:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11861:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "11861:23:6"
																},
																"nativeSrc": "11861:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11861:30:6"
															},
															"nativeSrc": "11861:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "11861:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11760:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11798:6:6",
														"nodeType": "YulTypedName",
														"src": "11798:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11806:3:6",
														"nodeType": "YulTypedName",
														"src": "11806:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11814:5:6",
														"nodeType": "YulTypedName",
														"src": "11814:5:6",
														"type": ""
													}
												],
												"src": "11760:137:6"
											},
											{
												"body": {
													"nativeSrc": "11977:271:6",
													"nodeType": "YulBlock",
													"src": "11977:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12023:83:6",
																"nodeType": "YulBlock",
																"src": "12023:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12025:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "12025:77:6"
																			},
																			"nativeSrc": "12025:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12025:79:6"
																		},
																		"nativeSrc": "12025:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12025:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11998:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "11998:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12007:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12007:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11994:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11994:3:6"
																		},
																		"nativeSrc": "11994:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11994:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12019:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12019:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11990:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11990:3:6"
																},
																"nativeSrc": "11990:32:6",
																"nodeType": "YulFunctionCall",
																"src": "11990:32:6"
															},
															"nativeSrc": "11987:119:6",
															"nodeType": "YulIf",
															"src": "11987:119:6"
														},
														{
															"nativeSrc": "12116:125:6",
															"nodeType": "YulBlock",
															"src": "12116:125:6",
															"statements": [
																{
																	"nativeSrc": "12131:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12131:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12145:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12145:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12135:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12135:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12160:71:6",
																	"nodeType": "YulAssignment",
																	"src": "12160:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12203:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12203:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12214:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12214:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12199:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12199:3:6"
																				},
																				"nativeSrc": "12199:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12199:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12223:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12223:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12170:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "12170:28:6"
																		},
																		"nativeSrc": "12170:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12170:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12160:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12160:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11903:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11947:9:6",
														"nodeType": "YulTypedName",
														"src": "11947:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11958:7:6",
														"nodeType": "YulTypedName",
														"src": "11958:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11970:6:6",
														"nodeType": "YulTypedName",
														"src": "11970:6:6",
														"type": ""
													}
												],
												"src": "11903:345:6"
											},
											{
												"body": {
													"nativeSrc": "12317:80:6",
													"nodeType": "YulBlock",
													"src": "12317:80:6",
													"statements": [
														{
															"nativeSrc": "12327:22:6",
															"nodeType": "YulAssignment",
															"src": "12327:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12342:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12342:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12336:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12336:5:6"
																},
																"nativeSrc": "12336:13:6",
																"nodeType": "YulFunctionCall",
																"src": "12336:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12327:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12327:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12385:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "12385:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12358:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "12358:26:6"
																},
																"nativeSrc": "12358:33:6",
																"nodeType": "YulFunctionCall",
																"src": "12358:33:6"
															},
															"nativeSrc": "12358:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "12358:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12254:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12295:6:6",
														"nodeType": "YulTypedName",
														"src": "12295:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12303:3:6",
														"nodeType": "YulTypedName",
														"src": "12303:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12311:5:6",
														"nodeType": "YulTypedName",
														"src": "12311:5:6",
														"type": ""
													}
												],
												"src": "12254:143:6"
											},
											{
												"body": {
													"nativeSrc": "12497:413:6",
													"nodeType": "YulBlock",
													"src": "12497:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12543:83:6",
																"nodeType": "YulBlock",
																"src": "12543:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12545:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "12545:77:6"
																			},
																			"nativeSrc": "12545:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12545:79:6"
																		},
																		"nativeSrc": "12545:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12545:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12518:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12518:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12527:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12527:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12514:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12514:3:6"
																		},
																		"nativeSrc": "12514:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12514:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12539:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12539:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12510:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12510:3:6"
																},
																"nativeSrc": "12510:32:6",
																"nodeType": "YulFunctionCall",
																"src": "12510:32:6"
															},
															"nativeSrc": "12507:119:6",
															"nodeType": "YulIf",
															"src": "12507:119:6"
														},
														{
															"nativeSrc": "12636:128:6",
															"nodeType": "YulBlock",
															"src": "12636:128:6",
															"statements": [
																{
																	"nativeSrc": "12651:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12651:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12665:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12665:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12655:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12655:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12680:74:6",
																	"nodeType": "YulAssignment",
																	"src": "12680:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12726:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12726:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12737:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12737:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12722:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12722:3:6"
																				},
																				"nativeSrc": "12722:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12722:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12746:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12746:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12690:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "12690:31:6"
																		},
																		"nativeSrc": "12690:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12690:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12680:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12680:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12774:129:6",
															"nodeType": "YulBlock",
															"src": "12774:129:6",
															"statements": [
																{
																	"nativeSrc": "12789:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12789:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12803:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12803:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12793:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12793:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12819:74:6",
																	"nodeType": "YulAssignment",
																	"src": "12819:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12865:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12865:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12876:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12876:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12861:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12861:3:6"
																				},
																				"nativeSrc": "12861:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12861:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12885:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12885:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12829:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "12829:31:6"
																		},
																		"nativeSrc": "12829:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12829:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12819:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12819:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nativeSrc": "12403:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12459:9:6",
														"nodeType": "YulTypedName",
														"src": "12459:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12470:7:6",
														"nodeType": "YulTypedName",
														"src": "12470:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12482:6:6",
														"nodeType": "YulTypedName",
														"src": "12482:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12490:6:6",
														"nodeType": "YulTypedName",
														"src": "12490:6:6",
														"type": ""
													}
												],
												"src": "12403:507:6"
											},
											{
												"body": {
													"nativeSrc": "13022:63:6",
													"nodeType": "YulBlock",
													"src": "13022:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13044:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13044:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13052:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13052:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13040:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13040:3:6"
																		},
																		"nativeSrc": "13040:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13040:14:6"
																	},
																	{
																		"hexValue": "45544820616d6f756e74206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "13056:21:6",
																		"nodeType": "YulLiteral",
																		"src": "13056:21:6",
																		"type": "",
																		"value": "ETH amount mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13033:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13033:6:6"
																},
																"nativeSrc": "13033:45:6",
																"nodeType": "YulFunctionCall",
																"src": "13033:45:6"
															},
															"nativeSrc": "13033:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "13033:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7",
												"nativeSrc": "12916:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13014:6:6",
														"nodeType": "YulTypedName",
														"src": "13014:6:6",
														"type": ""
													}
												],
												"src": "12916:169:6"
											},
											{
												"body": {
													"nativeSrc": "13237:220:6",
													"nodeType": "YulBlock",
													"src": "13237:220:6",
													"statements": [
														{
															"nativeSrc": "13247:74:6",
															"nodeType": "YulAssignment",
															"src": "13247:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13313:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13313:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13318:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13318:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13254:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "13254:58:6"
																},
																"nativeSrc": "13254:67:6",
																"nodeType": "YulFunctionCall",
																"src": "13254:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13247:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13247:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13419:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13419:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7",
																	"nativeSrc": "13330:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "13330:88:6"
																},
																"nativeSrc": "13330:93:6",
																"nodeType": "YulFunctionCall",
																"src": "13330:93:6"
															},
															"nativeSrc": "13330:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "13330:93:6"
														},
														{
															"nativeSrc": "13432:19:6",
															"nodeType": "YulAssignment",
															"src": "13432:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13443:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13443:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13448:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13448:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13439:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13439:3:6"
																},
																"nativeSrc": "13439:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13439:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13432:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13432:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13091:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13225:3:6",
														"nodeType": "YulTypedName",
														"src": "13225:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13233:3:6",
														"nodeType": "YulTypedName",
														"src": "13233:3:6",
														"type": ""
													}
												],
												"src": "13091:366:6"
											},
											{
												"body": {
													"nativeSrc": "13634:248:6",
													"nodeType": "YulBlock",
													"src": "13634:248:6",
													"statements": [
														{
															"nativeSrc": "13644:26:6",
															"nodeType": "YulAssignment",
															"src": "13644:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13656:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13656:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13667:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13667:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13652:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13652:3:6"
																},
																"nativeSrc": "13652:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13652:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13644:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13644:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13691:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13691:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13702:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13702:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13687:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13687:3:6"
																		},
																		"nativeSrc": "13687:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13687:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13710:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13710:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13716:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13716:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13706:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13706:3:6"
																		},
																		"nativeSrc": "13706:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13706:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13680:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13680:6:6"
																},
																"nativeSrc": "13680:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13680:47:6"
															},
															"nativeSrc": "13680:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13680:47:6"
														},
														{
															"nativeSrc": "13736:139:6",
															"nodeType": "YulAssignment",
															"src": "13736:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13870:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13870:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13744:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13744:124:6"
																},
																"nativeSrc": "13744:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13744:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13736:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13736:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13463:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13614:9:6",
														"nodeType": "YulTypedName",
														"src": "13614:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13629:4:6",
														"nodeType": "YulTypedName",
														"src": "13629:4:6",
														"type": ""
													}
												],
												"src": "13463:419:6"
											},
											{
												"body": {
													"nativeSrc": "14001:34:6",
													"nodeType": "YulBlock",
													"src": "14001:34:6",
													"statements": [
														{
															"nativeSrc": "14011:18:6",
															"nodeType": "YulAssignment",
															"src": "14011:18:6",
															"value": {
																"name": "pos",
																"nativeSrc": "14026:3:6",
																"nodeType": "YulIdentifier",
																"src": "14026:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14011:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "14011:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13888:147:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13973:3:6",
														"nodeType": "YulTypedName",
														"src": "13973:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13978:6:6",
														"nodeType": "YulTypedName",
														"src": "13978:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13989:11:6",
														"nodeType": "YulTypedName",
														"src": "13989:11:6",
														"type": ""
													}
												],
												"src": "13888:147:6"
											},
											{
												"body": {
													"nativeSrc": "14147:8:6",
													"nodeType": "YulBlock",
													"src": "14147:8:6",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "14041:114:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14139:6:6",
														"nodeType": "YulTypedName",
														"src": "14139:6:6",
														"type": ""
													}
												],
												"src": "14041:114:6"
											},
											{
												"body": {
													"nativeSrc": "14324:235:6",
													"nodeType": "YulBlock",
													"src": "14324:235:6",
													"statements": [
														{
															"nativeSrc": "14334:90:6",
															"nodeType": "YulAssignment",
															"src": "14334:90:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14417:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14417:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14422:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14422:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14341:75:6",
																	"nodeType": "YulIdentifier",
																	"src": "14341:75:6"
																},
																"nativeSrc": "14341:83:6",
																"nodeType": "YulFunctionCall",
																"src": "14341:83:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14334:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14334:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14522:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14522:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "14433:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "14433:88:6"
																},
																"nativeSrc": "14433:93:6",
																"nodeType": "YulFunctionCall",
																"src": "14433:93:6"
															},
															"nativeSrc": "14433:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "14433:93:6"
														},
														{
															"nativeSrc": "14535:18:6",
															"nodeType": "YulAssignment",
															"src": "14535:18:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14546:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14546:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14551:1:6",
																		"nodeType": "YulLiteral",
																		"src": "14551:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14542:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14542:3:6"
																},
																"nativeSrc": "14542:11:6",
																"nodeType": "YulFunctionCall",
																"src": "14542:11:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14535:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14535:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14161:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14312:3:6",
														"nodeType": "YulTypedName",
														"src": "14312:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14320:3:6",
														"nodeType": "YulTypedName",
														"src": "14320:3:6",
														"type": ""
													}
												],
												"src": "14161:398:6"
											},
											{
												"body": {
													"nativeSrc": "14753:191:6",
													"nodeType": "YulBlock",
													"src": "14753:191:6",
													"statements": [
														{
															"nativeSrc": "14764:154:6",
															"nodeType": "YulAssignment",
															"src": "14764:154:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14914:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14914:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14771:141:6",
																	"nodeType": "YulIdentifier",
																	"src": "14771:141:6"
																},
																"nativeSrc": "14771:147:6",
																"nodeType": "YulFunctionCall",
																"src": "14771:147:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14764:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14764:3:6"
																}
															]
														},
														{
															"nativeSrc": "14928:10:6",
															"nodeType": "YulAssignment",
															"src": "14928:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "14935:3:6",
																"nodeType": "YulIdentifier",
																"src": "14935:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14928:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14928:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14565:379:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14740:3:6",
														"nodeType": "YulTypedName",
														"src": "14740:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14749:3:6",
														"nodeType": "YulTypedName",
														"src": "14749:3:6",
														"type": ""
													}
												],
												"src": "14565:379:6"
											},
											{
												"body": {
													"nativeSrc": "15056:63:6",
													"nodeType": "YulBlock",
													"src": "15056:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15078:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "15078:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15086:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15086:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15074:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15074:3:6"
																		},
																		"nativeSrc": "15074:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15074:14:6"
																	},
																	{
																		"hexValue": "455448207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "15090:21:6",
																		"nodeType": "YulLiteral",
																		"src": "15090:21:6",
																		"type": "",
																		"value": "ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15067:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15067:6:6"
																},
																"nativeSrc": "15067:45:6",
																"nodeType": "YulFunctionCall",
																"src": "15067:45:6"
															},
															"nativeSrc": "15067:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "15067:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
												"nativeSrc": "14950:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15048:6:6",
														"nodeType": "YulTypedName",
														"src": "15048:6:6",
														"type": ""
													}
												],
												"src": "14950:169:6"
											},
											{
												"body": {
													"nativeSrc": "15271:220:6",
													"nodeType": "YulBlock",
													"src": "15271:220:6",
													"statements": [
														{
															"nativeSrc": "15281:74:6",
															"nodeType": "YulAssignment",
															"src": "15281:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15347:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15347:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15352:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15352:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15288:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "15288:58:6"
																},
																"nativeSrc": "15288:67:6",
																"nodeType": "YulFunctionCall",
																"src": "15288:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15281:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15281:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15453:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15453:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																	"nativeSrc": "15364:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "15364:88:6"
																},
																"nativeSrc": "15364:93:6",
																"nodeType": "YulFunctionCall",
																"src": "15364:93:6"
															},
															"nativeSrc": "15364:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "15364:93:6"
														},
														{
															"nativeSrc": "15466:19:6",
															"nodeType": "YulAssignment",
															"src": "15466:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15477:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15477:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15482:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15482:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15473:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15473:3:6"
																},
																"nativeSrc": "15473:12:6",
																"nodeType": "YulFunctionCall",
																"src": "15473:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15466:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15466:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15125:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15259:3:6",
														"nodeType": "YulTypedName",
														"src": "15259:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15267:3:6",
														"nodeType": "YulTypedName",
														"src": "15267:3:6",
														"type": ""
													}
												],
												"src": "15125:366:6"
											},
											{
												"body": {
													"nativeSrc": "15668:248:6",
													"nodeType": "YulBlock",
													"src": "15668:248:6",
													"statements": [
														{
															"nativeSrc": "15678:26:6",
															"nodeType": "YulAssignment",
															"src": "15678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15690:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15690:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15701:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15686:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15686:3:6"
																},
																"nativeSrc": "15686:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15678:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15725:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15725:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15736:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15736:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15721:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15721:3:6"
																		},
																		"nativeSrc": "15721:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15721:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15744:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "15744:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15750:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15750:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15740:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15740:3:6"
																		},
																		"nativeSrc": "15740:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15740:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15714:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15714:6:6"
																},
																"nativeSrc": "15714:47:6",
																"nodeType": "YulFunctionCall",
																"src": "15714:47:6"
															},
															"nativeSrc": "15714:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "15714:47:6"
														},
														{
															"nativeSrc": "15770:139:6",
															"nodeType": "YulAssignment",
															"src": "15770:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15904:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15904:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15778:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "15778:124:6"
																},
																"nativeSrc": "15778:131:6",
																"nodeType": "YulFunctionCall",
																"src": "15778:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15770:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15770:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15497:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15648:9:6",
														"nodeType": "YulTypedName",
														"src": "15648:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15663:4:6",
														"nodeType": "YulTypedName",
														"src": "15663:4:6",
														"type": ""
													}
												],
												"src": "15497:419:6"
											},
											{
												"body": {
													"nativeSrc": "15999:274:6",
													"nodeType": "YulBlock",
													"src": "15999:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "16045:83:6",
																"nodeType": "YulBlock",
																"src": "16045:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16047:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "16047:77:6"
																			},
																			"nativeSrc": "16047:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "16047:79:6"
																		},
																		"nativeSrc": "16047:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "16047:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16020:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "16020:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16029:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16029:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16016:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16016:3:6"
																		},
																		"nativeSrc": "16016:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16016:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16041:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16012:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16012:3:6"
																},
																"nativeSrc": "16012:32:6",
																"nodeType": "YulFunctionCall",
																"src": "16012:32:6"
															},
															"nativeSrc": "16009:119:6",
															"nodeType": "YulIf",
															"src": "16009:119:6"
														},
														{
															"nativeSrc": "16138:128:6",
															"nodeType": "YulBlock",
															"src": "16138:128:6",
															"statements": [
																{
																	"nativeSrc": "16153:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16153:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16167:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16167:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16157:6:6",
																			"nodeType": "YulTypedName",
																			"src": "16157:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16182:74:6",
																	"nodeType": "YulAssignment",
																	"src": "16182:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16228:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "16228:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16239:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "16239:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16224:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "16224:3:6"
																				},
																				"nativeSrc": "16224:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "16224:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16248:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "16248:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16192:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "16192:31:6"
																		},
																		"nativeSrc": "16192:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16192:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16182:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "16182:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "15922:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15969:9:6",
														"nodeType": "YulTypedName",
														"src": "15969:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15980:7:6",
														"nodeType": "YulTypedName",
														"src": "15980:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15992:6:6",
														"nodeType": "YulTypedName",
														"src": "15992:6:6",
														"type": ""
													}
												],
												"src": "15922:351:6"
											},
											{
												"body": {
													"nativeSrc": "16385:76:6",
													"nodeType": "YulBlock",
													"src": "16385:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16407:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "16407:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16415:1:6",
																				"nodeType": "YulLiteral",
																				"src": "16415:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16403:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16403:3:6"
																		},
																		"nativeSrc": "16403:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16403:14:6"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e20616d6f756e742065786365656473206c696d6974",
																		"kind": "string",
																		"nativeSrc": "16419:34:6",
																		"nodeType": "YulLiteral",
																		"src": "16419:34:6",
																		"type": "",
																		"value": "Transaction amount exceeds limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16396:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16396:6:6"
																},
																"nativeSrc": "16396:58:6",
																"nodeType": "YulFunctionCall",
																"src": "16396:58:6"
															},
															"nativeSrc": "16396:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "16396:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb",
												"nativeSrc": "16279:182:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16377:6:6",
														"nodeType": "YulTypedName",
														"src": "16377:6:6",
														"type": ""
													}
												],
												"src": "16279:182:6"
											},
											{
												"body": {
													"nativeSrc": "16613:220:6",
													"nodeType": "YulBlock",
													"src": "16613:220:6",
													"statements": [
														{
															"nativeSrc": "16623:74:6",
															"nodeType": "YulAssignment",
															"src": "16623:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16689:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16689:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16694:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16694:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16630:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "16630:58:6"
																},
																"nativeSrc": "16630:67:6",
																"nodeType": "YulFunctionCall",
																"src": "16630:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16623:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16623:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16795:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16795:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb",
																	"nativeSrc": "16706:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "16706:88:6"
																},
																"nativeSrc": "16706:93:6",
																"nodeType": "YulFunctionCall",
																"src": "16706:93:6"
															},
															"nativeSrc": "16706:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "16706:93:6"
														},
														{
															"nativeSrc": "16808:19:6",
															"nodeType": "YulAssignment",
															"src": "16808:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16819:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16819:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16824:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16824:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16815:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16815:3:6"
																},
																"nativeSrc": "16815:12:6",
																"nodeType": "YulFunctionCall",
																"src": "16815:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16808:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16808:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16467:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16601:3:6",
														"nodeType": "YulTypedName",
														"src": "16601:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16609:3:6",
														"nodeType": "YulTypedName",
														"src": "16609:3:6",
														"type": ""
													}
												],
												"src": "16467:366:6"
											},
											{
												"body": {
													"nativeSrc": "17010:248:6",
													"nodeType": "YulBlock",
													"src": "17010:248:6",
													"statements": [
														{
															"nativeSrc": "17020:26:6",
															"nodeType": "YulAssignment",
															"src": "17020:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17032:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "17032:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17043:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17043:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17028:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17028:3:6"
																},
																"nativeSrc": "17028:18:6",
																"nodeType": "YulFunctionCall",
																"src": "17028:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17020:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "17020:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17067:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17067:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17078:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17078:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17063:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17063:3:6"
																		},
																		"nativeSrc": "17063:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17063:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17086:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "17086:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17092:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17092:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17082:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17082:3:6"
																		},
																		"nativeSrc": "17082:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17082:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17056:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17056:6:6"
																},
																"nativeSrc": "17056:47:6",
																"nodeType": "YulFunctionCall",
																"src": "17056:47:6"
															},
															"nativeSrc": "17056:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "17056:47:6"
														},
														{
															"nativeSrc": "17112:139:6",
															"nodeType": "YulAssignment",
															"src": "17112:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17246:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "17246:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17120:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "17120:124:6"
																},
																"nativeSrc": "17120:131:6",
																"nodeType": "YulFunctionCall",
																"src": "17120:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17112:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "17112:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16839:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16990:9:6",
														"nodeType": "YulTypedName",
														"src": "16990:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17005:4:6",
														"nodeType": "YulTypedName",
														"src": "17005:4:6",
														"type": ""
													}
												],
												"src": "16839:419:6"
											},
											{
												"body": {
													"nativeSrc": "17292:152:6",
													"nodeType": "YulBlock",
													"src": "17292:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17309:1:6",
																		"nodeType": "YulLiteral",
																		"src": "17309:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17312:77:6",
																		"nodeType": "YulLiteral",
																		"src": "17312:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17302:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:6"
																},
																"nativeSrc": "17302:88:6",
																"nodeType": "YulFunctionCall",
																"src": "17302:88:6"
															},
															"nativeSrc": "17302:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "17302:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17406:1:6",
																		"nodeType": "YulLiteral",
																		"src": "17406:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17409:4:6",
																		"nodeType": "YulLiteral",
																		"src": "17409:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17399:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17399:6:6"
																},
																"nativeSrc": "17399:15:6",
																"nodeType": "YulFunctionCall",
																"src": "17399:15:6"
															},
															"nativeSrc": "17399:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "17399:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17430:1:6",
																		"nodeType": "YulLiteral",
																		"src": "17430:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17433:4:6",
																		"nodeType": "YulLiteral",
																		"src": "17433:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17423:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17423:6:6"
																},
																"nativeSrc": "17423:15:6",
																"nodeType": "YulFunctionCall",
																"src": "17423:15:6"
															},
															"nativeSrc": "17423:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "17423:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "17264:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "17264:180:6"
											},
											{
												"body": {
													"nativeSrc": "17492:143:6",
													"nodeType": "YulBlock",
													"src": "17492:143:6",
													"statements": [
														{
															"nativeSrc": "17502:25:6",
															"nodeType": "YulAssignment",
															"src": "17502:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17525:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "17525:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17507:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "17507:17:6"
																},
																"nativeSrc": "17507:20:6",
																"nodeType": "YulFunctionCall",
																"src": "17507:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17502:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "17502:1:6"
																}
															]
														},
														{
															"nativeSrc": "17536:25:6",
															"nodeType": "YulAssignment",
															"src": "17536:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17559:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "17559:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17541:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "17541:17:6"
																},
																"nativeSrc": "17541:20:6",
																"nodeType": "YulFunctionCall",
																"src": "17541:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17536:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "17536:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17583:22:6",
																"nodeType": "YulBlock",
																"src": "17583:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17585:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "17585:16:6"
																			},
																			"nativeSrc": "17585:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "17585:18:6"
																		},
																		"nativeSrc": "17585:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "17585:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17580:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "17580:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17573:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17573:6:6"
																},
																"nativeSrc": "17573:9:6",
																"nodeType": "YulFunctionCall",
																"src": "17573:9:6"
															},
															"nativeSrc": "17570:35:6",
															"nodeType": "YulIf",
															"src": "17570:35:6"
														},
														{
															"nativeSrc": "17615:14:6",
															"nodeType": "YulAssignment",
															"src": "17615:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17624:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "17624:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17627:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "17627:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17620:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17620:3:6"
																},
																"nativeSrc": "17620:9:6",
																"nodeType": "YulFunctionCall",
																"src": "17620:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17615:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "17615:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17450:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17481:1:6",
														"nodeType": "YulTypedName",
														"src": "17481:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17484:1:6",
														"nodeType": "YulTypedName",
														"src": "17484:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17490:1:6",
														"nodeType": "YulTypedName",
														"src": "17490:1:6",
														"type": ""
													}
												],
												"src": "17450:185:6"
											},
											{
												"body": {
													"nativeSrc": "17747:76:6",
													"nodeType": "YulBlock",
													"src": "17747:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17769:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "17769:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17777:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17777:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17765:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17765:3:6"
																		},
																		"nativeSrc": "17765:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17765:14:6"
																	},
																	{
																		"hexValue": "4461696c79207472616e73616374696f6e206c696d6974206578636565646564",
																		"kind": "string",
																		"nativeSrc": "17781:34:6",
																		"nodeType": "YulLiteral",
																		"src": "17781:34:6",
																		"type": "",
																		"value": "Daily transaction limit exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17758:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17758:6:6"
																},
																"nativeSrc": "17758:58:6",
																"nodeType": "YulFunctionCall",
																"src": "17758:58:6"
															},
															"nativeSrc": "17758:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "17758:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3",
												"nativeSrc": "17641:182:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17739:6:6",
														"nodeType": "YulTypedName",
														"src": "17739:6:6",
														"type": ""
													}
												],
												"src": "17641:182:6"
											},
											{
												"body": {
													"nativeSrc": "17975:220:6",
													"nodeType": "YulBlock",
													"src": "17975:220:6",
													"statements": [
														{
															"nativeSrc": "17985:74:6",
															"nodeType": "YulAssignment",
															"src": "17985:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18051:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18051:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18056:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18056:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17992:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "17992:58:6"
																},
																"nativeSrc": "17992:67:6",
																"nodeType": "YulFunctionCall",
																"src": "17992:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17985:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17985:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18157:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18157:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3",
																	"nativeSrc": "18068:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "18068:88:6"
																},
																"nativeSrc": "18068:93:6",
																"nodeType": "YulFunctionCall",
																"src": "18068:93:6"
															},
															"nativeSrc": "18068:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "18068:93:6"
														},
														{
															"nativeSrc": "18170:19:6",
															"nodeType": "YulAssignment",
															"src": "18170:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18181:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18181:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18186:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18186:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18177:3:6"
																},
																"nativeSrc": "18177:12:6",
																"nodeType": "YulFunctionCall",
																"src": "18177:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18170:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18170:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17829:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17963:3:6",
														"nodeType": "YulTypedName",
														"src": "17963:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17971:3:6",
														"nodeType": "YulTypedName",
														"src": "17971:3:6",
														"type": ""
													}
												],
												"src": "17829:366:6"
											},
											{
												"body": {
													"nativeSrc": "18372:248:6",
													"nodeType": "YulBlock",
													"src": "18372:248:6",
													"statements": [
														{
															"nativeSrc": "18382:26:6",
															"nodeType": "YulAssignment",
															"src": "18382:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18394:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "18394:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18405:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18405:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18390:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18390:3:6"
																},
																"nativeSrc": "18390:18:6",
																"nodeType": "YulFunctionCall",
																"src": "18390:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18382:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18382:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18429:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18429:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18440:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18440:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18425:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18425:3:6"
																		},
																		"nativeSrc": "18425:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18425:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18448:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "18448:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18454:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18454:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18444:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18444:3:6"
																		},
																		"nativeSrc": "18444:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18444:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18418:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "18418:6:6"
																},
																"nativeSrc": "18418:47:6",
																"nodeType": "YulFunctionCall",
																"src": "18418:47:6"
															},
															"nativeSrc": "18418:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "18418:47:6"
														},
														{
															"nativeSrc": "18474:139:6",
															"nodeType": "YulAssignment",
															"src": "18474:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18608:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "18608:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18482:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "18482:124:6"
																},
																"nativeSrc": "18482:131:6",
																"nodeType": "YulFunctionCall",
																"src": "18482:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18474:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18474:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18201:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18352:9:6",
														"nodeType": "YulTypedName",
														"src": "18352:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18367:4:6",
														"nodeType": "YulTypedName",
														"src": "18367:4:6",
														"type": ""
													}
												],
												"src": "18201:419:6"
											},
											{
												"body": {
													"nativeSrc": "18669:190:6",
													"nodeType": "YulBlock",
													"src": "18669:190:6",
													"statements": [
														{
															"nativeSrc": "18679:33:6",
															"nodeType": "YulAssignment",
															"src": "18679:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18706:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "18706:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18688:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "18688:17:6"
																},
																"nativeSrc": "18688:24:6",
																"nodeType": "YulFunctionCall",
																"src": "18688:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18679:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "18679:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18802:22:6",
																"nodeType": "YulBlock",
																"src": "18802:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18804:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "18804:16:6"
																			},
																			"nativeSrc": "18804:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "18804:18:6"
																		},
																		"nativeSrc": "18804:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "18804:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18727:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "18727:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18734:66:6",
																		"nodeType": "YulLiteral",
																		"src": "18734:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18724:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "18724:2:6"
																},
																"nativeSrc": "18724:77:6",
																"nodeType": "YulFunctionCall",
																"src": "18724:77:6"
															},
															"nativeSrc": "18721:103:6",
															"nodeType": "YulIf",
															"src": "18721:103:6"
														},
														{
															"nativeSrc": "18833:20:6",
															"nodeType": "YulAssignment",
															"src": "18833:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18844:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "18844:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18851:1:6",
																		"nodeType": "YulLiteral",
																		"src": "18851:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18840:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18840:3:6"
																},
																"nativeSrc": "18840:13:6",
																"nodeType": "YulFunctionCall",
																"src": "18840:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18833:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18833:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "18626:233:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18655:5:6",
														"nodeType": "YulTypedName",
														"src": "18655:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18665:3:6",
														"nodeType": "YulTypedName",
														"src": "18665:3:6",
														"type": ""
													}
												],
												"src": "18626:233:6"
											},
											{
												"body": {
													"nativeSrc": "18913:362:6",
													"nodeType": "YulBlock",
													"src": "18913:362:6",
													"statements": [
														{
															"nativeSrc": "18923:25:6",
															"nodeType": "YulAssignment",
															"src": "18923:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18946:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "18946:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18928:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "18928:17:6"
																},
																"nativeSrc": "18928:20:6",
																"nodeType": "YulFunctionCall",
																"src": "18928:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18923:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "18923:1:6"
																}
															]
														},
														{
															"nativeSrc": "18957:25:6",
															"nodeType": "YulAssignment",
															"src": "18957:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18980:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "18980:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18962:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "18962:17:6"
																},
																"nativeSrc": "18962:20:6",
																"nodeType": "YulFunctionCall",
																"src": "18962:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18957:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "18957:1:6"
																}
															]
														},
														{
															"nativeSrc": "18991:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "18991:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19014:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "19014:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19017:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "19017:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19010:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19010:3:6"
																},
																"nativeSrc": "19010:9:6",
																"nodeType": "YulFunctionCall",
																"src": "19010:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "18995:11:6",
																	"nodeType": "YulTypedName",
																	"src": "18995:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19028:41:6",
															"nodeType": "YulAssignment",
															"src": "19028:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "19057:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "19057:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19039:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "19039:17:6"
																},
																"nativeSrc": "19039:30:6",
																"nodeType": "YulFunctionCall",
																"src": "19039:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "19028:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "19028:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19246:22:6",
																"nodeType": "YulBlock",
																"src": "19246:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19248:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "19248:16:6"
																			},
																			"nativeSrc": "19248:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "19248:18:6"
																		},
																		"nativeSrc": "19248:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "19248:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "19179:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "19179:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "19172:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "19172:6:6"
																				},
																				"nativeSrc": "19172:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "19172:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "19202:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "19202:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "19209:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "19209:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "19218:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "19218:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "19205:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "19205:3:6"
																						},
																						"nativeSrc": "19205:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "19205:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "19199:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "19199:2:6"
																				},
																				"nativeSrc": "19199:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "19199:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "19152:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "19152:2:6"
																		},
																		"nativeSrc": "19152:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19152:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19132:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19132:6:6"
																},
																"nativeSrc": "19132:113:6",
																"nodeType": "YulFunctionCall",
																"src": "19132:113:6"
															},
															"nativeSrc": "19129:139:6",
															"nodeType": "YulIf",
															"src": "19129:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "18865:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18896:1:6",
														"nodeType": "YulTypedName",
														"src": "18896:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18899:1:6",
														"nodeType": "YulTypedName",
														"src": "18899:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "18905:7:6",
														"nodeType": "YulTypedName",
														"src": "18905:7:6",
														"type": ""
													}
												],
												"src": "18865:410:6"
											},
											{
												"body": {
													"nativeSrc": "19435:288:6",
													"nodeType": "YulBlock",
													"src": "19435:288:6",
													"statements": [
														{
															"nativeSrc": "19445:26:6",
															"nodeType": "YulAssignment",
															"src": "19445:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19457:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "19457:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19468:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19468:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19453:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19453:3:6"
																},
																"nativeSrc": "19453:18:6",
																"nodeType": "YulFunctionCall",
																"src": "19453:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19445:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "19445:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19525:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19525:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19538:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19538:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19549:1:6",
																				"nodeType": "YulLiteral",
																				"src": "19549:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19534:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19534:3:6"
																		},
																		"nativeSrc": "19534:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19534:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19481:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19481:43:6"
																},
																"nativeSrc": "19481:71:6",
																"nodeType": "YulFunctionCall",
																"src": "19481:71:6"
															},
															"nativeSrc": "19481:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "19481:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19606:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19606:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19619:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19619:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19630:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19630:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19615:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19615:3:6"
																		},
																		"nativeSrc": "19615:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19615:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19562:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19562:43:6"
																},
																"nativeSrc": "19562:72:6",
																"nodeType": "YulFunctionCall",
																"src": "19562:72:6"
															},
															"nativeSrc": "19562:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "19562:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19688:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19688:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19701:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19701:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19712:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19712:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19697:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19697:3:6"
																		},
																		"nativeSrc": "19697:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19697:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19644:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19644:43:6"
																},
																"nativeSrc": "19644:72:6",
																"nodeType": "YulFunctionCall",
																"src": "19644:72:6"
															},
															"nativeSrc": "19644:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "19644:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19281:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19391:9:6",
														"nodeType": "YulTypedName",
														"src": "19391:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19403:6:6",
														"nodeType": "YulTypedName",
														"src": "19403:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19411:6:6",
														"nodeType": "YulTypedName",
														"src": "19411:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19419:6:6",
														"nodeType": "YulTypedName",
														"src": "19419:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19430:4:6",
														"nodeType": "YulTypedName",
														"src": "19430:4:6",
														"type": ""
													}
												],
												"src": "19281:442:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance including t\")\n\n        mstore(add(memPtr, 32), \"ax\")\n\n    }\n\n    function abi_encode_t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448(memPtr) {\n\n        mstore(add(memPtr, 0), \"Liquidity pool not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH amount mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transaction amount exceeds limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Daily transaction limit exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f2575f3560e01c806395d89b4111610089578063c8c8ebe411610058578063c8c8ebe41461033b578063dd62ed3e14610365578063e6ef73d6146103a1578063f450c23a146103cb576100f2565b806395d89b411461027c5780639c8f9f23146102a65780639cd441da146102e3578063a9059cbb146102ff576100f2565b8063313ce567116100c5578063313ce567146101c2578063665a11ca146101ec57806370a0823114610216578063771a3a1d14610252576100f2565b806306fdde03146100f6578063095ea7b31461012057806318160ddd1461015c57806323b872dd14610186575b5f5ffd5b348015610101575f5ffd5b5061010a6103f5565b6040516101179190611441565b60405180910390f35b34801561012b575f5ffd5b50610146600480360381019061014191906114f2565b610485565b604051610153919061154a565b60405180910390f35b348015610167575f5ffd5b506101706104a7565b60405161017d9190611572565b60405180910390f35b348015610191575f5ffd5b506101ac60048036038101906101a7919061158b565b6104b0565b6040516101b9919061154a565b60405180910390f35b3480156101cd575f5ffd5b506101d66105cc565b6040516101e391906115f6565b60405180910390f35b3480156101f7575f5ffd5b506102006105d4565b60405161020d919061161e565b60405180910390f35b348015610221575f5ffd5b5061023c60048036038101906102379190611637565b6105f9565b6040516102499190611572565b60405180910390f35b34801561025d575f5ffd5b5061026661063e565b6040516102739190611572565b60405180910390f35b348015610287575f5ffd5b50610290610644565b60405161029d9190611441565b60405180910390f35b3480156102b1575f5ffd5b506102cc60048036038101906102c79190611662565b6106d4565b6040516102da92919061168d565b60405180910390f35b6102fd60048036038101906102f891906116b4565b6108cb565b005b34801561030a575f5ffd5b50610325600480360381019061032091906114f2565b610b31565b604051610332919061154a565b60405180910390f35b348015610346575f5ffd5b5061034f610bea565b60405161035c9190611572565b60405180910390f35b348015610370575f5ffd5b5061038b600480360381019061038691906116f2565b610bf0565b6040516103989190611572565b60405180910390f35b3480156103ac575f5ffd5b506103b5610c72565b6040516103c2919061161e565b60405180910390f35b3480156103d6575f5ffd5b506103df610c97565b6040516103ec9190611572565b60405180910390f35b6060600380546104049061175d565b80601f01602080910402602001604051908101604052809291908181526020018280546104309061175d565b801561047b5780601f106104525761010080835404028352916020019161047b565b820191905f5260205f20905b81548152906001019060200180831161045e57829003601f168201915b5050505050905090565b5f5f61048f610c9d565b905061049c818585610ca4565b600191505092915050565b5f600254905090565b5f5f6104bc8533610bf0565b905082811015610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f8906117fd565b60405180910390fd5b61050b8584610cb6565b5f61051584610eb4565b90505f81856105249190611848565b905080610530886105f9565b1015610571576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610568906118eb565b60405180910390fd5b61057c878787610ed7565b6105a88760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610ed7565b6105be873387866105b99190611909565b610ca4565b600193505050509392505050565b5f6012905090565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60055481565b6060600480546106539061175d565b80601f016020809104026020016040519081016040528092919081815260200182805461067f9061175d565b80156106ca5780601f106106a1576101008083540402835291602001916106ca565b820191905f5260205f20905b8154815290600101906020018083116106ad57829003601f168201915b5050505050905090565b5f5f5f73ffffffffffffffffffffffffffffffffffffffff16600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90611986565b60405180910390fd5b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518463ffffffff1660e01b81526004016107e4939291906119a4565b6020604051808303815f875af1158015610800573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108249190611a03565b50600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166389afcb44336040518263ffffffff1660e01b815260040161087f919061161e565b60408051808303815f875af115801561089a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108be9190611a42565b8092508193505050915091565b5f73ffffffffffffffffffffffffffffffffffffffff16600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095190611986565b60405180910390fd5b34811461099c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099390611aca565b60405180910390fd5b6109c833600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610ed7565b5f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610a0e90611b15565b5f6040518083038185875af1925050503d805f8114610a48576040519150601f19603f3d011682016040523d82523d5f602084013e610a4d565b606091505b5050905080610a91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8890611b73565b60405180910390fd5b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842336040518263ffffffff1660e01b8152600401610aeb919061161e565b6020604051808303815f875af1158015610b07573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2b9190611b91565b50505050565b5f5f339050610b408184610cb6565b5f610b4a84610eb4565b90505f8185610b599190611848565b905080610b65846105f9565b1015610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d906118eb565b60405180910390fd5b610bb08686610fc7565b50610bdc60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610fc7565b506001935050505092915050565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b5f33905090565b610cb18383836001610fe9565b505050565b600754811115610cfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf290611c06565b60405180910390fd5b5f6201518042610d0b9190611c51565b90505f600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905080821115610ddb575f60095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555081600a5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b60085460095f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410610e5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5390611ccb565b60405180910390fd5b60095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190610ea990611ce9565b919050555050505050565b5f61271060055483610ec69190611d30565b610ed09190611c51565b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f47575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f3e919061161e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fb7575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610fae919061161e565b60405180910390fd5b610fc28383836111b8565b505050565b5f5f610fd1610c9d565b9050610fde818585610ed7565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611059575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611050919061161e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110c9575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110c0919061161e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111b2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111a99190611572565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611208578060025f8282546111fc9190611848565b925050819055506112d6565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611291578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161128893929190611d71565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361131d578060025f8282540392505081905550611367565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113c49190611572565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611413826113d1565b61141d81856113db565b935061142d8185602086016113eb565b611436816113f9565b840191505092915050565b5f6020820190508181035f8301526114598184611409565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61148e82611465565b9050919050565b61149e81611484565b81146114a8575f5ffd5b50565b5f813590506114b981611495565b92915050565b5f819050919050565b6114d1816114bf565b81146114db575f5ffd5b50565b5f813590506114ec816114c8565b92915050565b5f5f6040838503121561150857611507611461565b5b5f611515858286016114ab565b9250506020611526858286016114de565b9150509250929050565b5f8115159050919050565b61154481611530565b82525050565b5f60208201905061155d5f83018461153b565b92915050565b61156c816114bf565b82525050565b5f6020820190506115855f830184611563565b92915050565b5f5f5f606084860312156115a2576115a1611461565b5b5f6115af868287016114ab565b93505060206115c0868287016114ab565b92505060406115d1868287016114de565b9150509250925092565b5f60ff82169050919050565b6115f0816115db565b82525050565b5f6020820190506116095f8301846115e7565b92915050565b61161881611484565b82525050565b5f6020820190506116315f83018461160f565b92915050565b5f6020828403121561164c5761164b611461565b5b5f611659848285016114ab565b91505092915050565b5f6020828403121561167757611676611461565b5b5f611684848285016114de565b91505092915050565b5f6040820190506116a05f830185611563565b6116ad6020830184611563565b9392505050565b5f5f604083850312156116ca576116c9611461565b5b5f6116d7858286016114de565b92505060206116e8858286016114de565b9150509250929050565b5f5f6040838503121561170857611707611461565b5b5f611715858286016114ab565b9250506020611726858286016114ab565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061177457607f821691505b60208210810361178757611786611730565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320615f8201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b5f6117e76028836113db565b91506117f28261178d565b604082019050919050565b5f6020820190508181035f830152611814816117db565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611852826114bf565b915061185d836114bf565b92508282019050808211156118755761187461181b565b5b92915050565b7f496e73756666696369656e742062616c616e636520696e636c7564696e6720745f8201527f6178000000000000000000000000000000000000000000000000000000000000602082015250565b5f6118d56022836113db565b91506118e08261187b565b604082019050919050565b5f6020820190508181035f830152611902816118c9565b9050919050565b5f611913826114bf565b915061191e836114bf565b92508282039050818111156119365761193561181b565b5b92915050565b7f4c697175696469747920706f6f6c206e6f7420736574000000000000000000005f82015250565b5f6119706016836113db565b915061197b8261193c565b602082019050919050565b5f6020820190508181035f83015261199d81611964565b9050919050565b5f6060820190506119b75f83018661160f565b6119c4602083018561160f565b6119d16040830184611563565b949350505050565b6119e281611530565b81146119ec575f5ffd5b50565b5f815190506119fd816119d9565b92915050565b5f60208284031215611a1857611a17611461565b5b5f611a25848285016119ef565b91505092915050565b5f81519050611a3c816114c8565b92915050565b5f5f60408385031215611a5857611a57611461565b5b5f611a6585828601611a2e565b9250506020611a7685828601611a2e565b9150509250929050565b7f45544820616d6f756e74206d69736d61746368000000000000000000000000005f82015250565b5f611ab46013836113db565b9150611abf82611a80565b602082019050919050565b5f6020820190508181035f830152611ae181611aa8565b9050919050565b5f81905092915050565b50565b5f611b005f83611ae8565b9150611b0b82611af2565b5f82019050919050565b5f611b1f82611af5565b9150819050919050565b7f455448207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f611b5d6013836113db565b9150611b6882611b29565b602082019050919050565b5f6020820190508181035f830152611b8a81611b51565b9050919050565b5f60208284031215611ba657611ba5611461565b5b5f611bb384828501611a2e565b91505092915050565b7f5472616e73616374696f6e20616d6f756e742065786365656473206c696d69745f82015250565b5f611bf06020836113db565b9150611bfb82611bbc565b602082019050919050565b5f6020820190508181035f830152611c1d81611be4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611c5b826114bf565b9150611c66836114bf565b925082611c7657611c75611c24565b5b828204905092915050565b7f4461696c79207472616e73616374696f6e206c696d69742065786365656465645f82015250565b5f611cb56020836113db565b9150611cc082611c81565b602082019050919050565b5f6020820190508181035f830152611ce281611ca9565b9050919050565b5f611cf3826114bf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d2557611d2461181b565b5b600182019050919050565b5f611d3a826114bf565b9150611d45836114bf565b9250828202611d53816114bf565b91508282048414831517611d6a57611d6961181b565b5b5092915050565b5f606082019050611d845f83018661160f565b611d916020830185611563565b611d9e6040830184611563565b94935050505056fea2646970667358221220e4e0f30767bc3fd53532e36d1ffab999ce5ac2e10e03fd0962394629c71b0a4f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xC8C8EBE4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xC8C8EBE4 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xE6EF73D6 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xF450C23A EQ PUSH2 0x3CB JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2FF JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x665A11CA EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x252 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x186 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x146 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x15F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x200 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x266 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x290 PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP3 SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x34F PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3B5 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3DF PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x404 SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x430 SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x452 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x48F PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP PUSH2 0x49C DUP2 DUP6 DUP6 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4BC DUP6 CALLER PUSH2 0xBF0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F8 SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50B DUP6 DUP5 PUSH2 0xCB6 JUMP JUMPDEST PUSH0 PUSH2 0x515 DUP5 PUSH2 0xEB4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x530 DUP9 PUSH2 0x5F9 JUMP JUMPDEST LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x568 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57C DUP8 DUP8 DUP8 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x5A8 DUP8 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xED7 JUMP JUMPDEST PUSH2 0x5BE DUP8 CALLER DUP8 DUP7 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x653 SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67F SWAP1 PUSH2 0x175D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75C SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x800 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1A03 JUMP JUMPDEST POP PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x89AFCB44 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BE SWAP2 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x951 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP2 EQ PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x993 SWAP1 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C8 CALLER PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xED7 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xA0E SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA4D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA88 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6A627842 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEB SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB07 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 CALLER SWAP1 POP PUSH2 0xB40 DUP2 DUP5 PUSH2 0xCB6 JUMP JUMPDEST PUSH0 PUSH2 0xB4A DUP5 PUSH2 0xEB4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB65 DUP5 PUSH2 0x5F9 JUMP JUMPDEST LT ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9D SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB0 DUP7 DUP7 PUSH2 0xFC7 JUMP JUMPDEST POP PUSH2 0xBDC PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xFC7 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCB1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFE9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH3 0x15180 TIMESTAMP PUSH2 0xD0B SWAP2 SWAP1 PUSH2 0x1C51 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDDB JUMPI PUSH0 PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE53 SWAP1 PUSH2 0x1CCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xEA9 SWAP1 PUSH2 0x1CE9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x5 SLOAD DUP4 PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0xED0 SWAP2 SWAP1 PUSH2 0x1C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF47 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAE SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC2 DUP4 DUP4 DUP4 PUSH2 0x11B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xFD1 PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP PUSH2 0xFDE DUP2 DUP6 DUP6 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1059 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1050 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11B2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1208 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11FC SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12D6 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1291 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x131D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1367 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1413 DUP3 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x141D DUP2 DUP6 PUSH2 0x13DB JUMP JUMPDEST SWAP4 POP PUSH2 0x142D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x13F9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1459 DUP2 DUP5 PUSH2 0x1409 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x148E DUP3 PUSH2 0x1465 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x149E DUP2 PUSH2 0x1484 JUMP JUMPDEST DUP2 EQ PUSH2 0x14A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14B9 DUP2 PUSH2 0x1495 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x14BF JUMP JUMPDEST DUP2 EQ PUSH2 0x14DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EC DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1508 JUMPI PUSH2 0x1507 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1515 DUP6 DUP3 DUP7 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1526 DUP6 DUP3 DUP7 ADD PUSH2 0x14DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1544 DUP2 PUSH2 0x1530 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155D PUSH0 DUP4 ADD DUP5 PUSH2 0x153B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x156C DUP2 PUSH2 0x14BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1585 PUSH0 DUP4 ADD DUP5 PUSH2 0x1563 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AF DUP7 DUP3 DUP8 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15C0 DUP7 DUP3 DUP8 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15D1 DUP7 DUP3 DUP8 ADD PUSH2 0x14DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F0 DUP2 PUSH2 0x15DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1609 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1618 DUP2 PUSH2 0x1484 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1631 PUSH0 DUP4 ADD DUP5 PUSH2 0x160F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164C JUMPI PUSH2 0x164B PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1659 DUP5 DUP3 DUP6 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1677 JUMPI PUSH2 0x1676 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1684 DUP5 DUP3 DUP6 ADD PUSH2 0x14DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16A0 PUSH0 DUP4 ADD DUP6 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x16AD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1563 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CA JUMPI PUSH2 0x16C9 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D7 DUP6 DUP3 DUP7 ADD PUSH2 0x14DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16E8 DUP6 DUP3 DUP7 ADD PUSH2 0x14DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1708 JUMPI PUSH2 0x1707 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1715 DUP6 DUP3 DUP7 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1726 DUP6 DUP3 DUP7 ADD PUSH2 0x14AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1774 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1787 JUMPI PUSH2 0x1786 PUSH2 0x1730 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17E7 PUSH1 0x28 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x17F2 DUP3 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1814 DUP2 PUSH2 0x17DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1852 DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP PUSH2 0x185D DUP4 PUSH2 0x14BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1875 JUMPI PUSH2 0x1874 PUSH2 0x181B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520696E636C7564696E672074 PUSH0 DUP3 ADD MSTORE PUSH32 0x6178000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18D5 PUSH1 0x22 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x18E0 DUP3 PUSH2 0x187B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1902 DUP2 PUSH2 0x18C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1913 DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP PUSH2 0x191E DUP4 PUSH2 0x14BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1935 PUSH2 0x181B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697175696469747920706F6F6C206E6F742073657400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1970 PUSH1 0x16 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x197B DUP3 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x199D DUP2 PUSH2 0x1964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19B7 PUSH0 DUP4 ADD DUP7 PUSH2 0x160F JUMP JUMPDEST PUSH2 0x19C4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x160F JUMP JUMPDEST PUSH2 0x19D1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1563 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x19E2 DUP2 PUSH2 0x1530 JUMP JUMPDEST DUP2 EQ PUSH2 0x19EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x19FD DUP2 PUSH2 0x19D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A18 JUMPI PUSH2 0x1A17 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A25 DUP5 DUP3 DUP6 ADD PUSH2 0x19EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A3C DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A58 JUMPI PUSH2 0x1A57 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A65 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A76 DUP6 DUP3 DUP7 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x45544820616D6F756E74206D69736D6174636800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB4 PUSH1 0x13 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABF DUP3 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AE1 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1B00 PUSH0 DUP4 PUSH2 0x1AE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0B DUP3 PUSH2 0x1AF2 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B1F DUP3 PUSH2 0x1AF5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5D PUSH1 0x13 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B68 DUP3 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B8A DUP2 PUSH2 0x1B51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA6 JUMPI PUSH2 0x1BA5 PUSH2 0x1461 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BB3 DUP5 DUP3 DUP6 ADD PUSH2 0x1A2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73616374696F6E20616D6F756E742065786365656473206C696D6974 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF0 PUSH1 0x20 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFB DUP3 PUSH2 0x1BBC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C1D DUP2 PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C5B DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP PUSH2 0x1C66 DUP4 PUSH2 0x14BF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C76 JUMPI PUSH2 0x1C75 PUSH2 0x1C24 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4461696C79207472616E73616374696F6E206C696D6974206578636565646564 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CB5 PUSH1 0x20 DUP4 PUSH2 0x13DB JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC0 DUP3 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CE2 DUP2 PUSH2 0x1CA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF3 DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1D25 JUMPI PUSH2 0x1D24 PUSH2 0x181B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3A DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP PUSH2 0x1D45 DUP4 PUSH2 0x14BF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D53 DUP2 PUSH2 0x14BF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D6A JUMPI PUSH2 0x1D69 PUSH2 0x181B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D84 PUSH0 DUP4 ADD DUP7 PUSH2 0x160F JUMP JUMPDEST PUSH2 0x1D91 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1563 JUMP JUMPDEST PUSH2 0x1D9E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1563 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETF RJUMP 0xF307 PUSH8 0xBC3FD53532E36D1F STATICCALL 0xB9 SWAP10 0xCE GAS 0xC2 RJUMPI 0xE03 REVERT MULMOD PUSH3 0x394629 0xC7 SHL EXP 0x4F PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "510:5882:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2515:1178:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1141:28:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2933:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;668:28:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5489:582:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4745:712;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1785:722;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;802:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;736:26:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;2515:1178:0:-;2647:4;2696:24;2723:29;2733:6;2741:10;2723:9;:29::i;:::-;2696:56;;2805:6;2785:16;:26;;2763:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;2923:39;2947:6;2955;2923:23;:39::i;:::-;2998:17;3018:21;3032:6;3018:13;:21::i;:::-;2998:41;;3111:19;3142:9;3133:6;:18;;;;:::i;:::-;3111:40;;3205:11;3184:17;3194:6;3184:9;:17::i;:::-;:32;;3162:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;3402:36;3412:6;3420:9;3431:6;3402:9;:36::i;:::-;3495:41;3505:6;3513:11;;;;;;;;;;;3526:9;3495;:41::i;:::-;3606:55;3615:6;3623:10;3654:6;3635:16;:25;;;;:::i;:::-;3606:8;:55::i;:::-;3681:4;3674:11;;;;;2515:1178;;;;;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;1141:28:0:-;;;;;;;;;;;;;:::o;2933:116:2:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;668:28:0:-;;;;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;5489:582:0:-;5573:15;5590;5651:1;5626:27;;:13;;;;;;;;;;;:27;;;5618:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;5794:13;;;;;;;;;;;5787:34;;;5836:10;5861:13;;;;;;;;;;;5889:15;5787:128;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6032:13;;;;;;;;;;;6017:34;;;6052:10;6017:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5996:67;;;;;;;;5489:582;;;:::o;4745:712::-;4893:1;4868:27;;:13;;;;;;;;;;;:27;;;4860:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4954:9;4941;:22;4933:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5109:49;5119:10;5131:13;;;;;;;;;;;5146:11;5109:9;:49::i;:::-;5214:12;5232:13;;;;;;;;;;;:18;;5258:9;5232:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5213:59;;;5291:7;5283:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;5418:13;;;;;;;;;;;5403:34;;;5438:10;5403:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4849:608;4745:712;;:::o;1785:722::-;1888:4;1905:14;1922:10;1905:27;;1974:39;1998:6;2006;1974:23;:39::i;:::-;2049:17;2069:21;2083:6;2069:13;:21::i;:::-;2049:41;;2126:19;2157:9;2148:6;:18;;;;:::i;:::-;2126:40;;2220:11;2199:17;2209:6;2199:9;:17::i;:::-;:32;;2177:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;2347:33;2362:9;2373:6;2347:14;:33::i;:::-;;2437:38;2452:11;;;;;;;;;;;2465:9;2437:14;:38::i;:::-;;2495:4;2488:11;;;;;1785:722;;;;:::o;802:35::-;;;;:::o;3455:140:2:-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;736:26:0:-;;;;;;;;;;;;;:::o;877:41::-;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8630:128:2:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;3875:838:0:-;4035:20;;4025:6;:30;;4003:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;4128:18;4167:6;4149:15;:24;;;;:::i;:::-;4128:45;;4184:15;4202:18;:26;4221:6;4202:26;;;;;;;;;;;;;;;;4184:44;;4256:7;4243:10;:20;4239:181;;;4353:1;4321:21;:29;4343:6;4321:29;;;;;;;;;;;;;;;:33;;;;4398:10;4369:18;:26;4388:6;4369:26;;;;;;;;;;;;;;;:39;;;;4239:181;4538:26;;4506:21;:29;4528:6;4506:29;;;;;;;;;;;;;;;;:58;4484:140;;;;;;;;;;;;:::i;:::-;;;;;;;;;4674:21;:29;4696:6;4674:29;;;;;;;;;;;;;;;;:31;;;;;;;;;:::i;:::-;;;;;;3949:764;;3875:838;;:::o;3701:139::-;3763:7;3811:5;3800:7;;3791:6;:16;;;;:::i;:::-;3790:26;;;;:::i;:::-;3783:33;;3701:139;;;:::o;5297:300:2:-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:118::-;4833:24;4851:5;4833:24;:::i;:::-;4828:3;4821:37;4746:118;;:::o;4870:222::-;4963:4;5001:2;4990:9;4986:18;4978:26;;5014:71;5082:1;5071:9;5067:17;5058:6;5014:71;:::i;:::-;4870:222;;;;:::o;5098:329::-;5157:6;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5098:329;;;;:::o;5433:::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:332::-;5889:4;5927:2;5916:9;5912:18;5904:26;;5940:71;6008:1;5997:9;5993:17;5984:6;5940:71;:::i;:::-;6021:72;6089:2;6078:9;6074:18;6065:6;6021:72;:::i;:::-;5768:332;;;;;:::o;6106:474::-;6174:6;6182;6231:2;6219:9;6210:7;6206:23;6202:32;6199:119;;;6237:79;;:::i;:::-;6199:119;6357:1;6382:53;6427:7;6418:6;6407:9;6403:22;6382:53;:::i;:::-;6372:63;;6328:117;6484:2;6510:53;6555:7;6546:6;6535:9;6531:22;6510:53;:::i;:::-;6500:63;;6455:118;6106:474;;;;;:::o;6586:::-;6654:6;6662;6711:2;6699:9;6690:7;6686:23;6682:32;6679:119;;;6717:79;;:::i;:::-;6679:119;6837:1;6862:53;6907:7;6898:6;6887:9;6883:22;6862:53;:::i;:::-;6852:63;;6808:117;6964:2;6990:53;7035:7;7026:6;7015:9;7011:22;6990:53;:::i;:::-;6980:63;;6935:118;6586:474;;;;;:::o;7066:180::-;7114:77;7111:1;7104:88;7211:4;7208:1;7201:15;7235:4;7232:1;7225:15;7252:320;7296:6;7333:1;7327:4;7323:12;7313:22;;7380:1;7374:4;7370:12;7401:18;7391:81;;7457:4;7449:6;7445:17;7435:27;;7391:81;7519:2;7511:6;7508:14;7488:18;7485:38;7482:84;;7538:18;;:::i;:::-;7482:84;7303:269;7252:320;;;:::o;7578:227::-;7718:34;7714:1;7706:6;7702:14;7695:58;7787:10;7782:2;7774:6;7770:15;7763:35;7578:227;:::o;7811:366::-;7953:3;7974:67;8038:2;8033:3;7974:67;:::i;:::-;7967:74;;8050:93;8139:3;8050:93;:::i;:::-;8168:2;8163:3;8159:12;8152:19;;7811:366;;;:::o;8183:419::-;8349:4;8387:2;8376:9;8372:18;8364:26;;8436:9;8430:4;8426:20;8422:1;8411:9;8407:17;8400:47;8464:131;8590:4;8464:131;:::i;:::-;8456:139;;8183:419;;;:::o;8608:180::-;8656:77;8653:1;8646:88;8753:4;8750:1;8743:15;8777:4;8774:1;8767:15;8794:191;8834:3;8853:20;8871:1;8853:20;:::i;:::-;8848:25;;8887:20;8905:1;8887:20;:::i;:::-;8882:25;;8930:1;8927;8923:9;8916:16;;8951:3;8948:1;8945:10;8942:36;;;8958:18;;:::i;:::-;8942:36;8794:191;;;;:::o;8991:221::-;9131:34;9127:1;9119:6;9115:14;9108:58;9200:4;9195:2;9187:6;9183:15;9176:29;8991:221;:::o;9218:366::-;9360:3;9381:67;9445:2;9440:3;9381:67;:::i;:::-;9374:74;;9457:93;9546:3;9457:93;:::i;:::-;9575:2;9570:3;9566:12;9559:19;;9218:366;;;:::o;9590:419::-;9756:4;9794:2;9783:9;9779:18;9771:26;;9843:9;9837:4;9833:20;9829:1;9818:9;9814:17;9807:47;9871:131;9997:4;9871:131;:::i;:::-;9863:139;;9590:419;;;:::o;10015:194::-;10055:4;10075:20;10093:1;10075:20;:::i;:::-;10070:25;;10109:20;10127:1;10109:20;:::i;:::-;10104:25;;10153:1;10150;10146:9;10138:17;;10177:1;10171:4;10168:11;10165:37;;;10182:18;;:::i;:::-;10165:37;10015:194;;;;:::o;10215:172::-;10355:24;10351:1;10343:6;10339:14;10332:48;10215:172;:::o;10393:366::-;10535:3;10556:67;10620:2;10615:3;10556:67;:::i;:::-;10549:74;;10632:93;10721:3;10632:93;:::i;:::-;10750:2;10745:3;10741:12;10734:19;;10393:366;;;:::o;10765:419::-;10931:4;10969:2;10958:9;10954:18;10946:26;;11018:9;11012:4;11008:20;11004:1;10993:9;10989:17;10982:47;11046:131;11172:4;11046:131;:::i;:::-;11038:139;;10765:419;;;:::o;11190:442::-;11339:4;11377:2;11366:9;11362:18;11354:26;;11390:71;11458:1;11447:9;11443:17;11434:6;11390:71;:::i;:::-;11471:72;11539:2;11528:9;11524:18;11515:6;11471:72;:::i;:::-;11553;11621:2;11610:9;11606:18;11597:6;11553:72;:::i;:::-;11190:442;;;;;;:::o;11638:116::-;11708:21;11723:5;11708:21;:::i;:::-;11701:5;11698:32;11688:60;;11744:1;11741;11734:12;11688:60;11638:116;:::o;11760:137::-;11814:5;11845:6;11839:13;11830:22;;11861:30;11885:5;11861:30;:::i;:::-;11760:137;;;;:::o;11903:345::-;11970:6;12019:2;12007:9;11998:7;11994:23;11990:32;11987:119;;;12025:79;;:::i;:::-;11987:119;12145:1;12170:61;12223:7;12214:6;12203:9;12199:22;12170:61;:::i;:::-;12160:71;;12116:125;11903:345;;;;:::o;12254:143::-;12311:5;12342:6;12336:13;12327:22;;12358:33;12385:5;12358:33;:::i;:::-;12254:143;;;;:::o;12403:507::-;12482:6;12490;12539:2;12527:9;12518:7;12514:23;12510:32;12507:119;;;12545:79;;:::i;:::-;12507:119;12665:1;12690:64;12746:7;12737:6;12726:9;12722:22;12690:64;:::i;:::-;12680:74;;12636:128;12803:2;12829:64;12885:7;12876:6;12865:9;12861:22;12829:64;:::i;:::-;12819:74;;12774:129;12403:507;;;;;:::o;12916:169::-;13056:21;13052:1;13044:6;13040:14;13033:45;12916:169;:::o;13091:366::-;13233:3;13254:67;13318:2;13313:3;13254:67;:::i;:::-;13247:74;;13330:93;13419:3;13330:93;:::i;:::-;13448:2;13443:3;13439:12;13432:19;;13091:366;;;:::o;13463:419::-;13629:4;13667:2;13656:9;13652:18;13644:26;;13716:9;13710:4;13706:20;13702:1;13691:9;13687:17;13680:47;13744:131;13870:4;13744:131;:::i;:::-;13736:139;;13463:419;;;:::o;13888:147::-;13989:11;14026:3;14011:18;;13888:147;;;;:::o;14041:114::-;;:::o;14161:398::-;14320:3;14341:83;14422:1;14417:3;14341:83;:::i;:::-;14334:90;;14433:93;14522:3;14433:93;:::i;:::-;14551:1;14546:3;14542:11;14535:18;;14161:398;;;:::o;14565:379::-;14749:3;14771:147;14914:3;14771:147;:::i;:::-;14764:154;;14935:3;14928:10;;14565:379;;;:::o;14950:169::-;15090:21;15086:1;15078:6;15074:14;15067:45;14950:169;:::o;15125:366::-;15267:3;15288:67;15352:2;15347:3;15288:67;:::i;:::-;15281:74;;15364:93;15453:3;15364:93;:::i;:::-;15482:2;15477:3;15473:12;15466:19;;15125:366;;;:::o;15497:419::-;15663:4;15701:2;15690:9;15686:18;15678:26;;15750:9;15744:4;15740:20;15736:1;15725:9;15721:17;15714:47;15778:131;15904:4;15778:131;:::i;:::-;15770:139;;15497:419;;;:::o;15922:351::-;15992:6;16041:2;16029:9;16020:7;16016:23;16012:32;16009:119;;;16047:79;;:::i;:::-;16009:119;16167:1;16192:64;16248:7;16239:6;16228:9;16224:22;16192:64;:::i;:::-;16182:74;;16138:128;15922:351;;;;:::o;16279:182::-;16419:34;16415:1;16407:6;16403:14;16396:58;16279:182;:::o;16467:366::-;16609:3;16630:67;16694:2;16689:3;16630:67;:::i;:::-;16623:74;;16706:93;16795:3;16706:93;:::i;:::-;16824:2;16819:3;16815:12;16808:19;;16467:366;;;:::o;16839:419::-;17005:4;17043:2;17032:9;17028:18;17020:26;;17092:9;17086:4;17082:20;17078:1;17067:9;17063:17;17056:47;17120:131;17246:4;17120:131;:::i;:::-;17112:139;;16839:419;;;:::o;17264:180::-;17312:77;17309:1;17302:88;17409:4;17406:1;17399:15;17433:4;17430:1;17423:15;17450:185;17490:1;17507:20;17525:1;17507:20;:::i;:::-;17502:25;;17541:20;17559:1;17541:20;:::i;:::-;17536:25;;17580:1;17570:35;;17585:18;;:::i;:::-;17570:35;17627:1;17624;17620:9;17615:14;;17450:185;;;;:::o;17641:182::-;17781:34;17777:1;17769:6;17765:14;17758:58;17641:182;:::o;17829:366::-;17971:3;17992:67;18056:2;18051:3;17992:67;:::i;:::-;17985:74;;18068:93;18157:3;18068:93;:::i;:::-;18186:2;18181:3;18177:12;18170:19;;17829:366;;;:::o;18201:419::-;18367:4;18405:2;18394:9;18390:18;18382:26;;18454:9;18448:4;18444:20;18440:1;18429:9;18425:17;18418:47;18482:131;18608:4;18482:131;:::i;:::-;18474:139;;18201:419;;;:::o;18626:233::-;18665:3;18688:24;18706:5;18688:24;:::i;:::-;18679:33;;18734:66;18727:5;18724:77;18721:103;;18804:18;;:::i;:::-;18721:103;18851:1;18844:5;18840:13;18833:20;;18626:233;;;:::o;18865:410::-;18905:7;18928:20;18946:1;18928:20;:::i;:::-;18923:25;;18962:20;18980:1;18962:20;:::i;:::-;18957:25;;19017:1;19014;19010:9;19039:30;19057:11;19039:30;:::i;:::-;19028:41;;19218:1;19209:7;19205:15;19202:1;19199:22;19179:1;19172:9;19152:83;19129:139;;19248:18;;:::i;:::-;19129:139;18913:362;18865:410;;;;:::o;19281:442::-;19430:4;19468:2;19457:9;19453:18;19445:26;;19481:71;19549:1;19538:9;19534:17;19525:6;19481:71;:::i;:::-;19562:72;19630:2;19619:9;19615:18;19606:6;19562:72;:::i;:::-;19644;19712:2;19701:9;19697:18;19688:6;19644:72;:::i;:::-;19281:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1528800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2895",
								"dailyTransactionCountLimit()": "2513",
								"decimals()": "361",
								"liquidityPool()": "2553",
								"maxTransactionAmount()": "2447",
								"name()": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"symbol()": "infinite",
								"taxRate()": "2514",
								"taxReceiver()": "2574",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_calculateTax(uint256)": "infinite",
								"_checkTransactionLimits(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 510,
									"end": 6392,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 693,
									"end": 696,
									"name": "PUSH",
									"source": 0,
									"value": "C8"
								},
								{
									"begin": 668,
									"end": 696,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 668,
									"end": 696,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1178,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1446,
									"end": 1450,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1452,
									"end": 1458,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1471,
									"end": 1504,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1477,
									"end": 1487,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1503,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1471,
									"end": 1476,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1471,
									"end": 1476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1471,
									"end": 1476,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1471,
									"end": 1504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1471,
									"end": 1504,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1471,
									"end": 1504,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1471,
									"end": 1504,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1504,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1538,
									"end": 1559,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1535,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1515,
									"end": 1559,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1559,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1559,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1559,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1599,
									"end": 1626,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1596,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1570,
									"end": 1626,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1626,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1626,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1570,
									"end": 1626,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1663,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1648,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1637,
									"end": 1648,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1637,
									"end": 1663,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1690,
									"end": 1704,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1687,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1674,
									"end": 1687,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1674,
									"end": 1704,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1178,
									"end": 1712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2967,
									"end": 2974,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3007,
									"end": 3049,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3000,
									"end": 3005,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3050,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2985,
									"end": 3050,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2985,
									"end": 3050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2930,
									"end": 3056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3099,
									"end": 3106,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 3146,
									"end": 3151,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3128,
									"end": 3152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 3128,
									"end": 3152,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3117,
									"end": 3152,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3117,
									"end": 3152,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3062,
									"end": 3158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3062,
									"end": 3158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3255,
									"end": 3260,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3237,
									"end": 3261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3235,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3262,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3164,
									"end": 3286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3349,
									"end": 3354,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3386,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3387,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 3423,
									"end": 3428,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3396,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3292,
									"end": 3435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3585,
									"end": 3591,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3593,
									"end": 3599,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3601,
									"end": 3607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3609,
									"end": 3615,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3623,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3625,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3633,
									"end": 3639,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3682,
									"end": 3685,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 3670,
									"end": 3679,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3661,
									"end": 3668,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 3657,
									"end": 3680,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3653,
									"end": 3686,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 3650,
									"end": 3770,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3650,
									"end": 3770,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3650,
									"end": 3770,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3689,
									"end": 3768,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3689,
									"end": 3768,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3689,
									"end": 3768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3689,
									"end": 3768,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3689,
									"end": 3768,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3650,
									"end": 3770,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3650,
									"end": 3770,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3830,
									"end": 3831,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3819,
									"end": 3828,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3815,
									"end": 3832,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3809,
									"end": 3833,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3860,
									"end": 3878,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3852,
									"end": 3858,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3849,
									"end": 3879,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3846,
									"end": 3963,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3846,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3846,
									"end": 3963,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3882,
									"end": 3961,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 3882,
									"end": 3961,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3882,
									"end": 3961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3882,
									"end": 3961,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 3882,
									"end": 3961,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3846,
									"end": 3963,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3846,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 4061,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 4053,
									"end": 4060,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4033,
									"end": 4042,
									"name": "DUP12",
									"source": 6
								},
								{
									"begin": 4029,
									"end": 4051,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 4061,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3987,
									"end": 4061,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3987,
									"end": 4061,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3987,
									"end": 4061,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3977,
									"end": 4061,
									"name": "SWAP8",
									"source": 6
								},
								{
									"begin": 3977,
									"end": 4061,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3780,
									"end": 4071,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4131,
									"end": 4133,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4120,
									"end": 4129,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4116,
									"end": 4134,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4110,
									"end": 4135,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4154,
									"end": 4160,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4151,
									"end": 4181,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4148,
									"end": 4265,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4148,
									"end": 4265,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 4148,
									"end": 4265,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4184,
									"end": 4263,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4184,
									"end": 4263,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4184,
									"end": 4263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4184,
									"end": 4263,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4184,
									"end": 4263,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4148,
									"end": 4265,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 4148,
									"end": 4265,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4289,
									"end": 4363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4355,
									"end": 4362,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 4346,
									"end": 4352,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 4344,
									"name": "DUP12",
									"source": 6
								},
								{
									"begin": 4331,
									"end": 4353,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4289,
									"end": 4363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 4289,
									"end": 4363,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4289,
									"end": 4363,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4289,
									"end": 4363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4279,
									"end": 4363,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 4279,
									"end": 4363,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4081,
									"end": 4373,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4412,
									"end": 4414,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4438,
									"end": 4502,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4494,
									"end": 4501,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 4485,
									"end": 4491,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4474,
									"end": 4483,
									"name": "DUP12",
									"source": 6
								},
								{
									"begin": 4470,
									"end": 4492,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4438,
									"end": 4502,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 4438,
									"end": 4502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4438,
									"end": 4502,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4438,
									"end": 4502,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4428,
									"end": 4502,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 4428,
									"end": 4502,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4383,
									"end": 4512,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4551,
									"end": 4553,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4577,
									"end": 4641,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 4633,
									"end": 4640,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 4624,
									"end": 4630,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4613,
									"end": 4622,
									"name": "DUP12",
									"source": 6
								},
								{
									"begin": 4609,
									"end": 4631,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4577,
									"end": 4641,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 4577,
									"end": 4641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4577,
									"end": 4641,
									"name": "tag",
									"source": 6,
									"value": "127"
								},
								{
									"begin": 4577,
									"end": 4641,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4567,
									"end": 4641,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 4567,
									"end": 4641,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4522,
									"end": 4651,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4690,
									"end": 4693,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4717,
									"end": 4781,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 4773,
									"end": 4780,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 4764,
									"end": 4770,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4753,
									"end": 4762,
									"name": "DUP12",
									"source": 6
								},
								{
									"begin": 4749,
									"end": 4771,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4717,
									"end": 4781,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 4717,
									"end": 4781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4717,
									"end": 4781,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 4717,
									"end": 4781,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4707,
									"end": 4781,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4707,
									"end": 4781,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4661,
									"end": 4791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4830,
									"end": 4833,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 4857,
									"end": 4921,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 4913,
									"end": 4920,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 4904,
									"end": 4910,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4893,
									"end": 4902,
									"name": "DUP12",
									"source": 6
								},
								{
									"begin": 4889,
									"end": 4911,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4857,
									"end": 4921,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4857,
									"end": 4921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4857,
									"end": 4921,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 4857,
									"end": 4921,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4847,
									"end": 4921,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4847,
									"end": 4921,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4801,
									"end": 4931,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4970,
									"end": 4973,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 4997,
									"end": 5061,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 5053,
									"end": 5060,
									"name": "DUP11",
									"source": 6
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5033,
									"end": 5042,
									"name": "DUP12",
									"source": 6
								},
								{
									"begin": 5029,
									"end": 5051,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4997,
									"end": 5061,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 4997,
									"end": 5061,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4997,
									"end": 5061,
									"name": "tag",
									"source": 6,
									"value": "130"
								},
								{
									"begin": 4997,
									"end": 5061,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4987,
									"end": 5061,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4987,
									"end": 5061,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4941,
									"end": 5071,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "SWAP9",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "SWAP8",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3441,
									"end": 5078,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5183,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5084,
									"end": 5183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5136,
									"end": 5142,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5170,
									"end": 5175,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5164,
									"end": 5176,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5154,
									"end": 5176,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5154,
									"end": 5176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5183,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5183,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5183,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5183,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5189,
									"end": 5369,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5189,
									"end": 5369,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5237,
									"end": 5314,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5234,
									"end": 5235,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5227,
									"end": 5315,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5334,
									"end": 5338,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 5324,
									"end": 5339,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5358,
									"end": 5362,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5355,
									"end": 5356,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5348,
									"end": 5363,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5695,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5375,
									"end": 5695,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5419,
									"end": 5425,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5456,
									"end": 5457,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5450,
									"end": 5454,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5446,
									"end": 5458,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5436,
									"end": 5458,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5436,
									"end": 5458,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5503,
									"end": 5504,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5497,
									"end": 5501,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5493,
									"end": 5505,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5524,
									"end": 5542,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5514,
									"end": 5595,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 5514,
									"end": 5595,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5580,
									"end": 5584,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 5572,
									"end": 5578,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5568,
									"end": 5585,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5558,
									"end": 5585,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5558,
									"end": 5585,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5514,
									"end": 5595,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 5514,
									"end": 5595,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5642,
									"end": 5644,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5634,
									"end": 5640,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5631,
									"end": 5645,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5611,
									"end": 5629,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5608,
									"end": 5646,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 5605,
									"end": 5689,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5605,
									"end": 5689,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5661,
									"end": 5679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5605,
									"end": 5689,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5605,
									"end": 5689,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5426,
									"end": 5695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5695,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5695,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5695,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5695,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5701,
									"end": 5842,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 5701,
									"end": 5842,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5750,
									"end": 5754,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5773,
									"end": 5776,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5765,
									"end": 5776,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5765,
									"end": 5776,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5796,
									"end": 5799,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5793,
									"end": 5794,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5786,
									"end": 5800,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5830,
									"end": 5834,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5827,
									"end": 5828,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5817,
									"end": 5835,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 5809,
									"end": 5835,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5809,
									"end": 5835,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5701,
									"end": 5842,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5701,
									"end": 5842,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5701,
									"end": 5842,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5701,
									"end": 5842,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5848,
									"end": 5941,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 5848,
									"end": 5941,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5885,
									"end": 5891,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5932,
									"end": 5934,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5927,
									"end": 5929,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5920,
									"end": 5925,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5916,
									"end": 5930,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 5935,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 5902,
									"end": 5935,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5902,
									"end": 5935,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5848,
									"end": 5941,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5848,
									"end": 5941,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5848,
									"end": 5941,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5848,
									"end": 5941,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5947,
									"end": 6054,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5947,
									"end": 6054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5991,
									"end": 5999,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6041,
									"end": 6046,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6035,
									"end": 6039,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6031,
									"end": 6047,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 6010,
									"end": 6047,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6010,
									"end": 6047,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5947,
									"end": 6054,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5947,
									"end": 6054,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5947,
									"end": 6054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5947,
									"end": 6054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5947,
									"end": 6054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6060,
									"end": 6453,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 6060,
									"end": 6453,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6129,
									"end": 6135,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6179,
									"end": 6180,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 6167,
									"end": 6177,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6163,
									"end": 6181,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6202,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 6232,
									"end": 6298,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6221,
									"end": 6230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6202,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 6202,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6202,
									"end": 6299,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 6202,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6320,
									"end": 6359,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 6350,
									"end": 6358,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6339,
									"end": 6348,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6320,
									"end": 6359,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 6320,
									"end": 6359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6320,
									"end": 6359,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 6320,
									"end": 6359,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6308,
									"end": 6359,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 6308,
									"end": 6359,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6388,
									"end": 6397,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6381,
									"end": 6386,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6377,
									"end": 6398,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6368,
									"end": 6398,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 6368,
									"end": 6398,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6441,
									"end": 6445,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6431,
									"end": 6439,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6427,
									"end": 6446,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6420,
									"end": 6425,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6417,
									"end": 6447,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 6407,
									"end": 6447,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6407,
									"end": 6447,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6136,
									"end": 6453,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6136,
									"end": 6453,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6060,
									"end": 6453,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 6060,
									"end": 6453,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6060,
									"end": 6453,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6060,
									"end": 6453,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6060,
									"end": 6453,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6060,
									"end": 6453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6459,
									"end": 6519,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 6459,
									"end": 6519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6487,
									"end": 6490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6508,
									"end": 6513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6501,
									"end": 6513,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6501,
									"end": 6513,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6459,
									"end": 6519,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6459,
									"end": 6519,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6459,
									"end": 6519,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6459,
									"end": 6519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6525,
									"end": 6667,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6525,
									"end": 6667,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6575,
									"end": 6584,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6608,
									"end": 6661,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 6626,
									"end": 6660,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 6635,
									"end": 6659,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 6653,
									"end": 6658,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6635,
									"end": 6659,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6635,
									"end": 6659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6635,
									"end": 6659,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 6635,
									"end": 6659,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6626,
									"end": 6660,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 6626,
									"end": 6660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6626,
									"end": 6660,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 6626,
									"end": 6660,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6608,
									"end": 6661,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6608,
									"end": 6661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6608,
									"end": 6661,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 6608,
									"end": 6661,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6661,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6595,
									"end": 6661,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6525,
									"end": 6667,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6525,
									"end": 6667,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6525,
									"end": 6667,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6525,
									"end": 6667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6748,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 6673,
									"end": 6748,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6737,
									"end": 6742,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6730,
									"end": 6742,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6730,
									"end": 6742,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6748,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6748,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6748,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6673,
									"end": 6748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6754,
									"end": 7023,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 6754,
									"end": 7023,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6864,
									"end": 6903,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6895,
									"end": 6902,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6864,
									"end": 6903,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6864,
									"end": 6903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6864,
									"end": 6903,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6864,
									"end": 6903,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 7016,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 6974,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6998,
									"end": 7014,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6974,
									"end": 7015,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 6974,
									"end": 7015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6974,
									"end": 7015,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6974,
									"end": 7015,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6966,
									"end": 6972,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6959,
									"end": 6963,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6953,
									"end": 6964,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 7016,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 6925,
									"end": 7016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6925,
									"end": 7016,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 6925,
									"end": 7016,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6919,
									"end": 6923,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6912,
									"end": 7017,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6830,
									"end": 7023,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6754,
									"end": 7023,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6754,
									"end": 7023,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6754,
									"end": 7023,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6754,
									"end": 7023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7029,
									"end": 7102,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 7029,
									"end": 7102,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7074,
									"end": 7077,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7095,
									"end": 7096,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7088,
									"end": 7096,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7088,
									"end": 7096,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7029,
									"end": 7102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7029,
									"end": 7102,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7108,
									"end": 7297,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 7108,
									"end": 7297,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7217,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 7185,
									"end": 7217,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 7185,
									"end": 7217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7185,
									"end": 7217,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 7185,
									"end": 7217,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7226,
									"end": 7291,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7284,
									"end": 7290,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7276,
									"end": 7282,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7270,
									"end": 7274,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7226,
									"end": 7291,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 7226,
									"end": 7291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7226,
									"end": 7291,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7226,
									"end": 7291,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7161,
									"end": 7297,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7108,
									"end": 7297,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7108,
									"end": 7297,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7108,
									"end": 7297,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7303,
									"end": 7489,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 7303,
									"end": 7489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7363,
									"end": 7483,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7363,
									"end": 7483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7380,
									"end": 7383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7373,
									"end": 7378,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7370,
									"end": 7384,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7363,
									"end": 7483,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7363,
									"end": 7483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7363,
									"end": 7483,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7434,
									"end": 7473,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7471,
									"end": 7472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7464,
									"end": 7469,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7434,
									"end": 7473,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 7434,
									"end": 7473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7434,
									"end": 7473,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 7434,
									"end": 7473,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7407,
									"end": 7408,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7400,
									"end": 7405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7396,
									"end": 7409,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7387,
									"end": 7409,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7387,
									"end": 7409,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7363,
									"end": 7483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7363,
									"end": 7483,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7363,
									"end": 7483,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7363,
									"end": 7483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7303,
									"end": 7489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7303,
									"end": 7489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7303,
									"end": 7489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7495,
									"end": 8038,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 7495,
									"end": 8038,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7596,
									"end": 7598,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7591,
									"end": 7594,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7588,
									"end": 7599,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7585,
									"end": 8031,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7585,
									"end": 8031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7585,
									"end": 8031,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7630,
									"end": 7668,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7662,
									"end": 7667,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7630,
									"end": 7668,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 7630,
									"end": 7668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7630,
									"end": 7668,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7630,
									"end": 7668,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7714,
									"end": 7743,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7732,
									"end": 7742,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7714,
									"end": 7743,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 7714,
									"end": 7743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7714,
									"end": 7743,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7714,
									"end": 7743,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7704,
									"end": 7712,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7700,
									"end": 7744,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7897,
									"end": 7899,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7885,
									"end": 7895,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7882,
									"end": 7900,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 7879,
									"end": 7928,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7879,
									"end": 7928,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7879,
									"end": 7928,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7918,
									"end": 7926,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7903,
									"end": 7926,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7903,
									"end": 7926,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7879,
									"end": 7928,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7879,
									"end": 7928,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7941,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 7997,
									"end": 8019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 8015,
									"end": 8018,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7997,
									"end": 8019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 7997,
									"end": 8019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7997,
									"end": 8019,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7997,
									"end": 8019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7987,
									"end": 7995,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7983,
									"end": 8020,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7970,
									"end": 7981,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7941,
									"end": 8021,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 7941,
									"end": 8021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7941,
									"end": 8021,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 7941,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7600,
									"end": 8031,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7600,
									"end": 8031,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7585,
									"end": 8031,
									"name": "tag",
									"source": 6,
									"value": "163"
								},
								{
									"begin": 7585,
									"end": 8031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7495,
									"end": 8038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7495,
									"end": 8038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7495,
									"end": 8038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7495,
									"end": 8038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8044,
									"end": 8161,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 8044,
									"end": 8161,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8098,
									"end": 8106,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8148,
									"end": 8153,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8142,
									"end": 8146,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8138,
									"end": 8154,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 8117,
									"end": 8154,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8117,
									"end": 8154,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8044,
									"end": 8161,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8044,
									"end": 8161,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8044,
									"end": 8161,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8044,
									"end": 8161,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8044,
									"end": 8161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8167,
									"end": 8336,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 8167,
									"end": 8336,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8211,
									"end": 8217,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8244,
									"end": 8295,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8292,
									"end": 8293,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8288,
									"end": 8294,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8280,
									"end": 8285,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8277,
									"end": 8278,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 8273,
									"end": 8286,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8244,
									"end": 8295,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 8244,
									"end": 8295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8244,
									"end": 8295,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8244,
									"end": 8295,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8240,
									"end": 8296,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 8325,
									"end": 8329,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 8319,
									"end": 8323,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8315,
									"end": 8330,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8330,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8305,
									"end": 8330,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8218,
									"end": 8336,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8167,
									"end": 8336,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8167,
									"end": 8336,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8167,
									"end": 8336,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8167,
									"end": 8336,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8167,
									"end": 8336,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8341,
									"end": 8636,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 8341,
									"end": 8636,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8417,
									"end": 8421,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8563,
									"end": 8592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8588,
									"end": 8591,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8582,
									"end": 8586,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8563,
									"end": 8592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 8563,
									"end": 8592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8563,
									"end": 8592,
									"name": "tag",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8563,
									"end": 8592,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8555,
									"end": 8592,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8555,
									"end": 8592,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8625,
									"end": 8628,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8622,
									"end": 8623,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 8618,
									"end": 8629,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 8612,
									"end": 8616,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8609,
									"end": 8630,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 8601,
									"end": 8630,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8601,
									"end": 8630,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8341,
									"end": 8636,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8341,
									"end": 8636,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8341,
									"end": 8636,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8341,
									"end": 8636,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8341,
									"end": 8636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8641,
									"end": 10036,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 8641,
									"end": 10036,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8758,
									"end": 8795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8791,
									"end": 8794,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8758,
									"end": 8795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 8758,
									"end": 8795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8758,
									"end": 8795,
									"name": "tag",
									"source": 6,
									"value": "175"
								},
								{
									"begin": 8758,
									"end": 8795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8860,
									"end": 8878,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8852,
									"end": 8858,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8849,
									"end": 8879,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 8846,
									"end": 8902,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8846,
									"end": 8902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 8846,
									"end": 8902,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8882,
									"end": 8900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8882,
									"end": 8900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 8882,
									"end": 8900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8882,
									"end": 8900,
									"name": "tag",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 8882,
									"end": 8900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8846,
									"end": 8902,
									"name": "tag",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 8846,
									"end": 8902,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8926,
									"end": 8964,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 8958,
									"end": 8962,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8952,
									"end": 8963,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 8926,
									"end": 8964,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 8926,
									"end": 8964,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8926,
									"end": 8964,
									"name": "tag",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 8926,
									"end": 8964,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9011,
									"end": 9078,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 9071,
									"end": 9077,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9063,
									"end": 9069,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9057,
									"end": 9061,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9011,
									"end": 9078,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 9011,
									"end": 9078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9011,
									"end": 9078,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 9011,
									"end": 9078,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9105,
									"end": 9106,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9129,
									"end": 9133,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9116,
									"end": 9133,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9116,
									"end": 9133,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9161,
									"end": 9163,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9153,
									"end": 9159,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9150,
									"end": 9164,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9178,
									"end": 9179,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9173,
									"end": 9791,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9173,
									"end": 9791,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 9173,
									"end": 9791,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9173,
									"end": 9791,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9835,
									"end": 9836,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9852,
									"end": 9858,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9849,
									"end": 9926,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9849,
									"end": 9926,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9849,
									"end": 9926,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9901,
									"end": 9910,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9896,
									"end": 9899,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 9892,
									"end": 9911,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9886,
									"end": 9912,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9877,
									"end": 9912,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9877,
									"end": 9912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9849,
									"end": 9926,
									"name": "tag",
									"source": 6,
									"value": "182"
								},
								{
									"begin": 9849,
									"end": 9926,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9952,
									"end": 10019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 10012,
									"end": 10018,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 10005,
									"end": 10010,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9952,
									"end": 10019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 9952,
									"end": 10019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9952,
									"end": 10019,
									"name": "tag",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9952,
									"end": 10019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9946,
									"end": 9950,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9939,
									"end": 10020,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9808,
									"end": 10030,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9143,
									"end": 10030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 9143,
									"end": 10030,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9173,
									"end": 9791,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9173,
									"end": 9791,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9225,
									"end": 9229,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9221,
									"end": 9230,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 9213,
									"end": 9219,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9209,
									"end": 9231,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9259,
									"end": 9296,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 9291,
									"end": 9295,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9259,
									"end": 9296,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 9259,
									"end": 9296,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9259,
									"end": 9296,
									"name": "tag",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 9259,
									"end": 9296,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9318,
									"end": 9319,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9332,
									"end": 9540,
									"name": "tag",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9332,
									"end": 9540,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9346,
									"end": 9353,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9343,
									"end": 9344,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9340,
									"end": 9354,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 9332,
									"end": 9540,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9332,
									"end": 9540,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9332,
									"end": 9540,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9425,
									"end": 9434,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9420,
									"end": 9423,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9416,
									"end": 9435,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9410,
									"end": 9436,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9402,
									"end": 9408,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9395,
									"end": 9437,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9476,
									"end": 9477,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9468,
									"end": 9474,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9464,
									"end": 9478,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9454,
									"end": 9478,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9454,
									"end": 9478,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9523,
									"end": 9525,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9512,
									"end": 9521,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9508,
									"end": 9526,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9495,
									"end": 9526,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9495,
									"end": 9526,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9369,
									"end": 9373,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9366,
									"end": 9367,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9362,
									"end": 9374,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9357,
									"end": 9374,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9357,
									"end": 9374,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9332,
									"end": 9540,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9332,
									"end": 9540,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9332,
									"end": 9540,
									"name": "tag",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 9332,
									"end": 9540,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9568,
									"end": 9574,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9559,
									"end": 9566,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9556,
									"end": 9575,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 9553,
									"end": 9732,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9553,
									"end": 9732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9553,
									"end": 9732,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9626,
									"end": 9635,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9621,
									"end": 9624,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9617,
									"end": 9636,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9611,
									"end": 9637,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9669,
									"end": 9717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 9711,
									"end": 9715,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 9703,
									"end": 9709,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 9699,
									"end": 9716,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 9688,
									"end": 9697,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9669,
									"end": 9717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 9669,
									"end": 9717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9669,
									"end": 9717,
									"name": "tag",
									"source": 6,
									"value": "189"
								},
								{
									"begin": 9669,
									"end": 9717,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9661,
									"end": 9667,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9654,
									"end": 9718,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9576,
									"end": 9732,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9553,
									"end": 9732,
									"name": "tag",
									"source": 6,
									"value": "188"
								},
								{
									"begin": 9553,
									"end": 9732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9778,
									"end": 9779,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 9774,
									"end": 9775,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 9766,
									"end": 9772,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9762,
									"end": 9776,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 9758,
									"end": 9780,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9752,
									"end": 9756,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 9745,
									"end": 9781,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 9180,
									"end": 9791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9180,
									"end": 9791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9180,
									"end": 9791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9143,
									"end": 10030,
									"name": "tag",
									"source": 6,
									"value": "180"
								},
								{
									"begin": 9143,
									"end": 10030,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9143,
									"end": 10030,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8733,
									"end": 10036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8733,
									"end": 10036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8733,
									"end": 10036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8641,
									"end": 10036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8641,
									"end": 10036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8641,
									"end": 10036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10042,
									"end": 10160,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 10042,
									"end": 10160,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10129,
									"end": 10153,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10147,
									"end": 10152,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10129,
									"end": 10153,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 10129,
									"end": 10153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10129,
									"end": 10153,
									"name": "tag",
									"source": 6,
									"value": "191"
								},
								{
									"begin": 10129,
									"end": 10153,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10124,
									"end": 10127,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10117,
									"end": 10154,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10042,
									"end": 10160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10042,
									"end": 10160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10042,
									"end": 10160,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10166,
									"end": 10388,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 10166,
									"end": 10388,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10259,
									"end": 10263,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10297,
									"end": 10299,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10286,
									"end": 10295,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10282,
									"end": 10300,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10274,
									"end": 10300,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10274,
									"end": 10300,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10310,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 10378,
									"end": 10379,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10367,
									"end": 10376,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10363,
									"end": 10380,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10354,
									"end": 10360,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10310,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 10310,
									"end": 10381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10310,
									"end": 10381,
									"name": "tag",
									"source": 6,
									"value": "193"
								},
								{
									"begin": 10310,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10166,
									"end": 10388,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10166,
									"end": 10388,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10166,
									"end": 10388,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10166,
									"end": 10388,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10166,
									"end": 10388,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10394,
									"end": 10574,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 10394,
									"end": 10574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10442,
									"end": 10519,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10439,
									"end": 10440,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10432,
									"end": 10520,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10539,
									"end": 10543,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 10536,
									"end": 10537,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 10529,
									"end": 10544,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10563,
									"end": 10567,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 10560,
									"end": 10561,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10553,
									"end": 10568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 10580,
									"end": 10771,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 10580,
									"end": 10771,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10620,
									"end": 10623,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10639,
									"end": 10659,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 10657,
									"end": 10658,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10639,
									"end": 10659,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 10639,
									"end": 10659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10639,
									"end": 10659,
									"name": "tag",
									"source": 6,
									"value": "196"
								},
								{
									"begin": 10639,
									"end": 10659,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10634,
									"end": 10659,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10634,
									"end": 10659,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10673,
									"end": 10693,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10691,
									"end": 10692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10673,
									"end": 10693,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 10673,
									"end": 10693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10673,
									"end": 10693,
									"name": "tag",
									"source": 6,
									"value": "197"
								},
								{
									"begin": 10673,
									"end": 10693,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10668,
									"end": 10693,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10668,
									"end": 10693,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10716,
									"end": 10717,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10713,
									"end": 10714,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10709,
									"end": 10718,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10702,
									"end": 10718,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 10702,
									"end": 10718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10737,
									"end": 10740,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 10734,
									"end": 10735,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10731,
									"end": 10741,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 10728,
									"end": 10764,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 10728,
									"end": 10764,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "198"
								},
								{
									"begin": 10728,
									"end": 10764,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 10744,
									"end": 10762,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10744,
									"end": 10762,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 10744,
									"end": 10762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10744,
									"end": 10762,
									"name": "tag",
									"source": 6,
									"value": "199"
								},
								{
									"begin": 10744,
									"end": 10762,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10728,
									"end": 10764,
									"name": "tag",
									"source": 6,
									"value": "198"
								},
								{
									"begin": 10728,
									"end": 10764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10580,
									"end": 10771,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 10580,
									"end": 10771,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 10580,
									"end": 10771,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10580,
									"end": 10771,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10580,
									"end": 10771,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10777,
									"end": 10895,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10777,
									"end": 10895,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10864,
									"end": 10888,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10882,
									"end": 10887,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 10864,
									"end": 10888,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 10864,
									"end": 10888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10864,
									"end": 10888,
									"name": "tag",
									"source": 6,
									"value": "201"
								},
								{
									"begin": 10864,
									"end": 10888,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10859,
									"end": 10862,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10852,
									"end": 10889,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 10777,
									"end": 10895,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10777,
									"end": 10895,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10777,
									"end": 10895,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10901,
									"end": 11343,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 10901,
									"end": 11343,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11050,
									"end": 11054,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11088,
									"end": 11090,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 11077,
									"end": 11086,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11073,
									"end": 11091,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11065,
									"end": 11091,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11065,
									"end": 11091,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11101,
									"end": 11172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 11169,
									"end": 11170,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11158,
									"end": 11167,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11154,
									"end": 11171,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11145,
									"end": 11151,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 11101,
									"end": 11172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 11101,
									"end": 11172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11101,
									"end": 11172,
									"name": "tag",
									"source": 6,
									"value": "203"
								},
								{
									"begin": 11101,
									"end": 11172,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11182,
									"end": 11254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "204"
								},
								{
									"begin": 11250,
									"end": 11252,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 11239,
									"end": 11248,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11235,
									"end": 11253,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11226,
									"end": 11232,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 11182,
									"end": 11254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 11182,
									"end": 11254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11182,
									"end": 11254,
									"name": "tag",
									"source": 6,
									"value": "204"
								},
								{
									"begin": 11182,
									"end": 11254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11264,
									"end": 11336,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 11332,
									"end": 11334,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 11321,
									"end": 11330,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11317,
									"end": 11335,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11308,
									"end": 11314,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11264,
									"end": 11336,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 11264,
									"end": 11336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11264,
									"end": 11336,
									"name": "tag",
									"source": 6,
									"value": "205"
								},
								{
									"begin": 11264,
									"end": 11336,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 10901,
									"end": 11343,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 10901,
									"end": 11343,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 10901,
									"end": 11343,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10901,
									"end": 11343,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10901,
									"end": 11343,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10901,
									"end": 11343,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10901,
									"end": 11343,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11349,
									"end": 11571,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 11349,
									"end": 11571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11442,
									"end": 11446,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11480,
									"end": 11482,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 11469,
									"end": 11478,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 11465,
									"end": 11483,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11457,
									"end": 11483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 11457,
									"end": 11483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11493,
									"end": 11564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "207"
								},
								{
									"begin": 11561,
									"end": 11562,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 11550,
									"end": 11559,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 11546,
									"end": 11563,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 11537,
									"end": 11543,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 11493,
									"end": 11564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 11493,
									"end": 11564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 11493,
									"end": 11564,
									"name": "tag",
									"source": 6,
									"value": "207"
								},
								{
									"begin": 11493,
									"end": 11564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 11349,
									"end": 11571,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 11349,
									"end": 11571,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 11349,
									"end": 11571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11349,
									"end": 11571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 11349,
									"end": 11571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 6392,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4e0f30767bc3fd53532e36d1ffab999ce5ac2e10e03fd0962394629c71b0a4f64736f6c634300081e0033",
									".code": [
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "C8C8EBE4"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "C8C8EBE4"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "E6EF73D6"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "F450C23A"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "9C8F9F23"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "9CD441DA"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "665A11CA"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "771A3A1D"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 6392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2515,
											"end": 3693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2515,
											"end": 3693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2515,
											"end": 3693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1141,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1141,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 668,
											"end": 696,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 668,
											"end": 696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 668,
											"end": 696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5489,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5489,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5489,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4745,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4745,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1785,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1785,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1785,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 802,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 802,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 736,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 736,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 736,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 877,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 877,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2733,
											"end": 2739,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2723,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2752,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2723,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2811,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2763,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2763,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2923,
											"end": 2962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2962,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2923,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3018,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3039,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3018,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2998,
											"end": 3039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3133,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3133,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3184,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3194,
											"end": 3200,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3184,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3184,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3184,
											"end": 3201,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3184,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3184,
											"end": 3216,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3184,
											"end": 3216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3162,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3162,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3412,
											"end": 3418,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3420,
											"end": 3429,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3402,
											"end": 3438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3402,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3495,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3536,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3495,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3615,
											"end": 3621,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3623,
											"end": 3633,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3660,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3635,
											"end": 3660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3635,
											"end": 3660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3660,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3635,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3606,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3661,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3606,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3685,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3674,
											"end": 3685,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 3693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 668,
											"end": 696,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5626,
											"end": 5653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5626,
											"end": 5653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5626,
											"end": 5653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5618,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5618,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5794,
											"end": 5807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5821,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5821,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5836,
											"end": 5846,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5861,
											"end": 5874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5889,
											"end": 5904,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5787,
											"end": 5915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5787,
											"end": 5915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6032,
											"end": 6045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6051,
											"name": "PUSH",
											"source": 0,
											"value": "89AFCB44"
										},
										{
											"begin": 6052,
											"end": 6062,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6017,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6017,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6017,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6063,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 6071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4868,
											"end": 4895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4868,
											"end": 4881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4868,
											"end": 4895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4860,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 4860,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4963,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4933,
											"end": 4987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4933,
											"end": 4987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5119,
											"end": 5129,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5131,
											"end": 5144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5146,
											"end": 5157,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5109,
											"end": 5158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5158,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5109,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5214,
											"end": 5226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5232,
											"end": 5245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5232,
											"end": 5250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5232,
											"end": 5272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5232,
											"end": 5272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5213,
											"end": 5272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 5283,
											"end": 5322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5283,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5418,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5403,
											"end": 5437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5437,
											"name": "PUSH",
											"source": 0,
											"value": "6A627842"
										},
										{
											"begin": 5438,
											"end": 5448,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5403,
											"end": 5449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5403,
											"end": 5449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 5449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4849,
											"end": 5457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4745,
											"end": 5457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1932,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1974,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 2013,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1974,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2083,
											"end": 2089,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2069,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2090,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2069,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2154,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2148,
											"end": 2166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2209,
											"end": 2215,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2199,
											"end": 2216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2231,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2177,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2177,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2362,
											"end": 2371,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2347,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2347,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2452,
											"end": 2463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2437,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2488,
											"end": 2499,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 2507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 802,
											"end": 837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 802,
											"end": 837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 736,
											"end": 762,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 736,
											"end": 762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 877,
											"end": 918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 877,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3875,
											"end": 4713,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3875,
											"end": 4713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4035,
											"end": 4055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4025,
											"end": 4031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4025,
											"end": 4055,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4025,
											"end": 4055,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4003,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 4003,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4173,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 4149,
											"end": 4164,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4149,
											"end": 4173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 4149,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4173,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4149,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4227,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4243,
											"end": 4253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4243,
											"end": 4263,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4239,
											"end": 4420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4349,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4350,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4394,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4408,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4420,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 4239,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4564,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4538,
											"end": 4564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4535,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4564,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 4484,
											"end": 4624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4484,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4695,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4702,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4674,
											"end": 4705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4674,
											"end": 4705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 4713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 4713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 4713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3701,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3701,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 3800,
											"end": 3807,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3800,
											"end": 3807,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3791,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3791,
											"end": 3807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3791,
											"end": 3807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3791,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 3791,
											"end": 3807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3791,
											"end": 3807,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3791,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3790,
											"end": 3816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3790,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3816,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3790,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3783,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3783,
											"end": 3816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3701,
											"end": 3840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3701,
											"end": 3840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3701,
											"end": 3840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3701,
											"end": 3840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4851,
											"end": 4856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4833,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4857,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4833,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4828,
											"end": 4831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 4967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5003,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4978,
											"end": 5004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4978,
											"end": 5004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5014,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5085,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 5014,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 5092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6100,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5768,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5929,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5916,
											"end": 5925,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 5930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5930,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5904,
											"end": 5930,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 6008,
											"end": 6009,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5997,
											"end": 6006,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 6010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5984,
											"end": 5990,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5940,
											"end": 6011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6011,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 5940,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6021,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6089,
											"end": 6091,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6078,
											"end": 6087,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6065,
											"end": 6071,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6021,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6021,
											"end": 6093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6021,
											"end": 6093,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6021,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6100,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6100,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6174,
											"end": 6180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6233,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6228,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6217,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6229,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6234,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6237,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6382,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 6427,
											"end": 6434,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6418,
											"end": 6424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6407,
											"end": 6416,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6403,
											"end": 6425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6382,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6435,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 6382,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6435,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6486,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 6555,
											"end": 6562,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6510,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 6510,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6455,
											"end": 6573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6654,
											"end": 6660,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6662,
											"end": 6668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6711,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6708,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6697,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6686,
											"end": 6709,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6682,
											"end": 6714,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6717,
											"end": 6796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 6717,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 6679,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 6907,
											"end": 6914,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6898,
											"end": 6904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6896,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6883,
											"end": 6905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6862,
											"end": 6915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 6862,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6852,
											"end": 6915,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6852,
											"end": 6915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6808,
											"end": 6925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6964,
											"end": 6966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 7035,
											"end": 7042,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7032,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6990,
											"end": 7043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7043,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6935,
											"end": 7053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 7060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 7060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7066,
											"end": 7246,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 7066,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7114,
											"end": 7191,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7111,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7192,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7211,
											"end": 7215,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7208,
											"end": 7209,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7201,
											"end": 7216,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7239,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7240,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7572,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 7252,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7296,
											"end": 7302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7333,
											"end": 7334,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7327,
											"end": 7331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7335,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7313,
											"end": 7335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7313,
											"end": 7335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7380,
											"end": 7381,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7374,
											"end": 7378,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7382,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7391,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 7391,
											"end": 7472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7457,
											"end": 7461,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 7449,
											"end": 7455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7435,
											"end": 7462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7435,
											"end": 7462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7391,
											"end": 7472,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 7391,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7519,
											"end": 7521,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7511,
											"end": 7517,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7508,
											"end": 7522,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7485,
											"end": 7523,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7482,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 7482,
											"end": 7566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 7538,
											"end": 7556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7482,
											"end": 7566,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 7482,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7572,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7572,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7578,
											"end": 7805,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 7578,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7752,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7702,
											"end": 7716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7695,
											"end": 7753,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7787,
											"end": 7797,
											"name": "PUSH",
											"source": 6,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7782,
											"end": 7784,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7774,
											"end": 7780,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7770,
											"end": 7785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7578,
											"end": 7805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7578,
											"end": 7805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 8177,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7811,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7953,
											"end": 7956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 8038,
											"end": 8040,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 8033,
											"end": 8036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7974,
											"end": 8041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 8041,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 7974,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 8139,
											"end": 8142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8050,
											"end": 8143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8143,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 8050,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8170,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8171,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8152,
											"end": 8171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8152,
											"end": 8171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 8177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 8177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 8177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 8177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8602,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 8183,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8387,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8376,
											"end": 8385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8372,
											"end": 8390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8364,
											"end": 8390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8364,
											"end": 8390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8426,
											"end": 8446,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8422,
											"end": 8423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8420,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8407,
											"end": 8424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8447,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 8590,
											"end": 8594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8464,
											"end": 8595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8464,
											"end": 8595,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 8464,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8456,
											"end": 8595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8456,
											"end": 8595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8602,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8602,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8183,
											"end": 8602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8608,
											"end": 8788,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8608,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8656,
											"end": 8733,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8653,
											"end": 8654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8734,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8757,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8750,
											"end": 8751,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8743,
											"end": 8758,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8781,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8774,
											"end": 8775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8767,
											"end": 8782,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8794,
											"end": 8985,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 8794,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8834,
											"end": 8837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8853,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8853,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8853,
											"end": 8873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8853,
											"end": 8873,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 8853,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 8873,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 8873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 8905,
											"end": 8906,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8887,
											"end": 8907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8907,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 8887,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8882,
											"end": 8907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8882,
											"end": 8907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8930,
											"end": 8931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8927,
											"end": 8928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8951,
											"end": 8954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 8949,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8955,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8978,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 8942,
											"end": 8978,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8958,
											"end": 8976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 8958,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8978,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 8942,
											"end": 8978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8794,
											"end": 8985,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8794,
											"end": 8985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8794,
											"end": 8985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8794,
											"end": 8985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8794,
											"end": 8985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9212,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8991,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9131,
											"end": 9165,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E636520696E636C7564696E672074"
										},
										{
											"begin": 9127,
											"end": 9128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9119,
											"end": 9125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9115,
											"end": 9129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9108,
											"end": 9166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9204,
											"name": "PUSH",
											"source": 6,
											"value": "6178000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9195,
											"end": 9197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9187,
											"end": 9193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9183,
											"end": 9198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9176,
											"end": 9205,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8991,
											"end": 9212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9218,
											"end": 9584,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9218,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9360,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9381,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 9445,
											"end": 9447,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9440,
											"end": 9443,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 9381,
											"end": 9448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9448,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 9381,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9374,
											"end": 9448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9374,
											"end": 9448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9457,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 9546,
											"end": 9549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9457,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 9457,
											"end": 9550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9457,
											"end": 9550,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 9457,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9570,
											"end": 9573,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9566,
											"end": 9578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9559,
											"end": 9578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9559,
											"end": 9578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9218,
											"end": 9584,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9218,
											"end": 9584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9218,
											"end": 9584,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9218,
											"end": 9584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9590,
											"end": 10009,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 9590,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9756,
											"end": 9760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9796,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9783,
											"end": 9792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9771,
											"end": 9797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9771,
											"end": 9797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9843,
											"end": 9852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9837,
											"end": 9841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9833,
											"end": 9853,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9829,
											"end": 9830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9827,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 9831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9807,
											"end": 9854,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 9997,
											"end": 10001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9871,
											"end": 10002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 10002,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 9871,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9863,
											"end": 10002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9863,
											"end": 10002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9590,
											"end": 10009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9590,
											"end": 10009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9590,
											"end": 10009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9590,
											"end": 10009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10209,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 10015,
											"end": 10209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10055,
											"end": 10059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10075,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 10093,
											"end": 10094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 10075,
											"end": 10095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10095,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 10075,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10095,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10109,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 10127,
											"end": 10128,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10109,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 10109,
											"end": 10129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10109,
											"end": 10129,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 10109,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10129,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10150,
											"end": 10151,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10146,
											"end": 10155,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10171,
											"end": 10175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10179,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10165,
											"end": 10202,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10165,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 10165,
											"end": 10202,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 10182,
											"end": 10200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10165,
											"end": 10202,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 10165,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10209,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10215,
											"end": 10387,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 10215,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10355,
											"end": 10379,
											"name": "PUSH",
											"source": 6,
											"value": "4C697175696469747920706F6F6C206E6F742073657400000000000000000000"
										},
										{
											"begin": 10351,
											"end": 10352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10343,
											"end": 10349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10332,
											"end": 10380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10215,
											"end": 10387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10215,
											"end": 10387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10535,
											"end": 10538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 10620,
											"end": 10622,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 10615,
											"end": 10618,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10556,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 10556,
											"end": 10623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10556,
											"end": 10623,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 10556,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10632,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 10721,
											"end": 10724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10632,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 10632,
											"end": 10725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10632,
											"end": 10725,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 10632,
											"end": 10725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10752,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10745,
											"end": 10748,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10741,
											"end": 10753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10753,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10393,
											"end": 10759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10393,
											"end": 10759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10931,
											"end": 10935,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10969,
											"end": 10971,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10958,
											"end": 10967,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10946,
											"end": 10972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10946,
											"end": 10972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11018,
											"end": 11027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11012,
											"end": 11016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11028,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11004,
											"end": 11005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10993,
											"end": 11002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10989,
											"end": 11006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11029,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11046,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 11172,
											"end": 11176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11046,
											"end": 11177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 11046,
											"end": 11177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11046,
											"end": 11177,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 11046,
											"end": 11177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11038,
											"end": 11177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11038,
											"end": 11177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 11184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 11184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11190,
											"end": 11632,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 11190,
											"end": 11632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11339,
											"end": 11343,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11377,
											"end": 11379,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11366,
											"end": 11375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11362,
											"end": 11380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11354,
											"end": 11380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11390,
											"end": 11461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 11458,
											"end": 11459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11447,
											"end": 11456,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11443,
											"end": 11460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11434,
											"end": 11440,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11390,
											"end": 11461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 11390,
											"end": 11461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11390,
											"end": 11461,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 11390,
											"end": 11461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11471,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 11539,
											"end": 11541,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11528,
											"end": 11537,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11524,
											"end": 11542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11515,
											"end": 11521,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11471,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 11471,
											"end": 11543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11471,
											"end": 11543,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 11471,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11553,
											"end": 11625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 11621,
											"end": 11623,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11610,
											"end": 11619,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11606,
											"end": 11624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11597,
											"end": 11603,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11553,
											"end": 11625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 11553,
											"end": 11625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11553,
											"end": 11625,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 11553,
											"end": 11625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11190,
											"end": 11632,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11190,
											"end": 11632,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11190,
											"end": 11632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11190,
											"end": 11632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11190,
											"end": 11632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11190,
											"end": 11632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11190,
											"end": 11632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11638,
											"end": 11754,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 11638,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11708,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 11723,
											"end": 11728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11708,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 11708,
											"end": 11729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11708,
											"end": 11729,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 11708,
											"end": 11729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11701,
											"end": 11706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11698,
											"end": 11730,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11688,
											"end": 11748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 11688,
											"end": 11748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11744,
											"end": 11745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11734,
											"end": 11746,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11688,
											"end": 11748,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 11688,
											"end": 11748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11638,
											"end": 11754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11638,
											"end": 11754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11760,
											"end": 11897,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 11760,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11814,
											"end": 11819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11845,
											"end": 11851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11839,
											"end": 11852,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11830,
											"end": 11852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11830,
											"end": 11852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11861,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 11885,
											"end": 11890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11861,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 11861,
											"end": 11891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11861,
											"end": 11891,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 11861,
											"end": 11891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11760,
											"end": 11897,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11760,
											"end": 11897,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11760,
											"end": 11897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11760,
											"end": 11897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11760,
											"end": 11897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 12248,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 11903,
											"end": 12248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11970,
											"end": 11976,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12019,
											"end": 12021,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12007,
											"end": 12016,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11998,
											"end": 12005,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11994,
											"end": 12017,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11990,
											"end": 12022,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 11987,
											"end": 12106,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11987,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 11987,
											"end": 12106,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12025,
											"end": 12104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 12025,
											"end": 12104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 12025,
											"end": 12104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12025,
											"end": 12104,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 12025,
											"end": 12104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11987,
											"end": 12106,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 11987,
											"end": 12106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12145,
											"end": 12146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12170,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 12223,
											"end": 12230,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12214,
											"end": 12220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12203,
											"end": 12212,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12199,
											"end": 12221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12170,
											"end": 12231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 12170,
											"end": 12231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12170,
											"end": 12231,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 12170,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12160,
											"end": 12231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12160,
											"end": 12231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12116,
											"end": 12241,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 12248,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 12248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 12248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 12248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 12248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12254,
											"end": 12397,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 12254,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12311,
											"end": 12316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12342,
											"end": 12348,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12336,
											"end": 12349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12327,
											"end": 12349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12327,
											"end": 12349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12358,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 12385,
											"end": 12390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12358,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 12358,
											"end": 12391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12358,
											"end": 12391,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 12358,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12254,
											"end": 12397,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12254,
											"end": 12397,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12254,
											"end": 12397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12254,
											"end": 12397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12254,
											"end": 12397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12403,
											"end": 12910,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 12403,
											"end": 12910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12482,
											"end": 12488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12490,
											"end": 12496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12539,
											"end": 12541,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12527,
											"end": 12536,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12518,
											"end": 12525,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12514,
											"end": 12537,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12510,
											"end": 12542,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 12507,
											"end": 12626,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12507,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 12507,
											"end": 12626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12545,
											"end": 12624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 12545,
											"end": 12624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 12545,
											"end": 12624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12545,
											"end": 12624,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 12545,
											"end": 12624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12507,
											"end": 12626,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 12507,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12665,
											"end": 12666,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12690,
											"end": 12754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 12746,
											"end": 12753,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12737,
											"end": 12743,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12726,
											"end": 12735,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12722,
											"end": 12744,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 12754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 12690,
											"end": 12754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12690,
											"end": 12754,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 12690,
											"end": 12754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12680,
											"end": 12754,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12680,
											"end": 12754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12636,
											"end": 12764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12803,
											"end": 12805,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12829,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 12885,
											"end": 12892,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12876,
											"end": 12882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12865,
											"end": 12874,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12861,
											"end": 12883,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12829,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 12829,
											"end": 12893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12829,
											"end": 12893,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 12829,
											"end": 12893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12819,
											"end": 12893,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12819,
											"end": 12893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12774,
											"end": 12903,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12403,
											"end": 12910,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12403,
											"end": 12910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12403,
											"end": 12910,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12403,
											"end": 12910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12403,
											"end": 12910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12403,
											"end": 12910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 13085,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 12916,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13056,
											"end": 13077,
											"name": "PUSH",
											"source": 6,
											"value": "45544820616D6F756E74206D69736D6174636800000000000000000000000000"
										},
										{
											"begin": 13052,
											"end": 13053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13050,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13040,
											"end": 13054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13033,
											"end": 13078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 13085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 13085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13091,
											"end": 13457,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 13091,
											"end": 13457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13233,
											"end": 13236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13254,
											"end": 13321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 13318,
											"end": 13320,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 13313,
											"end": 13316,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13254,
											"end": 13321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 13254,
											"end": 13321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13254,
											"end": 13321,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 13254,
											"end": 13321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13247,
											"end": 13321,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13247,
											"end": 13321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13330,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 13419,
											"end": 13422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13330,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 13330,
											"end": 13423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13330,
											"end": 13423,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 13330,
											"end": 13423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13448,
											"end": 13450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13443,
											"end": 13446,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13439,
											"end": 13451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13432,
											"end": 13451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13432,
											"end": 13451,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13091,
											"end": 13457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13091,
											"end": 13457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13091,
											"end": 13457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13091,
											"end": 13457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13463,
											"end": 13882,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 13463,
											"end": 13882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13629,
											"end": 13633,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13667,
											"end": 13669,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13656,
											"end": 13665,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13652,
											"end": 13670,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 13670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 13670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13716,
											"end": 13725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13710,
											"end": 13714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13706,
											"end": 13726,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13702,
											"end": 13703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13691,
											"end": 13700,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13687,
											"end": 13704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13680,
											"end": 13727,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13744,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 13870,
											"end": 13874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13744,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 13744,
											"end": 13875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13744,
											"end": 13875,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 13744,
											"end": 13875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13736,
											"end": 13875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13736,
											"end": 13875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13463,
											"end": 13882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13463,
											"end": 13882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13463,
											"end": 13882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13463,
											"end": 13882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13888,
											"end": 14035,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 13888,
											"end": 14035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13989,
											"end": 14000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14026,
											"end": 14029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14011,
											"end": 14029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14011,
											"end": 14029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13888,
											"end": 14035,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13888,
											"end": 14035,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13888,
											"end": 14035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13888,
											"end": 14035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13888,
											"end": 14035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14041,
											"end": 14155,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 14041,
											"end": 14155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14041,
											"end": 14155,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14041,
											"end": 14155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14161,
											"end": 14559,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 14161,
											"end": 14559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14320,
											"end": 14323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14341,
											"end": 14424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 14422,
											"end": 14423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14417,
											"end": 14420,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14341,
											"end": 14424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 14341,
											"end": 14424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14341,
											"end": 14424,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 14341,
											"end": 14424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14334,
											"end": 14424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14334,
											"end": 14424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14433,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 14522,
											"end": 14525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14433,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 14433,
											"end": 14526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14433,
											"end": 14526,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 14433,
											"end": 14526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14551,
											"end": 14552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14546,
											"end": 14549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14542,
											"end": 14553,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14535,
											"end": 14553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14535,
											"end": 14553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14161,
											"end": 14559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14161,
											"end": 14559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14161,
											"end": 14559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14161,
											"end": 14559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14565,
											"end": 14944,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 14565,
											"end": 14944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14749,
											"end": 14752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14771,
											"end": 14918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 14914,
											"end": 14917,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14771,
											"end": 14918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 14771,
											"end": 14918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14771,
											"end": 14918,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 14771,
											"end": 14918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14764,
											"end": 14918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14764,
											"end": 14918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14935,
											"end": 14938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14928,
											"end": 14938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14928,
											"end": 14938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14565,
											"end": 14944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14565,
											"end": 14944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14565,
											"end": 14944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14565,
											"end": 14944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14950,
											"end": 15119,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 14950,
											"end": 15119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15090,
											"end": 15111,
											"name": "PUSH",
											"source": 6,
											"value": "455448207472616E73666572206661696C656400000000000000000000000000"
										},
										{
											"begin": 15086,
											"end": 15087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15078,
											"end": 15084,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15074,
											"end": 15088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15067,
											"end": 15112,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14950,
											"end": 15119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14950,
											"end": 15119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15125,
											"end": 15491,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 15125,
											"end": 15491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15267,
											"end": 15270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15288,
											"end": 15355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 15352,
											"end": 15354,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 15347,
											"end": 15350,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15288,
											"end": 15355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 15288,
											"end": 15355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15288,
											"end": 15355,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 15288,
											"end": 15355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15281,
											"end": 15355,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15281,
											"end": 15355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15364,
											"end": 15457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 15453,
											"end": 15456,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15364,
											"end": 15457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 15364,
											"end": 15457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15364,
											"end": 15457,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 15364,
											"end": 15457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15482,
											"end": 15484,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15477,
											"end": 15480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15473,
											"end": 15485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15466,
											"end": 15485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15466,
											"end": 15485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15125,
											"end": 15491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15125,
											"end": 15491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15125,
											"end": 15491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15125,
											"end": 15491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15497,
											"end": 15916,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 15497,
											"end": 15916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15663,
											"end": 15667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15701,
											"end": 15703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15690,
											"end": 15699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15678,
											"end": 15704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15678,
											"end": 15704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15750,
											"end": 15759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15744,
											"end": 15748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15740,
											"end": 15760,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15736,
											"end": 15737,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15725,
											"end": 15734,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15721,
											"end": 15738,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15714,
											"end": 15761,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15778,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 15904,
											"end": 15908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15778,
											"end": 15909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 15778,
											"end": 15909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15778,
											"end": 15909,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 15778,
											"end": 15909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15770,
											"end": 15909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15770,
											"end": 15909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15497,
											"end": 15916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15497,
											"end": 15916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15497,
											"end": 15916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15497,
											"end": 15916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15922,
											"end": 16273,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 15922,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15992,
											"end": 15998,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16041,
											"end": 16043,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16029,
											"end": 16038,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16020,
											"end": 16027,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16016,
											"end": 16039,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16012,
											"end": 16044,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 16009,
											"end": 16128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16009,
											"end": 16128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 16009,
											"end": 16128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16047,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 16047,
											"end": 16126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 16047,
											"end": 16126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16047,
											"end": 16126,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 16047,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16009,
											"end": 16128,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 16009,
											"end": 16128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16167,
											"end": 16168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16192,
											"end": 16256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 16248,
											"end": 16255,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16239,
											"end": 16245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16228,
											"end": 16237,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16224,
											"end": 16246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16192,
											"end": 16256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 16192,
											"end": 16256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16192,
											"end": 16256,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 16192,
											"end": 16256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16182,
											"end": 16256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16182,
											"end": 16256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16138,
											"end": 16266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15922,
											"end": 16273,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15922,
											"end": 16273,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15922,
											"end": 16273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15922,
											"end": 16273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15922,
											"end": 16273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16279,
											"end": 16461,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 16279,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16419,
											"end": 16453,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E73616374696F6E20616D6F756E742065786365656473206C696D6974"
										},
										{
											"begin": 16415,
											"end": 16416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16407,
											"end": 16413,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16403,
											"end": 16417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16396,
											"end": 16454,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16279,
											"end": 16461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16279,
											"end": 16461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16467,
											"end": 16833,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 16467,
											"end": 16833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16609,
											"end": 16612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16630,
											"end": 16697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 16694,
											"end": 16696,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16689,
											"end": 16692,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16630,
											"end": 16697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 16630,
											"end": 16697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16630,
											"end": 16697,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 16630,
											"end": 16697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16623,
											"end": 16697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16623,
											"end": 16697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16706,
											"end": 16799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 16795,
											"end": 16798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16706,
											"end": 16799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 16706,
											"end": 16799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16706,
											"end": 16799,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 16706,
											"end": 16799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16824,
											"end": 16826,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16819,
											"end": 16822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16815,
											"end": 16827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16808,
											"end": 16827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16808,
											"end": 16827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16467,
											"end": 16833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16467,
											"end": 16833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16467,
											"end": 16833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16467,
											"end": 16833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16839,
											"end": 17258,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 16839,
											"end": 17258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17005,
											"end": 17009,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17043,
											"end": 17045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17032,
											"end": 17041,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17028,
											"end": 17046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17020,
											"end": 17046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17020,
											"end": 17046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17092,
											"end": 17101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17086,
											"end": 17090,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17082,
											"end": 17102,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17078,
											"end": 17079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17067,
											"end": 17076,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17063,
											"end": 17080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17056,
											"end": 17103,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17120,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 17246,
											"end": 17250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17120,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 17120,
											"end": 17251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17120,
											"end": 17251,
											"name": "tag",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 17120,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17112,
											"end": 17251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17112,
											"end": 17251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16839,
											"end": 17258,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16839,
											"end": 17258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16839,
											"end": 17258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16839,
											"end": 17258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17264,
											"end": 17444,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 17264,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17312,
											"end": 17389,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17309,
											"end": 17310,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17302,
											"end": 17390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17409,
											"end": 17413,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 17406,
											"end": 17407,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 17399,
											"end": 17414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17433,
											"end": 17437,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 17430,
											"end": 17431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17423,
											"end": 17438,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 17450,
											"end": 17635,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 17450,
											"end": 17635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17490,
											"end": 17491,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17507,
											"end": 17527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 17525,
											"end": 17526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17507,
											"end": 17527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 17507,
											"end": 17527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17507,
											"end": 17527,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 17507,
											"end": 17527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17502,
											"end": 17527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17502,
											"end": 17527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17541,
											"end": 17561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 17559,
											"end": 17560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17541,
											"end": 17561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 17541,
											"end": 17561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17541,
											"end": 17561,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 17541,
											"end": 17561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17536,
											"end": 17561,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17536,
											"end": 17561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17580,
											"end": 17581,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17570,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 17570,
											"end": 17605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17585,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 17585,
											"end": 17603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 17585,
											"end": 17603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17585,
											"end": 17603,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 17585,
											"end": 17603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17570,
											"end": 17605,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 17570,
											"end": 17605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17627,
											"end": 17628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17624,
											"end": 17625,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17620,
											"end": 17629,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 17615,
											"end": 17629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17615,
											"end": 17629,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17450,
											"end": 17635,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17450,
											"end": 17635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17450,
											"end": 17635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17450,
											"end": 17635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17450,
											"end": 17635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17641,
											"end": 17823,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 17641,
											"end": 17823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17781,
											"end": 17815,
											"name": "PUSH",
											"source": 6,
											"value": "4461696C79207472616E73616374696F6E206C696D6974206578636565646564"
										},
										{
											"begin": 17777,
											"end": 17778,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17769,
											"end": 17775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17765,
											"end": 17779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17758,
											"end": 17816,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17641,
											"end": 17823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17641,
											"end": 17823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17829,
											"end": 18195,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 17829,
											"end": 18195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17971,
											"end": 17974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 18056,
											"end": 18058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18051,
											"end": 18054,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 17992,
											"end": 18059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 17992,
											"end": 18059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17985,
											"end": 18059,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17985,
											"end": 18059,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18068,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 18157,
											"end": 18160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18068,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 18068,
											"end": 18161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18068,
											"end": 18161,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 18068,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18186,
											"end": 18188,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18181,
											"end": 18184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18177,
											"end": 18189,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18170,
											"end": 18189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18170,
											"end": 18189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17829,
											"end": 18195,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17829,
											"end": 18195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17829,
											"end": 18195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17829,
											"end": 18195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18201,
											"end": 18620,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 18201,
											"end": 18620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18367,
											"end": 18371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18405,
											"end": 18407,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18394,
											"end": 18403,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18390,
											"end": 18408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18382,
											"end": 18408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18382,
											"end": 18408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18454,
											"end": 18463,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18448,
											"end": 18452,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18444,
											"end": 18464,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18440,
											"end": 18441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18429,
											"end": 18438,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18425,
											"end": 18442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18418,
											"end": 18465,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18482,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 18608,
											"end": 18612,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18482,
											"end": 18613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 18482,
											"end": 18613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18482,
											"end": 18613,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 18482,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18474,
											"end": 18613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18474,
											"end": 18613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18201,
											"end": 18620,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18201,
											"end": 18620,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18201,
											"end": 18620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18201,
											"end": 18620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18626,
											"end": 18859,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 18626,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18665,
											"end": 18668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18688,
											"end": 18712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 18706,
											"end": 18711,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18688,
											"end": 18712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 18688,
											"end": 18712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18688,
											"end": 18712,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 18688,
											"end": 18712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18679,
											"end": 18712,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18679,
											"end": 18712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18734,
											"end": 18800,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18727,
											"end": 18732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18724,
											"end": 18801,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 18721,
											"end": 18824,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 18804,
											"end": 18822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 18804,
											"end": 18822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 18804,
											"end": 18822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18804,
											"end": 18822,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 18804,
											"end": 18822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18721,
											"end": 18824,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 18721,
											"end": 18824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18851,
											"end": 18852,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 18844,
											"end": 18849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18840,
											"end": 18853,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18833,
											"end": 18853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18833,
											"end": 18853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18626,
											"end": 18859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18626,
											"end": 18859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18626,
											"end": 18859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18626,
											"end": 18859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18865,
											"end": 19275,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 18865,
											"end": 19275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18905,
											"end": 18912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18928,
											"end": 18948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 18946,
											"end": 18947,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18928,
											"end": 18948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 18928,
											"end": 18948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18928,
											"end": 18948,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 18928,
											"end": 18948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18923,
											"end": 18948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18923,
											"end": 18948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18962,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 18980,
											"end": 18981,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18962,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 18962,
											"end": 18982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18962,
											"end": 18982,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 18962,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18957,
											"end": 18982,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 18957,
											"end": 18982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19017,
											"end": 19018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19014,
											"end": 19015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19010,
											"end": 19019,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 19039,
											"end": 19069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 19057,
											"end": 19068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19039,
											"end": 19069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 19039,
											"end": 19069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19039,
											"end": 19069,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 19039,
											"end": 19069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19028,
											"end": 19069,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19028,
											"end": 19069,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19218,
											"end": 19219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19209,
											"end": 19216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19205,
											"end": 19220,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 19202,
											"end": 19203,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19199,
											"end": 19221,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 19179,
											"end": 19180,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19172,
											"end": 19181,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 19152,
											"end": 19235,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 19129,
											"end": 19268,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 19129,
											"end": 19268,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 19248,
											"end": 19266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 19248,
											"end": 19266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 19248,
											"end": 19266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19248,
											"end": 19266,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 19248,
											"end": 19266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19129,
											"end": 19268,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 19129,
											"end": 19268,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18913,
											"end": 19275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18865,
											"end": 19275,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 18865,
											"end": 19275,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18865,
											"end": 19275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18865,
											"end": 19275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18865,
											"end": 19275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19281,
											"end": 19723,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 19281,
											"end": 19723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19430,
											"end": 19434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19468,
											"end": 19470,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 19457,
											"end": 19466,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19453,
											"end": 19471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19445,
											"end": 19471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19445,
											"end": 19471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19481,
											"end": 19552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 19549,
											"end": 19550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19538,
											"end": 19547,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19534,
											"end": 19551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19525,
											"end": 19531,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 19481,
											"end": 19552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 19481,
											"end": 19552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19481,
											"end": 19552,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 19481,
											"end": 19552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19562,
											"end": 19634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 19630,
											"end": 19632,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19619,
											"end": 19628,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19615,
											"end": 19633,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19606,
											"end": 19612,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 19562,
											"end": 19634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 19562,
											"end": 19634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19562,
											"end": 19634,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 19562,
											"end": 19634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19644,
											"end": 19716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 19712,
											"end": 19714,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19701,
											"end": 19710,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19697,
											"end": 19715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19688,
											"end": 19694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19644,
											"end": 19716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 19644,
											"end": 19716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19644,
											"end": 19716,
											"name": "tag",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 19644,
											"end": 19716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19281,
											"end": 19723,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 19281,
											"end": 19723,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 19281,
											"end": 19723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19281,
											"end": 19723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19281,
											"end": 19723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19281,
											"end": 19723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19281,
											"end": 19723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"ShibStyleToken.sol",
								"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"node_modules/@openzeppelin/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"dailyTransactionCountLimit()": "f450c23a",
							"decimals()": "313ce567",
							"liquidityPool()": "665a11ca",
							"maxTransactionAmount()": "c8c8ebe4",
							"name()": "06fdde03",
							"removeLiquidity(uint256)": "9c8f9f23",
							"symbol()": "95d89b41",
							"taxRate()": "771a3a1d",
							"taxReceiver()": "e6ef73d6",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dailyTransactionCountLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_taxReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidityPool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyTransactionCountLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransactionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidityTokens\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ShibStyleToken.sol\":\"ShibStyleToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ShibStyleToken.sol\":{\"keccak256\":\"0x967af25ae9f74643fbf20d2265b2bcc16860b303c951f0f79e8fb379af5ea72e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0440b4381ae2e6b01e73ce6c1469c9e9707239e6539b71a85795f7b2aa0824\",\"dweb:/ipfs/QmZSQyB8ZZUVatzpHDZdYkQVpJ5HP9AKy8wovNsPfgr1pw\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 552,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 558,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 560,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 562,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 564,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 25,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "taxRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "taxReceiver",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 29,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "maxTransactionAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 31,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "dailyTransactionCountLimit",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 35,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "dailyTransactionCount",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "lastTransactionDay",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 41,
								"contract": "ShibStyleToken.sol:ShibStyleToken",
								"label": "liquidityPool",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 552,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 558,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 560,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 562,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 564,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ShibStyleToken.sol": {
				"ast": {
					"absolutePath": "ShibStyleToken.sol",
					"exportedSymbols": {
						"Context": [
							1178
						],
						"ERC20": [
							1044
						],
						"IERC20": [
							1122
						],
						"IERC20Errors": [
							434
						],
						"IERC20Metadata": [
							1148
						],
						"IUniswapV2Pair": [
							20
						],
						"ShibStyleToken": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "./node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1045,
							"src": "120:70:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1123,
							"src": "192:71:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "318:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "6a627842",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "349:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "362:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "354:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:12:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "392:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "384:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:19:0"
									},
									"scope": 20,
									"src": "340:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "418:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "433:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:28:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "477:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "469:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "494:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "486:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:34:0"
									},
									"scope": 20,
									"src": "409:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "308:198:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 21,
										"name": "ERC20",
										"nameLocations": [
											"537:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "537:5:0"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "537:5:0"
								}
							],
							"canonicalName": "ShibStyleToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1044,
								434,
								1148,
								1122,
								1178
							],
							"name": "ShibStyleToken",
							"nameLocation": "519:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "771a3a1d",
									"id": 25,
									"mutability": "mutable",
									"name": "taxRate",
									"nameLocation": "683:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "668:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "668:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030",
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "693:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "200"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6ef73d6",
									"id": 27,
									"mutability": "mutable",
									"name": "taxReceiver",
									"nameLocation": "751:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "736:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "736:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8c8ebe4",
									"id": 29,
									"mutability": "mutable",
									"name": "maxTransactionAmount",
									"nameLocation": "817:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "802:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "802:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f450c23a",
									"id": 31,
									"mutability": "mutable",
									"name": "dailyTransactionCountLimit",
									"nameLocation": "892:26:0",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "877:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 30,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "877:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "dailyTransactionCount",
									"nameLocation": "992:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "964:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 34,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "972:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "964:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "983:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "lastTransactionDay",
									"nameLocation": "1087:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "1059:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 38,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 36,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1067:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1059:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 37,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1078:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "665a11ca",
									"id": 41,
									"mutability": "mutable",
									"name": "liquidityPool",
									"nameLocation": "1156:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "1141:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 40,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1141:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1460:252:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 63,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1477:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1481:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1477:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "_initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "1489:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 62,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "1471:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1471:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1471:33:0"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 68,
														"name": "maxTransactionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1515:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 69,
														"name": "_maxTransactionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1538:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1515:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1515:44:0"
											},
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "dailyTransactionCountLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1570:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 73,
														"name": "_dailyTransactionCountLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1599:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1570:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1570:56:0"
											},
											{
												"expression": {
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "taxReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1637:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 77,
														"name": "_taxReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1651:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1637:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1637:26:0"
											},
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 80,
														"name": "liquidityPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1674:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 81,
														"name": "_liquidityPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "1690:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1674:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1674:30:0"
											}
										]
									},
									"id": 85,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 58,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 43,
													"src": "1446:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 59,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 45,
													"src": "1452:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 60,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 57,
												"name": "ERC20",
												"nameLocations": [
													"1440:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1044,
												"src": "1440:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1440:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1214:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1200:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 42,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1200:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1243:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1229:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1229:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "_initialSupply",
												"nameLocation": "1268:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1260:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "_maxTransactionAmount",
												"nameLocation": "1301:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1293:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "_dailyTransactionCountLimit",
												"nameLocation": "1341:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1333:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_taxReceiver",
												"nameLocation": "1387:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1379:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "_liquidityPool",
												"nameLocation": "1418:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1410:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:250:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1460:0:0"
									},
									"scope": 392,
									"src": "1178:534:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										654
									],
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "1894:613:0",
										"statements": [
											{
												"assignments": [
													96
												],
												"declarations": [
													{
														"constant": false,
														"id": 96,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "1913:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 142,
														"src": "1905:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 95,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1905:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 99,
												"initialValue": {
													"expression": {
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1922:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1926:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1922:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1905:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "1998:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2006:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 100,
														"name": "_checkTransactionLimits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1974:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1974:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1974:39:0"
											},
											{
												"assignments": [
													106
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "2057:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 142,
														"src": "2049:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2049:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 110,
												"initialValue": {
													"arguments": [
														{
															"id": 108,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2083:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 107,
														"name": "_calculateTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "2069:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2049:41:0"
											},
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "2134:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 142,
														"src": "2126:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "2148:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 114,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2157:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2148:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2126:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 119,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "2209:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 118,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "2199:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2199:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 121,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "2220:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2199:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520696e636c7564696e6720746178",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2246:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd",
																"typeString": "literal_string \"Insufficient balance including tax\""
															},
															"value": "Insufficient balance including tax"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd",
																"typeString": "literal_string \"Insufficient balance including tax\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2177:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "2177:116:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 129,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "2362:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 130,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 126,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2347:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ShibStyleToken_$392_$",
																"typeString": "type(contract super ShibStyleToken)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2353:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 654,
														"src": "2347:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2347:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2347:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 136,
															"name": "taxReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "2452:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 137,
															"name": "taxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2465:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 133,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2437:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ShibStyleToken_$392_$",
																"typeString": "type(contract super ShibStyleToken)"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2443:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 654,
														"src": "2437:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2437:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2437:38:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2495:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 94,
												"id": 141,
												"nodeType": "Return",
												"src": "2488:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1794:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 91,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1870:8:0"
									},
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1821:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1813:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1849:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1841:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:60:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1888:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1888:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:6:0"
									},
									"scope": 392,
									"src": "1785:722:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										727
									],
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2653:1040:0",
										"statements": [
											{
												"assignments": [
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "2704:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "2696:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2696:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"arguments": [
														{
															"id": 158,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2733:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2741:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2745:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2741:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 157,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2723:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2696:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 164,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2785:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 165,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "2805:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2785:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2826:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2763:116:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2947:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "2955:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 170,
														"name": "_checkTransactionLimits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "2923:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2923:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "2923:39:0"
											},
											{
												"assignments": [
													176
												],
												"declarations": [
													{
														"constant": false,
														"id": 176,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "3006:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "2998:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2998:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"arguments": [
														{
															"id": 178,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3032:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 177,
														"name": "_calculateTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "3018:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2998:41:0"
											},
											{
												"assignments": [
													182
												],
												"declarations": [
													{
														"constant": false,
														"id": 182,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "3119:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "3111:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 186,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 183,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "3133:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 184,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "3142:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3133:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 189,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3194:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 188,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "3184:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3184:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 191,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "3205:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3184:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520696e636c7564696e6720746178",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3231:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd",
																"typeString": "literal_string \"Insufficient balance including tax\""
															},
															"value": "Insufficient balance including tax"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98c6daad82f90fc1f0de2589f6223afc6869e2f77a7b1212516ad02ea98496bd",
																"typeString": "literal_string \"Insufficient balance including tax\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3162:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "3162:116:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3412:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 198,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "3420:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "3431:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 196,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3402:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3402:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "3402:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3505:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 204,
															"name": "taxReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3513:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 205,
															"name": "taxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "3526:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 202,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3495:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3495:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "3495:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 209,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3615:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 210,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3623:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3627:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3623:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 212,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "3635:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 213,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "3654:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3635:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 208,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															935,
															995
														],
														"referencedDeclaration": 935,
														"src": "3606:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3606:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "3606:55:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3681:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 154,
												"id": 218,
												"nodeType": "Return",
												"src": "3674:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2524:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2629:8:0"
									},
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2580:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2572:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2608:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2536:85:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2647:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2646:6:0"
									},
									"scope": 392,
									"src": "2515:1178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "3772:68:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 227,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "3791:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 228,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "3800:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3791:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 230,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3790:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3811:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "3790:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 233,
												"nodeType": "Return",
												"src": "3783:33:0"
											}
										]
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateTax",
									"nameLocation": "3710:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3732:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "3724:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3723:16:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "3763:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3762:9:0"
									},
									"scope": 392,
									"src": "3701:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "3949:764:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "4025:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 244,
																"name": "maxTransactionAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "4035:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4025:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e20616d6f756e742065786365656473206c696d6974",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4070:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb",
																"typeString": "literal_string \"Transaction amount exceeds limit\""
															},
															"value": "Transaction amount exceeds limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_426179e26868ec5c17f48555ecfed8aa1f3adbfda01d2c5e2b55191e95b4aecb",
																"typeString": "literal_string \"Transaction amount exceeds limit\""
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4003:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4003:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "4003:112:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "currentDay",
														"nameLocation": "4136:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 293,
														"src": "4128:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4128:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 255,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 251,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4149:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4155:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4149:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4167:6:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "4149:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4128:45:0"
											},
											{
												"assignments": [
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"mutability": "mutable",
														"name": "lastDay",
														"nameLocation": "4192:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 293,
														"src": "4184:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 256,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4184:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"baseExpression": {
														"id": 258,
														"name": "lastTransactionDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "4202:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 260,
													"indexExpression": {
														"id": 259,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "4221:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4202:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4184:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 262,
														"name": "currentDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "4243:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 263,
														"name": "lastDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4256:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4243:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 278,
												"nodeType": "IfStatement",
												"src": "4239:181:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "4265:155:0",
													"statements": [
														{
															"expression": {
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 265,
																		"name": "dailyTransactionCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 35,
																		"src": "4321:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 267,
																	"indexExpression": {
																		"id": 266,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "4343:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4321:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4353:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4321:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 270,
															"nodeType": "ExpressionStatement",
															"src": "4321:33:0"
														},
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 271,
																		"name": "lastTransactionDay",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "4369:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "4388:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4369:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 274,
																	"name": "currentDay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "4398:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4369:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "4369:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 280,
																	"name": "dailyTransactionCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "4506:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 282,
																"indexExpression": {
																	"id": 281,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "4528:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4506:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 283,
																"name": "dailyTransactionCountLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "4538:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4506:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4461696c79207472616e73616374696f6e206c696d6974206578636565646564",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4579:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3",
																"typeString": "literal_string \"Daily transaction limit exceeded\""
															},
															"value": "Daily transaction limit exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26c315c8778652a1a674a4b9de4a38989441600a85f5abf0db96083310e7c9b3",
																"typeString": "literal_string \"Daily transaction limit exceeded\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4484:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4484:140:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "4484:140:0"
											},
											{
												"expression": {
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4674:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 288,
															"name": "dailyTransactionCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "4674:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 290,
														"indexExpression": {
															"id": 289,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "4696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4674:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "4674:31:0"
											}
										]
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkTransactionLimits",
									"nameLocation": "3884:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3916:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "3908:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3932:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "3924:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:32:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3949:0:0"
									},
									"scope": 392,
									"src": "3875:838:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "4849:608:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "liquidityPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "4868:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4893:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4885:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 303,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4885:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4885:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4868:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696469747920706f6f6c206e6f7420736574",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4897:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448",
																"typeString": "literal_string \"Liquidity pool not set\""
															},
															"value": "Liquidity pool not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448",
																"typeString": "literal_string \"Liquidity pool not set\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4860:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4860:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "4860:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "4941:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 313,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4954:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4958:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4954:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4941:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e74206d69736d61746368",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4965:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7",
																"typeString": "literal_string \"ETH amount mismatch\""
															},
															"value": "ETH amount mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_645e873b9eee12b063db2eb84e35e8b51facdf3f28a2eaef195a9a9f115f5fc7",
																"typeString": "literal_string \"ETH amount mismatch\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4933:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "4933:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 320,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5119:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5123:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5119:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "liquidityPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "5131:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 323,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5146:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "5109:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5109:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "5109:49:0"
											},
											{
												"assignments": [
													327,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5219:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "5214:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 326,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5214:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 334,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5269:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 328,
																"name": "liquidityPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "5232:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5246:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5232:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 330,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5258:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5232:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5232:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5213:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5291:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455448207472616e73666572206661696c6564",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5300:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																"typeString": "literal_string \"ETH transfer failed\""
															},
															"value": "ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																"typeString": "literal_string \"ETH transfer failed\""
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5283:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5283:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "5283:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 344,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5438:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5442:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5438:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 341,
																	"name": "liquidityPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "5418:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 340,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "5403:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$20_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5403:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$20",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5433:4:0",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "5403:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) external returns (uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5403:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "5403:46:0"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "4754:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "4785:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "4777:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "4815:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "4807:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:65:0"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4849:0:0"
									},
									"scope": 392,
									"src": "4745:712:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "5607:464:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 359,
																"name": "liquidityPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "5626:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5651:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5643:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 360,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5643:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5643:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5626:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697175696469747920706f6f6c206e6f7420736574",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5655:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448",
																"typeString": "literal_string \"Liquidity pool not set\""
															},
															"value": "Liquidity pool not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0da6e9a95cc48179eba1cfc38c1941eff9d5ba3612206b95a2eb6082f72e448",
																"typeString": "literal_string \"Liquidity pool not set\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5618:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5618:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5618:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 372,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5836:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5840:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5836:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "liquidityPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "5861:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "liquidityTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "5889:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 369,
																	"name": "liquidityPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "5794:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 368,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "5787:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1122_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5787:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1122",
																"typeString": "contract IERC20"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5809:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1121,
														"src": "5787:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5787:128:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "5787:128:0"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 378,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "5997:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 379,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "6006:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 380,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5996:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 385,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6052:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6056:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6052:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 382,
																		"name": "liquidityPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "6032:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 381,
																	"name": "IUniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "6017:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$20_$",
																		"typeString": "type(contract IUniswapV2Pair)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6017:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Pair_$20",
																	"typeString": "contract IUniswapV2Pair"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6047:4:0",
															"memberName": "burn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 19,
															"src": "6017:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (address) external returns (uint256,uint256)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6017:46:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "5996:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "5996:67:0"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "5498:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "liquidityTokens",
												"nameLocation": "5532:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5524:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5513:41:0"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5581:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5598:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5590:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5572:34:0"
									},
									"scope": 392,
									"src": "5489:582:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "510:5882:0",
							"usedErrors": [
								404,
								409,
								414,
								423,
								428,
								433
							],
							"usedEvents": [
								1056,
								1065
							]
						}
					],
					"src": "33:6361:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							529
						],
						"IERC20Errors": [
							434
						],
						"IERC721Errors": [
							482
						]
					},
					"id": 530,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 434,
							"linearizedBaseContracts": [
								434
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 404,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 409,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 414,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 423,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 428,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 433,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 530,
							"src": "280:1764:1",
							"usedErrors": [
								404,
								409,
								414,
								423,
								428,
								433
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 482,
							"linearizedBaseContracts": [
								482
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 440,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 445,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 454,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 459,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 464,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 471,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 476,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 481,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 530,
							"src": "2190:2092:1",
							"usedErrors": [
								440,
								445,
								454,
								459,
								464,
								471,
								476,
								481
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 483,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 529,
							"linearizedBaseContracts": [
								529
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 494,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 499,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 504,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 511,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 516,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 521,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 528,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 530,
							"src": "4430:2107:1",
							"usedErrors": [
								494,
								499,
								504,
								511,
								516,
								521,
								528
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1178
						],
						"ERC20": [
							1044
						],
						"IERC20": [
							1122
						],
						"IERC20Errors": [
							434
						],
						"IERC20Metadata": [
							1148
						]
					},
					"id": 1045,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 531,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 533,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 1123,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 532,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1122,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 535,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 1149,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 534,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1148,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 537,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 1179,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 536,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1178,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 539,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 530,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 538,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 434,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 541,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "1133:7:2"
									},
									"id": 542,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 543,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1122,
										"src": "1142:6:2"
									},
									"id": 544,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 545,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1148,
										"src": "1150:14:2"
									},
									"id": 546,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 547,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 434,
										"src": "1166:12:2"
									},
									"id": 548,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 540,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1044,
							"linearizedBaseContracts": [
								1044,
								434,
								1148,
								1122,
								1178
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 552,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 551,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 549,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 550,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 558,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 557,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 553,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 556,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 554,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 555,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 560,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 559,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 562,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 561,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 564,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 563,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 573,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 576,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 577,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 581,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 566,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 568,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 1044,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1135
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 587,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 562,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 586,
												"id": 588,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 1044,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1141
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 596,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 564,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 595,
												"id": 597,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 1044,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1147
									],
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 604,
												"id": 606,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 602,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 1044,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1071
									],
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "2864:36:2",
										"statements": [
											{
												"expression": {
													"id": 614,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 560,
													"src": "2881:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 613,
												"id": 615,
												"nodeType": "Return",
												"src": "2874:19:2"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:2"
									},
									"scope": 1044,
									"src": "2803:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1079
									],
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "3007:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 625,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "3024:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 627,
													"indexExpression": {
														"id": 626,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "3034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 624,
												"id": 628,
												"nodeType": "Return",
												"src": "3017:25:2"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:2"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2998:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:2"
									},
									"scope": 1044,
									"src": "2933:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1089
									],
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "3319:103:2",
										"statements": [
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "3329:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 640,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 644,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 642,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "3345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "3377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "3384:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "3388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 645,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 639,
												"id": 652,
												"nodeType": "Return",
												"src": "3404:11:2"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "3262:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "3274:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:2"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "3313:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:2"
									},
									"scope": 1044,
									"src": "3244:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1099
									],
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "3544:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 664,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "3561:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 666,
														"indexExpression": {
															"id": 665,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3573:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 668,
													"indexExpression": {
														"id": 667,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "3580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 663,
												"id": 669,
												"nodeType": "Return",
												"src": "3554:34:2"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3489:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:2"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:2"
									},
									"scope": 1044,
									"src": "3455:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1109
									],
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "3981:107:2",
										"statements": [
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3991:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 681,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 683,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "4007:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "4038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 688,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 689,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "4054:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															935,
															995
														],
														"referencedDeclaration": 935,
														"src": "4029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 680,
												"id": 693,
												"nodeType": "Return",
												"src": "4070:11:2"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "3919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "3936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "3975:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:2"
									},
									"scope": 1044,
									"src": "3902:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "4773:151:2",
										"statements": [
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 726,
														"src": "4783:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 707,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 711,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 709,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 713,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "4839:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 715,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 712,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "4823:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 719,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "4880:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4890:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 718,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "4870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 706,
												"id": 725,
												"nodeType": "Return",
												"src": "4906:11:2"
											}
										]
									},
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "4702:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "4716:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "4728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:2"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "4767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:2"
									},
									"scope": 1044,
									"src": "4680:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "5366:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 737,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "5380:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 738,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 751,
												"nodeType": "IfStatement",
												"src": "5376:86:2",
												"trueBody": {
													"id": 750,
													"nodeType": "Block",
													"src": "5400:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 744,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 743,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "5421:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 749,
															"nodeType": "RevertStatement",
															"src": "5414:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 752,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "5475:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 753,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 766,
												"nodeType": "IfStatement",
												"src": "5471:86:2",
												"trueBody": {
													"id": 765,
													"nodeType": "Block",
													"src": "5493:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 759,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 758,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "5514:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 764,
															"nodeType": "RevertStatement",
															"src": "5507:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "5580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "5584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "5566:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:2"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5330:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:2"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:2"
									},
									"scope": 1044,
									"src": "5297:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "5987:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 784,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "6001:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 785,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 821,
													"nodeType": "Block",
													"src": "6175:362:2",
													"statements": [
														{
															"assignments": [
																796
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 796,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 821,
																	"src": "6189:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 795,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 800,
															"initialValue": {
																"baseExpression": {
																	"id": 797,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "6211:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 799,
																"indexExpression": {
																	"id": 798,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "6221:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 801,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "6244:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 802,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "6258:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 811,
															"nodeType": "IfStatement",
															"src": "6240:115:2",
															"trueBody": {
																"id": 810,
																"nodeType": "Block",
																"src": "6265:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 805,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 777,
																					"src": "6315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 806,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "6321:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 807,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 781,
																					"src": "6334:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 804,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 404,
																				"src": "6290:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 809,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:2"
																	}
																]
															}
														},
														{
															"id": 820,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 812,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "6475:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 814,
																			"indexExpression": {
																				"id": 813,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "6485:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 815,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 796,
																				"src": "6493:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 816,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 781,
																				"src": "6507:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 819,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:2"
																}
															]
														}
													]
												},
												"id": 822,
												"nodeType": "IfStatement",
												"src": "5997:540:2",
												"trueBody": {
													"id": 794,
													"nodeType": "Block",
													"src": "6021:148:2",
													"statements": [
														{
															"expression": {
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 790,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "6137:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 791,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "6153:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 793,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "6551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 824,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 842,
													"nodeType": "Block",
													"src": "6766:206:2",
													"statements": [
														{
															"id": 841,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 835,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "6925:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 837,
																			"indexExpression": {
																				"id": 836,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "6935:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 838,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "6942:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 840,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:2"
																}
															]
														}
													]
												},
												"id": 843,
												"nodeType": "IfStatement",
												"src": "6547:425:2",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "6569:191:2",
													"statements": [
														{
															"id": 833,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 829,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "6714:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 830,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "6730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 832,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 845,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "6996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "7002:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "7006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "6987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "EmitStatement",
												"src": "6982:30:2"
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "5929:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "5943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "5955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:2"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:2"
									},
									"scope": 1044,
									"src": "5912:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "7418:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 859,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "7432:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 860,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "7428:91:2",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "7455:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 866,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 865,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "7476:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 871,
															"nodeType": "RevertStatement",
															"src": "7469:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 875,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "7548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "7557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 874,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:2"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "7377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "7394:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:2"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:2"
									},
									"scope": 1044,
									"src": "7362:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "7944:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 892,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "7958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 893,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 906,
												"nodeType": "IfStatement",
												"src": "7954:89:2",
												"trueBody": {
													"id": 905,
													"nodeType": "Block",
													"src": "7981:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 899,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 898,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "8002:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 904,
															"nodeType": "RevertStatement",
															"src": "7995:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 908,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 909,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "8081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "8052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:2"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "7903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "7920:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:2"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:2"
									},
									"scope": 1044,
									"src": "7888:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "8704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 928,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "8723:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 929,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "8730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "8739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 927,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															935,
															995
														],
														"referencedDeclaration": 995,
														"src": "8714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:2"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "8648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "8663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "8680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:2"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:2"
									},
									"scope": 1044,
									"src": "8630:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "9703:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "9717:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 948,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 961,
												"nodeType": "IfStatement",
												"src": "9713:89:2",
												"trueBody": {
													"id": 960,
													"nodeType": "Block",
													"src": "9738:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 954,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 953,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 959,
															"nodeType": "RevertStatement",
															"src": "9752:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "9815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 963,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "9811:90:2",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "9838:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 969,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 968,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "9859:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "9852:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 977,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "9910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 980,
															"indexExpression": {
																"id": 978,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "9922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 981,
														"indexExpression": {
															"id": 979,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "9929:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 982,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "9940:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:2"
											},
											{
												"condition": {
													"id": 985,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 944,
													"src": "9959:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 993,
												"nodeType": "IfStatement",
												"src": "9955:76:2",
												"trueBody": {
													"id": 992,
													"nodeType": "Block",
													"src": "9970:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 987,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "9998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 988,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "10005:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 989,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "10014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 986,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "9989:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 991,
															"nodeType": "EmitStatement",
															"src": "9984:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "9623:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "9638:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "9655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "9670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:2"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:2"
									},
									"scope": 1044,
									"src": "9605:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "10408:387:2",
										"statements": [
											{
												"assignments": [
													1006
												],
												"declarations": [
													{
														"constant": false,
														"id": 1006,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1042,
														"src": "10418:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1005,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1011,
												"initialValue": {
													"arguments": [
														{
															"id": 1008,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "10455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "10462:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1007,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "10445:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1012,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "10484:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1014,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1013,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"nodeType": "IfStatement",
												"src": "10480:309:2",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "10522:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1019,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "10540:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1020,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "10559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1029,
															"nodeType": "IfStatement",
															"src": "10536:130:2",
															"trueBody": {
																"id": 1028,
																"nodeType": "Block",
																"src": "10566:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1023,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "10618:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1024,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1006,
																					"src": "10627:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1025,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "10645:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1022,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 423,
																				"src": "10591:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1027,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:2"
																	}
																]
															}
														},
														{
															"id": 1039,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1031,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "10716:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1032,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "10723:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1033,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1006,
																					"src": "10732:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1034,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "10751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1030,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				935,
																				995
																			],
																			"referencedDeclaration": 995,
																			"src": "10707:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1038,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "10344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "10359:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "10376:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:2"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 1044,
									"src": "10319:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1045,
							"src": "1106:9691:2",
							"usedErrors": [
								404,
								409,
								414,
								423,
								428,
								433
							],
							"usedEvents": [
								1056,
								1065
							]
						}
					],
					"src": "105:10693:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1122
						]
					},
					"id": 1123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1046,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1047,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1122,
							"linearizedBaseContracts": [
								1122
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1056,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1065,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1071,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 1122,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1079,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 1122,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 1122,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 1122,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 1122,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 1122,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1123,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								1056,
								1065
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1122
						],
						"IERC20Metadata": [
							1148
						]
					},
					"id": 1149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1124,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1149,
							"sourceUnit": 1123,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1125,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1122,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1128,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1122,
										"src": "306:6:4"
									},
									"id": 1129,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1127,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1148,
							"linearizedBaseContracts": [
								1148,
								1122
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1132,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 1148,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 1148,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1144,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 1148,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1149,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								1056,
								1065
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1178
						]
					},
					"id": 1179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1150,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1151,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1178,
							"linearizedBaseContracts": [
								1178
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1156,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1158,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1178,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1165,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1167,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1178,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1173,
												"id": 1175,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 1178,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1179,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			}
		}
	}
}